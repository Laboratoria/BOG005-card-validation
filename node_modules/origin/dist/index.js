module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./contracts/build/contracts/ClaimHolderLibrary.json":
/*!***********************************************************!*\
  !*** ./contracts/build/contracts/ClaimHolderLibrary.json ***!
  \***********************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_claims","type":"ClaimHolderLibrary.Claims storage"},{"name":"_topic","type":"uint256"},{"name":"_scheme","type":"uint256"},{"name":"_issuer","type":"address"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"name":"claimRequestId","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_claims","type":"ClaimHolderLibrary.Claims storage"},{"name":"_topic","type":"uint256[]"},{"name":"_issuer","type":"address[]"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_offsets","type":"uint256[]"}],"name":"addClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_claims","type":"ClaimHolderLibrary.Claims storage"},{"name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_claims","type":"ClaimHolderLibrary.Claims storage"},{"name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"name":"topic","type":"uint256"},{"name":"scheme","type":"uint256"},{"name":"issuer","type":"address"},{"name":"signature","type":"bytes"},{"name":"data","type":"bytes"},{"name":"uri","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x611230610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f300730000000000000000000000000000000000000000301460806040526004361061005f5763ffffffff60e060020a600035041663428e59ee81146100645780635c02fae1146101b25780638522d0eb146101e4578063bd2d0c281461035d575b600080fd5b81801561007057600080fd5b5060408051602060046044358181013583810280860185019096528085526101b0958335956024803596369695606495939492019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506104609650505050505050565b005b8180156101be57600080fd5b506101d0600435602435604435610532565b604080519115158252519081900360200190f35b6101f260043560243561094a565b6040518087815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561025b578181015183820152602001610243565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b838110156102bb5781810151838201526020016102a3565b50505050905090810190601f1680156102e85780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b8381101561031b578181015183820152602001610303565b50505050905090810190601f1680156103485780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b81801561036957600080fd5b50604080516020600460a43581810135601f810184900484028501840190955284845261044e9482359460248035956044359560643595608435600160a060020a0316953695929460c494920191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610b4a9650505050505050565b60408051918252519081900360200190f35b6000805b86518161ffff161015610527576104fd8989898461ffff1681518110151561048857fe5b9060200190602002015160018a8661ffff168151811015156104a657fe5b906020019060200201516104c38b8860410261ffff16604161102b565b6104e98b8a8c8b61ffff168151811015156104da57fe5b9060200190602002015161102b565b604080516020810190915260008152610b4a565b50828161ffff1681518110151561051057fe5b602090810290910101519190910190600101610464565b505050505050505050565b60003330146106f85773__KeyHolderLibrary______________________63d8188a4085336040516020018082600160a060020a0316600160a060020a03166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083106105c65780518252601f1990920191602091820191016105a7565b51815160209384036101000a60001901801990921691161790526040805192909401829003822063ffffffff891660e060020a0283526004830197909752602482019690965260016044820152915160648084019695509093509183900390910190508186803b15801561063957600080fd5b505af415801561064d573d6000803e3d6000fd5b505050506040513d602081101561066357600080fd5b505115156106f857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742060448201527f6b65790000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6000828152602084815260409182902060028082015482546001808501548751818152608097810188815260038801805494851615610100026000190190941696909604978101889052600160a060020a039094169792968a967f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a96929593946004820194600590920193919290830190606084019060a0850190889080156107e25780601f106107b7576101008083540402835291602001916107e2565b820191906000526020600020905b8154815290600101906020018083116107c557829003601f168201915b50508481038352865460026000196101006001841615020190911604808252602090910190879080156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b50508481038252855460026000196101006001841615020190911604808252602090910190869080156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b505097505050505050505060405180910390a460008281526020849052604081208181556001810182905560028101805473ffffffffffffffffffffffffffffffffffffffff19169055906109226003830182611122565b610930600483016000611122565b61093e600583016000611122565b50600195945050505050565b60008181526020838152604080832080546001808301546002808501546003860180548851601f968216156101000260001901909116939093049485018990048902830189019097528382528897889760609788978897909695600160a060020a039095169492936004830193600590930192918591830182828015610a115780601f106109e657610100808354040283529160200191610a11565b820191906000526020600020905b8154815290600101906020018083116109f457829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295985087945092508401905082828015610a9f5780601f10610a7457610100808354040283529160200191610a9f565b820191906000526020600020905b815481529060010190602001808311610a8257829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295975086945092508401905082828015610b2d5780601f10610b0257610100808354040283529160200191610b2d565b820191906000526020600020905b815481529060010190602001808311610b1057829003601f168201915b505050505090509550955095509550955095509295509295509295565b600080333014610d115773__KeyHolderLibrary______________________63d8188a408b336040516020018082600160a060020a0316600160a060020a03166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b60208310610bdf5780518252601f199092019160209182019101610bc0565b51815160209384036101000a60001901801990921691161790526040805192909401829003822063ffffffff891660e060020a0283526004830197909752602482019690965260036044820152915160648084019695509093509183900390910190508186803b158015610c5257600080fd5b505af4158015610c66573d6000803e3d6000fd5b505050506040513d6020811015610c7c57600080fd5b50511515610d1157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f53656e64657220646f6573206e6f74206861766520636c61696d207369676e6560448201527f72206b6579000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b85886040516020018083600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610d895780518252601f199092019160209182019101610d6a565b51815160209384036101000a600019018019909216911617905260408051929094018290039091206000818152918f90529290206002015491945050600160a060020a038981169116149150610dff90505760008881526001808b01602090815260408320805492830181558352909120018190555b600081815260208a815260409091208981556001810189905560028101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a161790558651610e5692600390920191880190611169565b50600081815260208a815260409091208551610e7a92600490920191870190611169565b50600081815260208a815260409091208451610e9e92600590920191860190611169565b5085600160a060020a03168882600019167f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c58a89898960405180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610f1f578181015183820152602001610f07565b50505050905090810190601f168015610f4c5780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015610f7f578181015183820152602001610f67565b50505050905090810190601f168015610fac5780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015610fdf578181015183820152602001610fc7565b50505050905090810190601f16801561100c5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a49998505050505050505050565b606080600080846040519080825280601f01601f19166020018201604052801561105f578160200160208202803883390190505b509250600091508590505b84860181101561111757868181518110151561108257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838151811015156110db57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001918201910161106a565b509095945050505050565b50805460018160011615610100020316600290046000825580601f106111485750611166565b601f01602090049060005260206000209081019061116691906111e7565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111aa57805160ff19168380011785556111d7565b828001600101855582156111d7579182015b828111156111d75782518255916020019190600101906111bc565b506111e39291506111e7565b5090565b61120191905b808211156111e357600081556001016111ed565b905600a165627a7a723058206b1db9ecb79c46be806e2a45bc586a6ef82c14f02bbf3a84366788d35e0def250029","contractName":"ClaimHolderLibrary","networks":{"1":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"}},"links":{"KeyHolderLibrary":"0x7d26ae0838c4e15a87e9d3b26b03a0256c7554d8"},"address":"0x79b152da4ad8fb774700639bed68a965b0440644","transactionHash":"0x4b873babbc32e2b9442c1f6fb741f11dccb7e35f08a43f90cb62a3743a6af886"},"4":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"}},"links":{"KeyHolderLibrary":"0x10d49d64b983ad887aa783ad10de75d42abab2e9"},"address":"0x75601c2dc926b0e3ce41b1ae719290c62aba978e","transactionHash":"0xefe7eefc273f78224e00c6fe96c8efb1acc797865f6921c37f547599c6e5de0e"}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolderLibrary.sol","exportedSymbols":{"ClaimHolderLibrary":[631]},"id":632,"nodeType":"SourceUnit","nodes":[{"id":182,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/KeyHolderLibrary.sol","file":"./KeyHolderLibrary.sol","id":183,"nodeType":"ImportDirective","scope":632,"sourceUnit":2103,"src":"26:32:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"id":631,"linearizedBaseContracts":[631],"name":"ClaimHolderLibrary","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":199,"name":"ClaimAdded","nodeType":"EventDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"indexed":true,"name":"claimId","nodeType":"VariableDeclaration","scope":199,"src":"111:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"111:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":187,"indexed":true,"name":"topic","nodeType":"VariableDeclaration","scope":199,"src":"136:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":189,"indexed":false,"name":"scheme","nodeType":"VariableDeclaration","scope":199,"src":"159:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"159:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":191,"indexed":true,"name":"issuer","nodeType":"VariableDeclaration","scope":199,"src":"175:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"175:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":193,"indexed":false,"name":"signature","nodeType":"VariableDeclaration","scope":199,"src":"199:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":192,"name":"bytes","nodeType":"ElementaryTypeName","src":"199:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":195,"indexed":false,"name":"data","nodeType":"VariableDeclaration","scope":199,"src":"216:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":194,"name":"bytes","nodeType":"ElementaryTypeName","src":"216:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":197,"indexed":false,"name":"uri","nodeType":"VariableDeclaration","scope":199,"src":"228:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"228:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"110:129:2"},"src":"94:146:2"},{"anonymous":false,"documentation":null,"id":215,"name":"ClaimRemoved","nodeType":"EventDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"indexed":true,"name":"claimId","nodeType":"VariableDeclaration","scope":215,"src":"264:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"264:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":203,"indexed":true,"name":"topic","nodeType":"VariableDeclaration","scope":215,"src":"289:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"289:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":205,"indexed":false,"name":"scheme","nodeType":"VariableDeclaration","scope":215,"src":"312:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":207,"indexed":true,"name":"issuer","nodeType":"VariableDeclaration","scope":215,"src":"328:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":209,"indexed":false,"name":"signature","nodeType":"VariableDeclaration","scope":215,"src":"352:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":208,"name":"bytes","nodeType":"ElementaryTypeName","src":"352:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"name":"data","nodeType":"VariableDeclaration","scope":215,"src":"369:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":210,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":213,"indexed":false,"name":"uri","nodeType":"VariableDeclaration","scope":215,"src":"381:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":212,"name":"string","nodeType":"ElementaryTypeName","src":"381:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"263:129:2"},"src":"245:148:2"},{"canonicalName":"ClaimHolderLibrary.Claim","id":228,"members":[{"constant":false,"id":217,"name":"topic","nodeType":"VariableDeclaration","scope":228,"src":"422:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"422:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":219,"name":"scheme","nodeType":"VariableDeclaration","scope":228,"src":"445:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":221,"name":"issuer","nodeType":"VariableDeclaration","scope":228,"src":"469:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":223,"name":"signature","nodeType":"VariableDeclaration","scope":228,"src":"507:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"507:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":225,"name":"data","nodeType":"VariableDeclaration","scope":228,"src":"563:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":224,"name":"bytes","nodeType":"ElementaryTypeName","src":"563:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":227,"name":"uri","nodeType":"VariableDeclaration","scope":228,"src":"583:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":226,"name":"string","nodeType":"ElementaryTypeName","src":"583:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"name":"Claim","nodeType":"StructDefinition","scope":631,"src":"399:201:2","visibility":"public"},{"canonicalName":"ClaimHolderLibrary.Claims","id":238,"members":[{"constant":false,"id":232,"name":"byId","nodeType":"VariableDeclaration","scope":238,"src":"630:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim)"},"typeName":{"id":231,"keyType":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"639:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"630:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim)"},"valueType":{"contractScope":null,"id":230,"name":"Claim","nodeType":"UserDefinedTypeName","referencedDeclaration":228,"src":"650:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage_ptr","typeString":"struct ClaimHolderLibrary.Claim"}}},"value":null,"visibility":"internal"},{"constant":false,"id":237,"name":"byTopic","nodeType":"VariableDeclaration","scope":238,"src":"671:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[])"},"typeName":{"id":236,"keyType":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"671:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[])"},"valueType":{"baseType":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"691:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":235,"length":null,"nodeType":"ArrayTypeName","src":"691:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"value":null,"visibility":"internal"}],"name":"Claims","nodeType":"StructDefinition","scope":631,"src":"606:110:2","visibility":"public"},{"body":{"id":377,"nodeType":"Block","src":"1043:892:2","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"1057:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1057:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"1079:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ClaimHolderLibrary_$631","typeString":"library ClaimHolderLibrary"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ClaimHolderLibrary_$631","typeString":"library ClaimHolderLibrary"}],"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1071:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1071:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1057:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":282,"nodeType":"IfStatement","src":"1053:198:2","trueBody":{"id":281,"nodeType":"Block","src":"1086:165:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":268,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1139:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"1182:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1182:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"1165:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1165:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1165:28:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"1155:9:2","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1155:39:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"33","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1196:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"expression":{"argumentTypes":null,"id":266,"name":"KeyHolderLibrary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"1108:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_KeyHolderLibrary_$2102_$","typeString":"type(library KeyHolderLibrary)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"keyHasPurpose","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"1108:30:2","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1108:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656e64657220646f6573206e6f74206861766520636c61696d207369676e6572206b6579","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1200:39:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_43a05665781b32cc8024b11b99adbd97618bb3fd5a923c29ee6dfc9548ed823a","typeString":"literal_string \"Sender does not have claim signer key\""},"value":"Sender does not have claim signer key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43a05665781b32cc8024b11b99adbd97618bb3fd5a923c29ee6dfc9548ed823a","typeString":"literal_string \"Sender does not have claim signer key\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"1100:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1100:140:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"1100:140:2"}]}},{"assignments":[284],"declarations":[{"constant":false,"id":284,"name":"claimId","nodeType":"VariableDeclaration","scope":378,"src":"1261:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1261:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":292,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":288,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1306:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":289,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1315:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":286,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"1289:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1289:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1289:33:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":285,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"1279:9:2","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1279:44:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1261:62:2"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":293,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1338:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1338:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":296,"indexExpression":{"argumentTypes":null,"id":295,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1351:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1338:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":221,"src":"1338:28:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":298,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1370:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1338:39:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":310,"nodeType":"IfStatement","src":"1334:107:2","trueBody":{"id":309,"nodeType":"Block","src":"1379:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":306,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1422:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":300,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1393:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byTopic","nodeType":"MemberAccess","referencedDeclaration":237,"src":"1393:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[] storage ref)"}},"id":304,"indexExpression":{"argumentTypes":null,"id":302,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1409:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1393:23:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1393:28:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1393:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":308,"nodeType":"ExpressionStatement","src":"1393:37:2"}]}},{"expression":{"argumentTypes":null,"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":311,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1451:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1451:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":315,"indexExpression":{"argumentTypes":null,"id":313,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1464:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1451:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"topic","nodeType":"MemberAccess","referencedDeclaration":217,"src":"1451:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":317,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1481:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1451:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"1451:36:2"},{"expression":{"argumentTypes":null,"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":320,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1497:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1497:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":324,"indexExpression":{"argumentTypes":null,"id":322,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1510:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1497:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"scheme","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1497:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":326,"name":"_scheme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1497:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":328,"nodeType":"ExpressionStatement","src":"1497:38:2"},{"expression":{"argumentTypes":null,"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":329,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1545:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":333,"indexExpression":{"argumentTypes":null,"id":331,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1558:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1545:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":221,"src":"1545:28:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":335,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1576:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1545:38:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":337,"nodeType":"ExpressionStatement","src":"1545:38:2"},{"expression":{"argumentTypes":null,"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":338,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1593:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1593:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":342,"indexExpression":{"argumentTypes":null,"id":340,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1606:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1593:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":223,"src":"1593:31:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":344,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1627:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1593:44:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":346,"nodeType":"ExpressionStatement","src":"1593:44:2"},{"expression":{"argumentTypes":null,"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":347,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1647:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1647:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":351,"indexExpression":{"argumentTypes":null,"id":349,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1660:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1647:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":225,"src":"1647:26:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":353,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1676:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1647:34:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1647:34:2"},{"expression":{"argumentTypes":null,"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":356,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1691:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"1691:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":360,"indexExpression":{"argumentTypes":null,"id":358,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1704:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1691:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":227,"src":"1691:25:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":362,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1719:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1691:32:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":364,"nodeType":"ExpressionStatement","src":"1691:32:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":366,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1763:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":367,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1784:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":368,"name":"_scheme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1804:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":369,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1825:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1846:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":371,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1870:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":372,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1889:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":365,"name":"ClaimAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1739:10:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1739:164:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"EmitStatement","src":"1734:169:2"},{"expression":{"argumentTypes":null,"id":375,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1921:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":258,"id":376,"nodeType":"Return","src":"1914:14:2"}]},"documentation":null,"id":378,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addClaim","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":378,"src":"749:53:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":239,"name":"KeyHolderLibrary.KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"749:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":242,"name":"_claims","nodeType":"VariableDeclaration","scope":378,"src":"812:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"},"typeName":{"contractScope":null,"id":241,"name":"Claims","nodeType":"UserDefinedTypeName","referencedDeclaration":238,"src":"812:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"}},"value":null,"visibility":"internal"},{"constant":false,"id":244,"name":"_topic","nodeType":"VariableDeclaration","scope":378,"src":"844:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":246,"name":"_scheme","nodeType":"VariableDeclaration","scope":378,"src":"868:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":248,"name":"_issuer","nodeType":"VariableDeclaration","scope":378,"src":"893:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":250,"name":"_signature","nodeType":"VariableDeclaration","scope":378,"src":"918:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":249,"name":"bytes","nodeType":"ElementaryTypeName","src":"918:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":252,"name":"_data","nodeType":"VariableDeclaration","scope":378,"src":"944:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":251,"name":"bytes","nodeType":"ElementaryTypeName","src":"944:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":254,"name":"_uri","nodeType":"VariableDeclaration","scope":378,"src":"965:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":253,"name":"string","nodeType":"ElementaryTypeName","src":"965:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"739:243:2"},"payable":false,"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"name":"claimRequestId","nodeType":"VariableDeclaration","scope":378,"src":"1015:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1014:24:2"},"scope":631,"src":"722:1213:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":449,"nodeType":"Block","src":"2208:423:2","statements":[{"assignments":[399],"declarations":[{"constant":false,"id":399,"name":"offset","nodeType":"VariableDeclaration","scope":450,"src":"2218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint","nodeType":"ElementaryTypeName","src":"2218:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":401,"initialValue":{"argumentTypes":null,"hexValue":"30","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2218:15:2"},{"body":{"id":447,"nodeType":"Block","src":"2286:339:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":414,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2326:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"id":415,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2358:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":416,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"2383:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":418,"indexExpression":{"argumentTypes":null,"id":417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2390:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"31","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2410:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":420,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2429:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":422,"indexExpression":{"argumentTypes":null,"id":421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2437:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2429:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":424,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2466:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2479:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"3635","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2483:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2479:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2478:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"argumentTypes":null,"hexValue":"3635","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2488:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"}],"id":423,"name":"getBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"2457:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2457:34:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":432,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2518:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":433,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":434,"name":"_offsets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2533:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":436,"indexExpression":{"argumentTypes":null,"id":435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2542:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2533:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":431,"name":"getBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"2509:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:36:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2563:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":413,"name":"addClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2300:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_struct$_Claims_$238_storage_ptr_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,struct ClaimHolderLibrary.Claims storage pointer,uint256,uint256,address,bytes memory,bytes memory,string memory) returns (bytes32)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2300:279:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":440,"nodeType":"ExpressionStatement","src":"2300:279:2"},{"expression":{"argumentTypes":null,"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":441,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2593:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":442,"name":"_offsets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2603:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":444,"indexExpression":{"argumentTypes":null,"id":443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2612:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2593:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"nodeType":"ExpressionStatement","src":"2593:21:2"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2262:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":407,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"2266:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2266:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2262:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":448,"initializationExpression":{"assignments":[403],"declarations":[{"constant":false,"id":403,"name":"i","nodeType":"VariableDeclaration","scope":450,"src":"2248:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":402,"name":"uint16","nodeType":"ElementaryTypeName","src":"2248:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":null,"visibility":"internal"}],"id":405,"initialValue":{"argumentTypes":null,"hexValue":"30","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2248:12:2"},"loopExpression":{"expression":{"argumentTypes":null,"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2281:3:2","subExpression":{"argumentTypes":null,"id":410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2281:1:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":412,"nodeType":"ExpressionStatement","src":"2281:3:2"},"nodeType":"ForStatement","src":"2243:382:2"}]},"documentation":null,"id":450,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addClaims","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":450,"src":"1969:53:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":379,"name":"KeyHolderLibrary.KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"1969:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":382,"name":"_claims","nodeType":"VariableDeclaration","scope":450,"src":"2032:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"},"typeName":{"contractScope":null,"id":381,"name":"Claims","nodeType":"UserDefinedTypeName","referencedDeclaration":238,"src":"2032:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"}},"value":null,"visibility":"internal"},{"constant":false,"id":385,"name":"_topic","nodeType":"VariableDeclaration","scope":450,"src":"2064:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2064:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":384,"length":null,"nodeType":"ArrayTypeName","src":"2064:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":388,"name":"_issuer","nodeType":"VariableDeclaration","scope":450,"src":"2090:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"2090:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":387,"length":null,"nodeType":"ArrayTypeName","src":"2090:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":390,"name":"_signature","nodeType":"VariableDeclaration","scope":450,"src":"2117:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":389,"name":"bytes","nodeType":"ElementaryTypeName","src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":392,"name":"_data","nodeType":"VariableDeclaration","scope":450,"src":"2143:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":391,"name":"bytes","nodeType":"ElementaryTypeName","src":"2143:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":395,"name":"_offsets","nodeType":"VariableDeclaration","scope":450,"src":"2164:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":394,"length":null,"nodeType":"ArrayTypeName","src":"2164:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"1959:229:2"},"payable":false,"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2208:0:2"},"scope":631,"src":"1941:690:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":527,"nodeType":"Block","src":"2835:588:2","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"2849:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2849:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"2871:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ClaimHolderLibrary_$631","typeString":"library ClaimHolderLibrary"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ClaimHolderLibrary_$631","typeString":"library ClaimHolderLibrary"}],"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2863:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2863:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2849:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":484,"nodeType":"IfStatement","src":"2845:196:2","trueBody":{"id":483,"nodeType":"Block","src":"2878:163:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":470,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"2931:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"2974:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2974:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":472,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2957:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2957:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:28:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":471,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"2947:9:2","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2947:39:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"31","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2988:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"argumentTypes":null,"id":468,"name":"KeyHolderLibrary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2900:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_KeyHolderLibrary_$2102_$","typeString":"type(library KeyHolderLibrary)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"keyHasPurpose","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"2900:30:2","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2900:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:37:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29","typeString":"literal_string \"Sender does not have management key\""},"value":"Sender does not have management key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29","typeString":"literal_string \"Sender does not have management key\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"2892:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:138:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"ExpressionStatement","src":"2892:138:2"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":486,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3082:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":487,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3104:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3104:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":490,"indexExpression":{"argumentTypes":null,"id":489,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3117:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3104:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"topic","nodeType":"MemberAccess","referencedDeclaration":217,"src":"3104:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":492,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3146:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3146:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":495,"indexExpression":{"argumentTypes":null,"id":494,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3159:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3146:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"scheme","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3146:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":497,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3189:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3189:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":500,"indexExpression":{"argumentTypes":null,"id":499,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3202:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3189:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":221,"src":"3189:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":502,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3232:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3232:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":505,"indexExpression":{"argumentTypes":null,"id":504,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3245:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3232:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":223,"src":"3232:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":507,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3278:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3278:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":510,"indexExpression":{"argumentTypes":null,"id":509,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3291:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3278:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":225,"src":"3278:27:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":512,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3319:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3319:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":515,"indexExpression":{"argumentTypes":null,"id":514,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3332:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3319:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":227,"src":"3319:26:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":485,"name":"ClaimRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3056:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3056:299:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"3051:304:2"},{"expression":{"argumentTypes":null,"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3366:29:2","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":519,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3373:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3373:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":522,"indexExpression":{"argumentTypes":null,"id":521,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3386:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3373:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"3366:29:2"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3412:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":526,"nodeType":"Return","src":"3405:11:2"}]},"documentation":null,"id":528,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"removeClaim","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":528,"src":"2667:53:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":451,"name":"KeyHolderLibrary.KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"2667:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":454,"name":"_claims","nodeType":"VariableDeclaration","scope":528,"src":"2730:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"},"typeName":{"contractScope":null,"id":453,"name":"Claims","nodeType":"UserDefinedTypeName","referencedDeclaration":238,"src":"2730:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"}},"value":null,"visibility":"internal"},{"constant":false,"id":456,"name":"_claimId","nodeType":"VariableDeclaration","scope":528,"src":"2762:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2762:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2657:127:2"},"payable":false,"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"name":"success","nodeType":"VariableDeclaration","scope":528,"src":"2817:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2816:14:2"},"scope":631,"src":"2637:786:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":579,"nodeType":"Block","src":"3695:289:2","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":547,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3726:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3726:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":550,"indexExpression":{"argumentTypes":null,"id":549,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3739:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3726:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"topic","nodeType":"MemberAccess","referencedDeclaration":217,"src":"3726:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":552,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3768:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3768:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":555,"indexExpression":{"argumentTypes":null,"id":554,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3781:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3768:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"scheme","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3768:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":557,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3811:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3811:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":560,"indexExpression":{"argumentTypes":null,"id":559,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3824:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3811:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":221,"src":"3811:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":562,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3854:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3854:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":565,"indexExpression":{"argumentTypes":null,"id":564,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3867:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3854:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":223,"src":"3854:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":567,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3900:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3900:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":570,"indexExpression":{"argumentTypes":null,"id":569,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3913:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3900:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":225,"src":"3900:27:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":572,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3941:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims storage pointer"}},"id":573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"byId","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3941:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Claim_$228_storage_$","typeString":"mapping(bytes32 => struct ClaimHolderLibrary.Claim storage ref)"}},"id":575,"indexExpression":{"argumentTypes":null,"id":574,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3954:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3941:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$228_storage","typeString":"struct ClaimHolderLibrary.Claim storage ref"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":227,"src":"3941:26:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3712:265:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_storage_$_t_bytes_storage_$_t_string_storage_$","typeString":"tuple(uint256,uint256,address,bytes storage ref,bytes storage ref,string storage ref)"}},"functionReturnParameters":546,"id":578,"nodeType":"Return","src":"3705:272:2"}]},"documentation":null,"id":580,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getClaim","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"name":"_claims","nodeType":"VariableDeclaration","scope":580,"src":"3447:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"},"typeName":{"contractScope":null,"id":529,"name":"Claims","nodeType":"UserDefinedTypeName","referencedDeclaration":238,"src":"3447:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage_ptr","typeString":"struct ClaimHolderLibrary.Claims"}},"value":null,"visibility":"internal"},{"constant":false,"id":532,"name":"_claimId","nodeType":"VariableDeclaration","scope":580,"src":"3471:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3471:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3446:42:2"},"payable":false,"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"name":"topic","nodeType":"VariableDeclaration","scope":580,"src":"3544:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":537,"name":"scheme","nodeType":"VariableDeclaration","scope":580,"src":"3569:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3569:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":539,"name":"issuer","nodeType":"VariableDeclaration","scope":580,"src":"3595:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"3595:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":541,"name":"signature","nodeType":"VariableDeclaration","scope":580,"src":"3621:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"3621:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"name":"data","nodeType":"VariableDeclaration","scope":580,"src":"3648:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":542,"name":"bytes","nodeType":"ElementaryTypeName","src":"3648:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"name":"uri","nodeType":"VariableDeclaration","scope":580,"src":"3670:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":544,"name":"string","nodeType":"ElementaryTypeName","src":"3670:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3532:158:2"},"scope":631,"src":"3429:555:2","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"4112:218:2","statements":[{"assignments":[592],"declarations":[{"constant":false,"id":592,"name":"sig","nodeType":"VariableDeclaration","scope":630,"src":"4122:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":591,"name":"bytes","nodeType":"ElementaryTypeName","src":"4122:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":597,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":595,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4151:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4141:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":593,"name":"bytes","nodeType":"ElementaryTypeName","src":"4145:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4141:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4122:37:2"},{"assignments":[599],"declarations":[{"constant":false,"id":599,"name":"j","nodeType":"VariableDeclaration","scope":630,"src":"4169:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4169:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":601,"initialValue":{"argumentTypes":null,"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4181:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4169:13:2"},{"body":{"id":625,"nodeType":"Block","src":"4246:58:2","statements":[{"expression":{"argumentTypes":null,"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":614,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4260:3:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":616,"indexExpression":{"argumentTypes":null,"id":615,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4264:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4260:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":617,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4269:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":619,"indexExpression":{"argumentTypes":null,"id":618,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"4274:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4269:7:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4260:16:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":621,"nodeType":"ExpressionStatement","src":"4260:16:2"},{"expression":{"argumentTypes":null,"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4290:3:2","subExpression":{"argumentTypes":null,"id":622,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4290:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":624,"nodeType":"ExpressionStatement","src":"4290:3:2"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":606,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"4218:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":607,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4222:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":608,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4222:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4218:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":626,"initializationExpression":{"assignments":[603],"declarations":[{"constant":false,"id":603,"name":"k","nodeType":"VariableDeclaration","scope":630,"src":"4197:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4197:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":605,"initialValue":{"argumentTypes":null,"id":604,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4209:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4197:19:2"},"loopExpression":{"expression":{"argumentTypes":null,"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4241:3:2","subExpression":{"argumentTypes":null,"id":611,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"4241:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":613,"nodeType":"ExpressionStatement","src":"4241:3:2"},"nodeType":"ForStatement","src":"4192:112:2"},{"expression":{"argumentTypes":null,"id":627,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4320:3:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":590,"id":628,"nodeType":"Return","src":"4313:10:2"}]},"documentation":null,"id":630,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getBytes","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"name":"_str","nodeType":"VariableDeclaration","scope":630,"src":"4008:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":581,"name":"bytes","nodeType":"ElementaryTypeName","src":"4008:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":584,"name":"_offset","nodeType":"VariableDeclaration","scope":630,"src":"4020:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"4020:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":586,"name":"_length","nodeType":"VariableDeclaration","scope":630,"src":"4037:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4037:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4007:46:2"},"payable":false,"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"name":"","nodeType":"VariableDeclaration","scope":630,"src":"4101:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"4101:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4100:7:2"},"scope":631,"src":"3990:340:2","stateMutability":"pure","superFunction":null,"visibility":"internal"}],"scope":632,"src":"61:4271:2"}],"src":"0:4333:2"}};

/***/ }),

/***/ "./contracts/build/contracts/ClaimHolderPresigned.json":
/*!*************************************************************!*\
  !*** ./contracts/build/contracts/ClaimHolderPresigned.json ***!
  \*************************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"name":"purposes","type":"uint256[]"},{"name":"keyType","type":"uint256"},{"name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"},{"name":"_type","type":"uint256"}],"name":"addKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_topic","type":"uint256[]"},{"name":"_issuer","type":"address[]"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_offsets","type":"uint256[]"}],"name":"addClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_id","type":"uint256"},{"name":"_approve","type":"bool"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"name":"claimIds","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"name":"_keys","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_topic","type":"uint256"},{"name":"_scheme","type":"uint256"},{"name":"_issuer","type":"address"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"name":"claimRequestId","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"execute","outputs":[{"name":"executionId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"name":"topic","type":"uint256"},{"name":"scheme","type":"uint256"},{"name":"issuer","type":"address"},{"name":"signature","type":"bytes"},{"name":"data","type":"bytes"},{"name":"uri","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"name":"purposes","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_userRegistryAddress","type":"address"},{"name":"_topic","type":"uint256[]"},{"name":"_issuer","type":"address[]"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_offsets","type":"uint256[]"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimRequestId","type":"uint256"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"}],"bytecode":"0x60806040523480156200001157600080fd5b50604051620016e2380380620016e283398101604081815282516020840151828501516060860151608087015160a08801517f30864be50000000000000000000000000000000000000000000000000000000088526000600489018190529651959894850197938501969285019591850194019288929173__KeyHolderLibrary______________________916330864be59160248083019286929190829003018186803b158015620000c357600080fd5b505af4158015620000d8573d6000803e3d6000fd5b5050505081905080600160a060020a0316634d3820eb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156200013757600080fd5b505af11580156200014c573d6000803e3d6000fd5b50505050505073__ClaimHolderLibrary____________________63428e59ee6000600488888888886040518863ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180888152602001878152602001806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b83811015620001fe578181015183820152602001620001e4565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b838110156200023f57818101518382015260200162000225565b50505050905001868103845289818151815260200191508051906020019080838360005b838110156200027d57818101518382015260200162000263565b50505050905090810190601f168015620002ab5780820380516001836020036101000a031916815260200191505b5086810383528851815288516020918201918a019080838360005b83811015620002e0578181015183820152602001620002c6565b50505050905090810190601f1680156200030e5780820380516001836020036101000a031916815260200191505b508681038252875181528751602091820191808a01910280838360005b83811015620003455781810151838201526020016200032b565b505050509050019c5050505050505050505050505060006040518083038186803b1580156200037357600080fd5b505af415801562000388573d6000803e3d6000fd5b5050505050505050505061134080620003a26000396000f3006080604052600436106100ab5763ffffffff60e060020a60003504166312aaac7081146100b05780631d3812401461012957806321c148f01461015b5780634eee424a146102a057806353d413c5146102b8578063747442d3146102d357806380e9e9e1146102f05780639010f72614610358578063b1a34e0d14610370578063b61d27f61461046a578063c9100bcb146104d3578063d202158d14610656578063fb307b3414610671575b600080fd5b3480156100bc57600080fd5b506100c8600435610689565b60408051602080820185905291810183905260608082528551908201528451909182916080830191878101910280838360005b838110156101135781810151838201526020016100fb565b5050505090500194505050505060405180910390f35b34801561013557600080fd5b506101476004356024356044356107a2565b604080519115158252519081900360200190f35b34801561016757600080fd5b506040805160206004803580820135838102808601850190965280855261029e95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506108589650505050505050565b005b3480156102ac57600080fd5b50610147600435610a72565b3480156102c457600080fd5b50610147600435602435610b1e565b3480156102df57600080fd5b506101476004356024351515610bcc565b3480156102fc57600080fd5b50610308600435610c48565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561034457818101518382015260200161032c565b505050509050019250505060405180910390f35b34801561036457600080fd5b50610308600435610cab565b34801561037c57600080fd5b50604080516020601f606435600481810135928301849004840285018401909552818452610458948035946024803595600160a060020a0360443516953695608494930191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d999650505050505050565b60408051918252519081900360200190f35b34801561047657600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610458948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610f909650505050505050565b3480156104df57600080fd5b506104eb600435611071565b6040518087815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561055457818101518382015260200161053c565b50505050905090810190601f1680156105815780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b838110156105b457818101518382015260200161059c565b50505050905090810190601f1680156105e15780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b838110156106145781810151838201526020016105fc565b50505050905090810190601f1680156106415780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561066257600080fd5b50610147600435602435611226565b34801561067d57600080fd5b506103086004356112a1565b604080517fb01a9fb300000000000000000000000000000000000000000000000000000000815260006004820181905260248201849052915160609291829173__KeyHolderLibrary______________________9163b01a9fb39160448083019286929190829003018186803b15801561070257600080fd5b505af4158015610716573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561073f57600080fd5b81019080805164010000000081111561075757600080fd5b8201602081018481111561076a57600080fd5b815185602082028301116401000000008211171561078757600080fd5b50506020820151604090920151909891975095509350505050565b604080517f5d601c3a000000000000000000000000000000000000000000000000000000008152600060048201819052602482018690526044820185905260648201849052915173__KeyHolderLibrary______________________91635d601c3a916084808301926020929190829003018186803b15801561082457600080fd5b505af4158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b5051949350505050565b73__ClaimHolderLibrary____________________63428e59ee6000600488888888886040518863ffffffff1660e060020a02815260040180888152602001878152602001806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b838110156108e95781810151838201526020016108d1565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b83811015610928578181015183820152602001610910565b50505050905001868103845289818151815260200191508051906020019080838360005b8381101561096457818101518382015260200161094c565b50505050905090810190601f1680156109915780820380516001836020036101000a031916815260200191505b5086810383528851815288516020918201918a019080838360005b838110156109c45781810151838201526020016109ac565b50505050905090810190601f1680156109f15780820380516001836020036101000a031916815260200191505b508681038252875181528751602091820191808a01910280838360005b83811015610a26578181015183820152602001610a0e565b505050509050019c5050505050505050505050505060006040518083038186803b158015610a5357600080fd5b505af4158015610a67573d6000803e3d6000fd5b505050505050505050565b604080517f5c02fae100000000000000000000000000000000000000000000000000000000815260006004828101829052602483015260448201849052915173__ClaimHolderLibrary____________________91635c02fae1916064808301926020929190829003018186803b158015610aec57600080fd5b505af4158015610b00573d6000803e3d6000fd5b505050506040513d6020811015610b1657600080fd5b505192915050565b604080517f3f47616d0000000000000000000000000000000000000000000000000000000081526000600482018190526024820185905260448201849052915173__KeyHolderLibrary______________________91633f47616d916064808301926020929190829003018186803b158015610b9957600080fd5b505af4158015610bad573d6000803e3d6000fd5b505050506040513d6020811015610bc357600080fd5b50519392505050565b604080517f67d4865f000000000000000000000000000000000000000000000000000000008152600060048201819052602482018590528315156044830152915173__KeyHolderLibrary______________________916367d4865f916064808301926020929190829003018186803b158015610b9957600080fd5b600081815260056020908152604091829020805483518184028101840190945280845260609392830182828015610c9f57602002820191906000526020600020905b81548152600190910190602001808311610c8a575b50505050509050919050565b606073__KeyHolderLibrary______________________63746199f96000846040518363ffffffff1660e060020a028152600401808381526020018281526020019250505060006040518083038186803b158015610d0857600080fd5b505af4158015610d1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d4557600080fd5b810190808051640100000000811115610d5d57600080fd5b82016020810184811115610d7057600080fd5b8151856020820283011164010000000082111715610d8d57600080fd5b50909695505050505050565b600073__ClaimHolderLibrary____________________63bd2d0c28600060048a8a8a8a8a8a6040518963ffffffff1660e060020a0281526004018089815260200188815260200187815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610e46578181015183820152602001610e2e565b50505050905090810190601f168015610e735780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015610ea6578181015183820152602001610e8e565b50505050905090810190601f168015610ed35780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015610f06578181015183820152602001610eee565b50505050905090810190601f168015610f335780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060206040518083038186803b158015610f5957600080fd5b505af4158015610f6d573d6000803e3d6000fd5b505050506040513d6020811015610f8357600080fd5b5051979650505050505050565b600073__KeyHolderLibrary______________________63e9356c6f60008686866040518563ffffffff1660e060020a0281526004018085815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561102457818101518382015260200161100c565b50505050905090810190601f1680156110515780820380516001836020036101000a031916815260200191505b509550505050505060206040518083038186803b15801561082457600080fd5b6000806000606080606073__ClaimHolderLibrary____________________638522d0eb6004896040518363ffffffff1660e060020a0281526004018083815260200182600019166000191681526020019250505060006040518083038186803b1580156110de57600080fd5b505af41580156110f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561111b57600080fd5b815160208301516040840151606085018051939592949193918301929164010000000081111561114a57600080fd5b8201602081018481111561115d57600080fd5b815164010000000081118282018710171561117757600080fd5b5050929190602001805164010000000081111561119357600080fd5b820160208101848111156111a657600080fd5b81516401000000008111828201871017156111c057600080fd5b505092919060200180516401000000008111156111dc57600080fd5b820160208101848111156111ef57600080fd5b815164010000000081118282018710171561120957600080fd5b505092919050505095509550955095509550955091939550919395565b604080517fd8188a400000000000000000000000000000000000000000000000000000000081526000600482018190526024820185905260448201849052915173__KeyHolderLibrary______________________9163d8188a40916064808301926020929190829003018186803b158015610b9957600080fd5b604080517f0f982bac00000000000000000000000000000000000000000000000000000000815260006004820181905260248201849052915160609273__KeyHolderLibrary______________________92630f982bac9260448083019392829003018186803b158015610d0857600080fd00a165627a7a72305820984c63cc390fc364bb3d404f3647090ad6526176876b80969e7aaf8bace1ef5b0029","contractName":"ClaimHolderPresigned","networks":{"1":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"}},"links":{"ClaimHolderLibrary":"0x1fe0b698b02bbc7fc7029ee1fc15885389b53067","KeyHolderLibrary":"0x7d26ae0838c4e15a87e9d3b26b03a0256c7554d8"}},"4":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"}},"links":{"ClaimHolderLibrary":"0x6b022e55864bb884d1bddc87ae741b7266153169","KeyHolderLibrary":"0x10d49d64b983ad887aa783ad10de75d42abab2e9"}}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolderPresigned.sol","exportedSymbols":{"ClaimHolderPresigned":[671]},"id":672,"nodeType":"SourceUnit","nodes":[{"id":633,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:3"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolderRegistered.sol","file":"./ClaimHolderRegistered.sol","id":634,"nodeType":"ImportDirective","scope":672,"sourceUnit":696,"src":"26:37:3","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":635,"name":"ClaimHolderRegistered","nodeType":"UserDefinedTypeName","referencedDeclaration":695,"src":"278:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_ClaimHolderRegistered_$695","typeString":"contract ClaimHolderRegistered"}},"id":636,"nodeType":"InheritanceSpecifier","src":"278:21:3"}],"contractDependencies":[180,695,1022,1151,1310],"contractKind":"contract","documentation":"NOTE: This contract exists as a convenience for deploying an identity with\nsome 'pre-signed' claims. If you don't care about that, just use ClaimHolder\ninstead.","fullyImplemented":true,"id":671,"linearizedBaseContracts":[671,695,180,1151,1310,1022],"name":"ClaimHolderPresigned","nodeType":"ContractDefinition","nodes":[{"body":{"id":669,"nodeType":"Block","src":"562:208:3","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":660,"name":"keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"614:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage","typeString":"struct KeyHolderLibrary.KeyHolderData storage ref"}},{"argumentTypes":null,"id":661,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"641:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claims_$238_storage","typeString":"struct ClaimHolderLibrary.Claims storage ref"}},{"argumentTypes":null,"id":662,"name":"_topic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"661:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":663,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"681:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"id":664,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"702:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":665,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"726:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":666,"name":"_offsets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"745:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage","typeString":"struct KeyHolderLibrary.KeyHolderData storage ref"},{"typeIdentifier":"t_struct$_Claims_$238_storage","typeString":"struct ClaimHolderLibrary.Claims storage ref"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"argumentTypes":null,"id":657,"name":"ClaimHolderLibrary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"572:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ClaimHolderLibrary_$631_$","typeString":"type(library ClaimHolderLibrary)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addClaims","nodeType":"MemberAccess","referencedDeclaration":450,"src":"572:28:3","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_struct$_Claims_$238_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,struct ClaimHolderLibrary.Claims storage pointer,uint256[] memory,address[] memory,bytes memory,bytes memory,uint256[] memory)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"572:191:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"572:191:3"}]},"documentation":null,"id":670,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":654,"name":"_userRegistryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"521:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":655,"modifierName":{"argumentTypes":null,"id":653,"name":"ClaimHolderRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"499:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ClaimHolderRegistered_$695_$","typeString":"type(contract ClaimHolderRegistered)"}},"nodeType":"ModifierInvocation","src":"499:43:3"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"name":"_userRegistryAddress","nodeType":"VariableDeclaration","scope":670,"src":"328:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":641,"name":"_topic","nodeType":"VariableDeclaration","scope":670,"src":"366:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"366:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"length":null,"nodeType":"ArrayTypeName","src":"366:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":644,"name":"_issuer","nodeType":"VariableDeclaration","scope":670,"src":"392:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"392:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":643,"length":null,"nodeType":"ArrayTypeName","src":"392:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":646,"name":"_signature","nodeType":"VariableDeclaration","scope":670,"src":"419:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":645,"name":"bytes","nodeType":"ElementaryTypeName","src":"419:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":648,"name":"_data","nodeType":"VariableDeclaration","scope":670,"src":"445:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":647,"name":"bytes","nodeType":"ElementaryTypeName","src":"445:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_offsets","nodeType":"VariableDeclaration","scope":670,"src":"466:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":650,"length":null,"nodeType":"ArrayTypeName","src":"466:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"318:172:3"},"payable":false,"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"562:0:3"},"scope":671,"src":"307:463:3","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":672,"src":"245:527:3"}],"src":"0:773:3"}};

/***/ }),

/***/ "./contracts/build/contracts/ClaimHolderRegistered.json":
/*!**************************************************************!*\
  !*** ./contracts/build/contracts/ClaimHolderRegistered.json ***!
  \**************************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"name":"purposes","type":"uint256[]"},{"name":"keyType","type":"uint256"},{"name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"},{"name":"_type","type":"uint256"}],"name":"addKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_topic","type":"uint256[]"},{"name":"_issuer","type":"address[]"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_offsets","type":"uint256[]"}],"name":"addClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_id","type":"uint256"},{"name":"_approve","type":"bool"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"name":"claimIds","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"name":"_keys","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_topic","type":"uint256"},{"name":"_scheme","type":"uint256"},{"name":"_issuer","type":"address"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"name":"claimRequestId","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"execute","outputs":[{"name":"executionId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"name":"topic","type":"uint256"},{"name":"scheme","type":"uint256"},{"name":"issuer","type":"address"},{"name":"signature","type":"bytes"},{"name":"data","type":"bytes"},{"name":"uri","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"name":"purposes","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_userRegistryAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimRequestId","type":"uint256"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"}],"bytecode":"0x608060405234801561001057600080fd5b5060405160208061146c83398101604081815291517f30864be5000000000000000000000000000000000000000000000000000000008252600060048301819052925190929173__KeyHolderLibrary______________________916330864be5916024808201928692909190829003018186803b15801561009157600080fd5b505af41580156100a5573d6000803e3d6000fd5b5050505081905080600160a060020a0316634d3820eb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561010357600080fd5b505af1158015610117573d6000803e3d6000fd5b5050505050506113408061012c6000396000f3006080604052600436106100ab5763ffffffff60e060020a60003504166312aaac7081146100b05780631d3812401461012957806321c148f01461015b5780634eee424a146102a057806353d413c5146102b8578063747442d3146102d357806380e9e9e1146102f05780639010f72614610358578063b1a34e0d14610370578063b61d27f61461046a578063c9100bcb146104d3578063d202158d14610656578063fb307b3414610671575b600080fd5b3480156100bc57600080fd5b506100c8600435610689565b60408051602080820185905291810183905260608082528551908201528451909182916080830191878101910280838360005b838110156101135781810151838201526020016100fb565b5050505090500194505050505060405180910390f35b34801561013557600080fd5b506101476004356024356044356107a2565b604080519115158252519081900360200190f35b34801561016757600080fd5b506040805160206004803580820135838102808601850190965280855261029e95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506108589650505050505050565b005b3480156102ac57600080fd5b50610147600435610a72565b3480156102c457600080fd5b50610147600435602435610b1e565b3480156102df57600080fd5b506101476004356024351515610bcc565b3480156102fc57600080fd5b50610308600435610c48565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561034457818101518382015260200161032c565b505050509050019250505060405180910390f35b34801561036457600080fd5b50610308600435610cab565b34801561037c57600080fd5b50604080516020601f606435600481810135928301849004840285018401909552818452610458948035946024803595600160a060020a0360443516953695608494930191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d999650505050505050565b60408051918252519081900360200190f35b34801561047657600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610458948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610f909650505050505050565b3480156104df57600080fd5b506104eb600435611071565b6040518087815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561055457818101518382015260200161053c565b50505050905090810190601f1680156105815780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b838110156105b457818101518382015260200161059c565b50505050905090810190601f1680156105e15780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b838110156106145781810151838201526020016105fc565b50505050905090810190601f1680156106415780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561066257600080fd5b50610147600435602435611226565b34801561067d57600080fd5b506103086004356112a1565b604080517fb01a9fb300000000000000000000000000000000000000000000000000000000815260006004820181905260248201849052915160609291829173__KeyHolderLibrary______________________9163b01a9fb39160448083019286929190829003018186803b15801561070257600080fd5b505af4158015610716573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561073f57600080fd5b81019080805164010000000081111561075757600080fd5b8201602081018481111561076a57600080fd5b815185602082028301116401000000008211171561078757600080fd5b50506020820151604090920151909891975095509350505050565b604080517f5d601c3a000000000000000000000000000000000000000000000000000000008152600060048201819052602482018690526044820185905260648201849052915173__KeyHolderLibrary______________________91635d601c3a916084808301926020929190829003018186803b15801561082457600080fd5b505af4158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b5051949350505050565b73__ClaimHolderLibrary____________________63428e59ee6000600488888888886040518863ffffffff1660e060020a02815260040180888152602001878152602001806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b838110156108e95781810151838201526020016108d1565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b83811015610928578181015183820152602001610910565b50505050905001868103845289818151815260200191508051906020019080838360005b8381101561096457818101518382015260200161094c565b50505050905090810190601f1680156109915780820380516001836020036101000a031916815260200191505b5086810383528851815288516020918201918a019080838360005b838110156109c45781810151838201526020016109ac565b50505050905090810190601f1680156109f15780820380516001836020036101000a031916815260200191505b508681038252875181528751602091820191808a01910280838360005b83811015610a26578181015183820152602001610a0e565b505050509050019c5050505050505050505050505060006040518083038186803b158015610a5357600080fd5b505af4158015610a67573d6000803e3d6000fd5b505050505050505050565b604080517f5c02fae100000000000000000000000000000000000000000000000000000000815260006004828101829052602483015260448201849052915173__ClaimHolderLibrary____________________91635c02fae1916064808301926020929190829003018186803b158015610aec57600080fd5b505af4158015610b00573d6000803e3d6000fd5b505050506040513d6020811015610b1657600080fd5b505192915050565b604080517f3f47616d0000000000000000000000000000000000000000000000000000000081526000600482018190526024820185905260448201849052915173__KeyHolderLibrary______________________91633f47616d916064808301926020929190829003018186803b158015610b9957600080fd5b505af4158015610bad573d6000803e3d6000fd5b505050506040513d6020811015610bc357600080fd5b50519392505050565b604080517f67d4865f000000000000000000000000000000000000000000000000000000008152600060048201819052602482018590528315156044830152915173__KeyHolderLibrary______________________916367d4865f916064808301926020929190829003018186803b158015610b9957600080fd5b600081815260056020908152604091829020805483518184028101840190945280845260609392830182828015610c9f57602002820191906000526020600020905b81548152600190910190602001808311610c8a575b50505050509050919050565b606073__KeyHolderLibrary______________________63746199f96000846040518363ffffffff1660e060020a028152600401808381526020018281526020019250505060006040518083038186803b158015610d0857600080fd5b505af4158015610d1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d4557600080fd5b810190808051640100000000811115610d5d57600080fd5b82016020810184811115610d7057600080fd5b8151856020820283011164010000000082111715610d8d57600080fd5b50909695505050505050565b600073__ClaimHolderLibrary____________________63bd2d0c28600060048a8a8a8a8a8a6040518963ffffffff1660e060020a0281526004018089815260200188815260200187815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610e46578181015183820152602001610e2e565b50505050905090810190601f168015610e735780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015610ea6578181015183820152602001610e8e565b50505050905090810190601f168015610ed35780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015610f06578181015183820152602001610eee565b50505050905090810190601f168015610f335780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060206040518083038186803b158015610f5957600080fd5b505af4158015610f6d573d6000803e3d6000fd5b505050506040513d6020811015610f8357600080fd5b5051979650505050505050565b600073__KeyHolderLibrary______________________63e9356c6f60008686866040518563ffffffff1660e060020a0281526004018085815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561102457818101518382015260200161100c565b50505050905090810190601f1680156110515780820380516001836020036101000a031916815260200191505b509550505050505060206040518083038186803b15801561082457600080fd5b6000806000606080606073__ClaimHolderLibrary____________________638522d0eb6004896040518363ffffffff1660e060020a0281526004018083815260200182600019166000191681526020019250505060006040518083038186803b1580156110de57600080fd5b505af41580156110f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561111b57600080fd5b815160208301516040840151606085018051939592949193918301929164010000000081111561114a57600080fd5b8201602081018481111561115d57600080fd5b815164010000000081118282018710171561117757600080fd5b5050929190602001805164010000000081111561119357600080fd5b820160208101848111156111a657600080fd5b81516401000000008111828201871017156111c057600080fd5b505092919060200180516401000000008111156111dc57600080fd5b820160208101848111156111ef57600080fd5b815164010000000081118282018710171561120957600080fd5b505092919050505095509550955095509550955091939550919395565b604080517fd8188a400000000000000000000000000000000000000000000000000000000081526000600482018190526024820185905260448201849052915173__KeyHolderLibrary______________________9163d8188a40916064808301926020929190829003018186803b158015610b9957600080fd5b604080517f0f982bac00000000000000000000000000000000000000000000000000000000815260006004820181905260248201849052915160609273__KeyHolderLibrary______________________92630f982bac9260448083019392829003018186803b158015610d0857600080fd00a165627a7a723058203777f70c6bfb2f2794228ba8845d7fbd411da47a3e3115e4f1a6358c3487032d0029","contractName":"ClaimHolderRegistered","networks":{"1":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"}},"links":{"ClaimHolderLibrary":"0x1fe0b698b02bbc7fc7029ee1fc15885389b53067","KeyHolderLibrary":"0x7d26ae0838c4e15a87e9d3b26b03a0256c7554d8"}},"4":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"}},"links":{"ClaimHolderLibrary":"0x6b022e55864bb884d1bddc87ae741b7266153169","KeyHolderLibrary":"0x10d49d64b983ad887aa783ad10de75d42abab2e9"}}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolderRegistered.sol","exportedSymbols":{"ClaimHolderRegistered":[695]},"id":696,"nodeType":"SourceUnit","nodes":[{"id":673,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:4"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolder.sol","file":"./ClaimHolder.sol","id":674,"nodeType":"ImportDirective","scope":696,"sourceUnit":181,"src":"26:27:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/V00_UserRegistry.sol","file":"./V00_UserRegistry.sol","id":675,"nodeType":"ImportDirective","scope":696,"sourceUnit":2153,"src":"54:32:4","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":676,"name":"ClaimHolder","nodeType":"UserDefinedTypeName","referencedDeclaration":180,"src":"123:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_ClaimHolder_$180","typeString":"contract ClaimHolder"}},"id":677,"nodeType":"InheritanceSpecifier","src":"123:11:4"}],"contractDependencies":[180,1022,1151,1310],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":695,"linearizedBaseContracts":[695,180,1151,1310,1022],"name":"ClaimHolderRegistered","nodeType":"ContractDefinition","nodes":[{"body":{"id":693,"nodeType":"Block","src":"218:124:4","statements":[{"assignments":[683],"declarations":[{"constant":false,"id":683,"name":"userRegistry","nodeType":"VariableDeclaration","scope":694,"src":"228:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_V00_UserRegistry_$2152","typeString":"contract V00_UserRegistry"},"typeName":{"contractScope":null,"id":682,"name":"V00_UserRegistry","nodeType":"UserDefinedTypeName","referencedDeclaration":2152,"src":"228:16:4","typeDescriptions":{"typeIdentifier":"t_contract$_V00_UserRegistry_$2152","typeString":"contract V00_UserRegistry"}},"value":null,"visibility":"internal"}],"id":687,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":685,"name":"_userRegistryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"277:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":684,"name":"V00_UserRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"260:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_V00_UserRegistry_$2152_$","typeString":"type(contract V00_UserRegistry)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"260:38:4","typeDescriptions":{"typeIdentifier":"t_contract$_V00_UserRegistry_$2152","typeString":"contract V00_UserRegistry"}},"nodeType":"VariableDeclarationStatement","src":"228:70:4"},{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":688,"name":"userRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"308:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_V00_UserRegistry_$2152","typeString":"contract V00_UserRegistry"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerUser","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"308:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"308:27:4","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"ExpressionStatement","src":"308:27:4"}]},"documentation":null,"id":694,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"name":"_userRegistryAddress","nodeType":"VariableDeclaration","scope":694,"src":"164:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"164:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"154:44:4"},"payable":false,"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"218:0:4"},"scope":695,"src":"142:200:4","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":696,"src":"89:255:4"}],"src":"0:345:4"}};

/***/ }),

/***/ "./contracts/build/contracts/KeyHolderLibrary.json":
/*!*********************************************************!*\
  !*** ./contracts/build/contracts/KeyHolderLibrary.json ***!
  \*********************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"name":"purposes","type":"uint256[]"},{"name":"keyType","type":"uint256"},{"name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"name":"purposes","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"name":"_keys","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"},{"name":"_type","type":"uint256"}],"name":"addKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_id","type":"uint256"},{"name":"_approve","type":"bool"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"execute","outputs":[{"name":"executionId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_keyHolderData","type":"KeyHolderLibrary.KeyHolderData storage"},{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"name":"result","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x6112bf610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600436106100af5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630f982bac81146100b457806330864be5146101125780633f47616d1461012c5780635d601c3a1461015e57806367d4865f1461017f578063746199f91461019f578063b01a9fb3146101ad578063d8188a401461021c578063e9356c6f1461022d575b600080fd5b6100c26004356024356102ae565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100fe5781810151838201526020016100e6565b505050509050019250505060405180910390f35b81801561011e57600080fd5b5061012a600435610313565b005b81801561013857600080fd5b5061014a600435602435604435610417565b604080519115158252519081900360200190f35b81801561016a57600080fd5b5061014a600435602435604435606435610799565b81801561018b57600080fd5b5061014a600435602435604435151561097e565b6100c2600435602435610db4565b6101bb600435602435610e19565b60408051602080820185905291810183905260608082528551908201528451909182916080830191878101910280838360005b838110156102065781810151838201526020016101ee565b5050505090500194505050505060405180910390f35b61014a600435602435604435610e95565b81801561023957600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261029c94803594600160a060020a036024803591909116956044359536956084949301918190840183828082843750949750610f1b9650505050505050565b60408051918252519081900360200190f35b600081815260018301602090815260409182902080548351818402810184019094528084526060939283018282801561030657602002820191906000526020600020905b8154815260200190600101908083116102f2575b5050505050905092915050565b604080516c010000000000000000000000003302602080830191909152825180830360140181526034909201928390528151600093918291908401908083835b602083106103725780518252601f199092019160209182019101610353565b51815160209384036101000a600019018019909216911617905260408051929094018290038220600081815260018a81018452868220600280820185905581548084018355828552868520018390559082018290558183528b01845295812080548088018255908252928120909201819055965092945084935085927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9925090a45050565b600080808080333014610548576104cc88336040516020018082600160a060020a0316600160a060020a03166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083106104985780518252601f199092019160209182019101610479565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001610e95565b1515610548576040805160e560020a62461bcd02815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742060448201527f6b65790000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600087815260018901602052604090206002015487146105b2576040805160e560020a62461bcd02815260206004820152600b60248201527f4e6f2073756368206b6579000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008781526001808a016020526040808320909101549051909188918a917f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339791a460008781526001890160205260408120945092505b83548310156106a65785848481548110151561062057fe5b9060005260206000200154141561069b5783548490600019810190811061064357fe5b9060005260206000200154848481548110151561065c57fe5b60009182526020909120015583548490600019810190811061067a57fe5b600091825260208220015583546106958560001983016111ae565b506106a6565b600190920191610608565b835415156106da5760008781526001890160205260408120906106c982826111d7565b506000600182018190556002909101555b505060008481526002870160205260408120905b815481101561078b578154879083908390811061070757fe5b60009182526020909120015414156107835781548290600019810190811061072b57fe5b9060005260206000200154828281548110151561074457fe5b60009182526020909120015581548290600019810190811061076257fe5b6000918252602082200155815461077d8360001983016111ae565b5061078b565b6001016106ee565b506001979650505050505050565b6000838152600185016020526040812060020154841415610804576040805160e560020a62461bcd02815260206004820152601260248201527f4b657920616c7265616479206578697374730000000000000000000000000000604482015290519081900360640190fd5b3330146108fa5761087e85336040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052604051808280519060200190808383602083106104985780518252601f199092019160209182019101610479565b15156108fa576040805160e560020a62461bcd02815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742060448201527f6b65790000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600084815260018087016020908152604080842060028082018a9055815480860183558287528487200189905590840187905587855289018252808420805493840181558452908320909101869055518391859187917f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e991a4506001949350505050565b6000610a2884336040516020018082600160a060020a0316600160a060020a03166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083106109f45780518252601f1990920191602091820191016109d5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206002610e95565b1515610a7e576040805160e560020a62461bcd02815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b657900604482015290519081900360640190fd5b6000838152600385810160205260409091200154610100900460ff1615610aef576040805160e560020a62461bcd02815260206004820152601060248201527f416c726561647920657865637574656400000000000000000000000000000000604482015290519081900360640190fd5b604080518315158152905184917fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8919081900360200190a260018215151415610d8e57600083815260038086016020526040808320918201805460ff191660019081179091558254915160029384018054600160a060020a03909416959094909391928392869260001992821615610100029290920116048015610bd45780601f10610ba957610100808354040283529160200191610bd4565b820191906000526020600020905b815481529060010190602001808311610bb757829003601f168201915b50508260ff168152602001925050506000604051808303816000865af191505090508015610cec57600083815260038581016020908152604092839020918201805461010061ff00199091168117909155600180840154845486518581526002968701805494851615909502600019019093169590950493820184905294600160a060020a039094169388937f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b893929182919082019084908015610cd95780601f10610cae57610100808354040283529160200191610cd9565b820191906000526020600020905b815481529060010190602001808311610cbc57829003601f168201915b50509250505060405180910390a4610dad565b60008381526003850160209081526040918290206001808201548254855185815260029485018054600019958116156101000295909501909416949094049484018590529094600160a060020a039091169388937fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a6893929091829182019084908015610cd95780601f10610cae57610100808354040283529160200191610cd9565b60008381526003808601602052604090912001805460ff191690555060015b9392505050565b600081815260028301602090815260409182902080548351818402810184019094528084526060939283018282801561030657602002820191906000526020600020905b81548152600190910190602001808311610df8575050505050905092915050565b600081815260018084016020908152604080842092830154600284015484548351818602810186019094528084526060969586959094918591830182828015610e8157602002820191906000526020600020905b815481526020019060010190808311610e6d575b505050505092509250925092509250925092565b60008281526001840160205260408120600201548190819081901515610ebe5760009350610f11565b505060008481526001860160205260408120905b8154811015610f0d57848282815481101515610eea57fe5b9060005260206000200154111515610f055760019250610f0d565b600101610ed2565b8293505b5050509392505050565b835460009081526003808601602052604082200154610100900460ff1615610f8d576040805160e560020a62461bcd02815260206004820152601060248201527f416c726561647920657865637574656400000000000000000000000000000000604482015290519081900360640190fd5b845460009081526003860160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03891617905587548352808320600101869055875483529091208351610ff0926002909201918501906111f8565b508284600160a060020a031686600001547f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8856040518080602001828103825283818151815260200191508051906020019080838360005b83811015611060578181015183820152602001611048565b50505050905090810190601f16801561108d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a461110d85336040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052604051808280519060200190808383602083106104985780518252601f199092019160209182019101610479565b80611186575061118685336040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052604051808280519060200190808383602083106109f45780518252601f1990920191602091820191016109d5565b1561119d5761119b858660000154600161097e565b505b508354600181018555949350505050565b8154818355818111156111d2576000838152602090206111d2918101908301611276565b505050565b50805460008255906000526020600020908101906111f59190611276565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061123957805160ff1916838001178555611266565b82800160010185558215611266579182015b8281111561126657825182559160200191906001019061124b565b50611272929150611276565b5090565b61129091905b80821115611272576000815560010161127c565b905600a165627a7a72305820617b1403e2b53202a029415b2acf88713c53e7fa573821f401c85f9f4bd920160029","contractName":"KeyHolderLibrary","networks":{"1":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"}},"links":{},"address":"0x7d26ae0838c4e15a87e9d3b26b03a0256c7554d8","transactionHash":"0x20a676386fce1d4f39cc99a9ab05bf71fb9d076aedaad9d99ed185fd1bad9ebd"},"4":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"}},"links":{},"address":"0x10d49d64b983ad887aa783ad10de75d42abab2e9","transactionHash":"0x5548d25ebab32ad2fa660a67a024467dc4123ff09a53281e016f16ab662c3f77"}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/KeyHolderLibrary.sol","exportedSymbols":{"KeyHolderLibrary":[2102]},"id":2103,"nodeType":"SourceUnit","nodes":[{"id":1312,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:9"},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"id":2102,"linearizedBaseContracts":[2102],"name":"KeyHolderLibrary","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":1320,"name":"KeyAdded","nodeType":"EventDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"indexed":true,"name":"key","nodeType":"VariableDeclaration","scope":1320,"src":"73:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1316,"indexed":true,"name":"purpose","nodeType":"VariableDeclaration","scope":1320,"src":"94:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"94:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1318,"indexed":true,"name":"keyType","nodeType":"VariableDeclaration","scope":1320,"src":"119:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"119:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"72:71:9"},"src":"58:86:9"},{"anonymous":false,"documentation":null,"id":1328,"name":"KeyRemoved","nodeType":"EventDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"indexed":true,"name":"key","nodeType":"VariableDeclaration","scope":1328,"src":"166:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"166:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1324,"indexed":true,"name":"purpose","nodeType":"VariableDeclaration","scope":1328,"src":"187:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1326,"indexed":true,"name":"keyType","nodeType":"VariableDeclaration","scope":1328,"src":"212:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"212:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"165:71:9"},"src":"149:88:9"},{"anonymous":false,"documentation":null,"id":1338,"name":"ExecutionRequested","nodeType":"EventDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"indexed":true,"name":"executionId","nodeType":"VariableDeclaration","scope":1338,"src":"267:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1332,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":1338,"src":"296:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"296:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1334,"indexed":true,"name":"value","nodeType":"VariableDeclaration","scope":1338,"src":"316:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1336,"indexed":false,"name":"data","nodeType":"VariableDeclaration","scope":1338,"src":"339:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1335,"name":"bytes","nodeType":"ElementaryTypeName","src":"339:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"266:84:9"},"src":"242:109:9"},{"anonymous":false,"documentation":null,"id":1348,"name":"ExecutionFailed","nodeType":"EventDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"indexed":true,"name":"executionId","nodeType":"VariableDeclaration","scope":1348,"src":"378:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1342,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":1348,"src":"407:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1344,"indexed":true,"name":"value","nodeType":"VariableDeclaration","scope":1348,"src":"427:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1346,"indexed":false,"name":"data","nodeType":"VariableDeclaration","scope":1348,"src":"450:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1345,"name":"bytes","nodeType":"ElementaryTypeName","src":"450:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"377:84:9"},"src":"356:106:9"},{"anonymous":false,"documentation":null,"id":1358,"name":"Executed","nodeType":"EventDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"indexed":true,"name":"executionId","nodeType":"VariableDeclaration","scope":1358,"src":"482:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1352,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":1358,"src":"511:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1354,"indexed":true,"name":"value","nodeType":"VariableDeclaration","scope":1358,"src":"531:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"531:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1356,"indexed":false,"name":"data","nodeType":"VariableDeclaration","scope":1358,"src":"554:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1355,"name":"bytes","nodeType":"ElementaryTypeName","src":"554:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"481:84:9"},"src":"467:99:9"},{"anonymous":false,"documentation":null,"id":1364,"name":"Approved","nodeType":"EventDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"indexed":true,"name":"executionId","nodeType":"VariableDeclaration","scope":1364,"src":"586:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1362,"indexed":false,"name":"approved","nodeType":"VariableDeclaration","scope":1364,"src":"615:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1361,"name":"bool","nodeType":"ElementaryTypeName","src":"615:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"585:44:9"},"src":"571:59:9"},{"canonicalName":"KeyHolderLibrary.Key","id":1372,"members":[{"constant":false,"id":1367,"name":"purposes","nodeType":"VariableDeclaration","scope":1372,"src":"657:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1366,"length":null,"nodeType":"ArrayTypeName","src":"657:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1369,"name":"keyType","nodeType":"VariableDeclaration","scope":1372,"src":"734:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1371,"name":"key","nodeType":"VariableDeclaration","scope":1372,"src":"792:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"792:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"name":"Key","nodeType":"StructDefinition","scope":2102,"src":"636:174:9","visibility":"public"},{"canonicalName":"KeyHolderLibrary.KeyHolderData","id":1388,"members":[{"constant":false,"id":1374,"name":"executionNonce","nodeType":"VariableDeclaration","scope":1388,"src":"847:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1378,"name":"keys","nodeType":"VariableDeclaration","scope":1388,"src":"879:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key)"},"typeName":{"id":1377,"keyType":{"id":1375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"879:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key)"},"valueType":{"contractScope":null,"id":1376,"name":"Key","nodeType":"UserDefinedTypeName","referencedDeclaration":1372,"src":"899:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage_ptr","typeString":"struct KeyHolderLibrary.Key"}}},"value":null,"visibility":"internal"},{"constant":false,"id":1383,"name":"keysByPurpose","nodeType":"VariableDeclaration","scope":1388,"src":"918:44:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[])"},"typeName":{"id":1382,"keyType":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"918:30:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[])"},"valueType":{"baseType":{"id":1380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"938:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1381,"length":null,"nodeType":"ArrayTypeName","src":"938:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"value":null,"visibility":"internal"},{"constant":false,"id":1387,"name":"executions","nodeType":"VariableDeclaration","scope":1388,"src":"972:41:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution)"},"typeName":{"id":1386,"keyType":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"972:30:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution)"},"valueType":{"contractScope":null,"id":1385,"name":"Execution","nodeType":"UserDefinedTypeName","referencedDeclaration":1399,"src":"992:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage_ptr","typeString":"struct KeyHolderLibrary.Execution"}}},"value":null,"visibility":"internal"}],"name":"KeyHolderData","nodeType":"StructDefinition","scope":2102,"src":"816:204:9","visibility":"public"},{"canonicalName":"KeyHolderLibrary.Execution","id":1399,"members":[{"constant":false,"id":1390,"name":"to","nodeType":"VariableDeclaration","scope":1399,"src":"1053:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1392,"name":"value","nodeType":"VariableDeclaration","scope":1399,"src":"1073:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1394,"name":"data","nodeType":"VariableDeclaration","scope":1399,"src":"1096:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"1096:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1396,"name":"approved","nodeType":"VariableDeclaration","scope":1399,"src":"1116:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1395,"name":"bool","nodeType":"ElementaryTypeName","src":"1116:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1398,"name":"executed","nodeType":"VariableDeclaration","scope":1399,"src":"1139:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1397,"name":"bool","nodeType":"ElementaryTypeName","src":"1139:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"name":"Execution","nodeType":"StructDefinition","scope":2102,"src":"1026:133:9","visibility":"public"},{"body":{"id":1457,"nodeType":"Block","src":"1236:303:9","statements":[{"assignments":[1405],"declarations":[{"constant":false,"id":1405,"name":"_key","nodeType":"VariableDeclaration","scope":1458,"src":"1246:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1246:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1413,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"1288:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1288:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1407,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"1271:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1271:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1271:28:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1406,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"1261:9:9","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1261:39:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1246:54:9"},{"expression":{"argumentTypes":null,"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1414,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1310:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1310:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1418,"indexExpression":{"argumentTypes":null,"id":1416,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"1330:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1310:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"key","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"1310:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1420,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"1342:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1310:36:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1422,"nodeType":"ExpressionStatement","src":"1310:36:9"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1423,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1356:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1356:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1427,"indexExpression":{"argumentTypes":null,"id":1425,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"1376:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1356:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"purposes","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"1356:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1356:39:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1356:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1432,"nodeType":"ExpressionStatement","src":"1356:42:9"},{"expression":{"argumentTypes":null,"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1433,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1408:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1408:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1437,"indexExpression":{"argumentTypes":null,"id":1435,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"1428:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1408:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"keyType","nodeType":"MemberAccess","referencedDeclaration":1369,"src":"1408:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1444:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1408:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"nodeType":"ExpressionStatement","src":"1408:37:9"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1448,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"1492:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1442,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1455:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keysByPurpose","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"1455:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[] storage ref)"}},"id":1446,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1455:31:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1455:36:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ExpressionStatement","src":"1455:42:9"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1452,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"1521:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"31","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1527:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"argumentTypes":null,"hexValue":"31","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1451,"name":"KeyAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"1512:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1512:20:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"1507:25:9"}]},"documentation":null,"id":1458,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"init","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1458,"src":"1179:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1400,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"1179:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"}],"src":"1178:38:9"},"payable":false,"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"1236:0:9"},"scope":2102,"src":"1165:374:9","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1489,"nodeType":"Block","src":"1711:172:9","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1472,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1742:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1742:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1475,"indexExpression":{"argumentTypes":null,"id":1474,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1762:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1742:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"purposes","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"1742:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1477,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1790:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1790:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1480,"indexExpression":{"argumentTypes":null,"id":1479,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1810:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1790:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keyType","nodeType":"MemberAccess","referencedDeclaration":1369,"src":"1790:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1482,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1837:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1837:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1485,"indexExpression":{"argumentTypes":null,"id":1484,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1857:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1837:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"key","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"1837:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1728:148:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_storage_$_t_uint256_$_t_bytes32_$","typeString":"tuple(uint256[] storage ref,uint256,bytes32)"}},"functionReturnParameters":1471,"id":1488,"nodeType":"Return","src":"1721:155:9"}]},"documentation":null,"id":1490,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getKey","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1490,"src":"1561:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1459,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"1561:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1462,"name":"_key","nodeType":"VariableDeclaration","scope":1490,"src":"1599:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1599:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1560:52:9"},"payable":false,"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"name":"purposes","nodeType":"VariableDeclaration","scope":1490,"src":"1657:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"length":null,"nodeType":"ArrayTypeName","src":"1657:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1468,"name":"keyType","nodeType":"VariableDeclaration","scope":1490,"src":"1677:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1677:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1470,"name":"key","nodeType":"VariableDeclaration","scope":1490,"src":"1694:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1656:50:9"},"scope":2102,"src":"1545:338:9","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1507,"nodeType":"Block","src":"2033:60:9","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1500,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"2051:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"2051:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1503,"indexExpression":{"argumentTypes":null,"id":1502,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2071:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2051:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"purposes","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"2051:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"id":1505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2050:36:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":1499,"id":1506,"nodeType":"Return","src":"2043:43:9"}]},"documentation":null,"id":1508,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getKeyPurposes","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1508,"src":"1913:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1491,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"1913:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1494,"name":"_key","nodeType":"VariableDeclaration","scope":1508,"src":"1951:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1951:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1912:52:9"},"payable":false,"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"name":"purposes","nodeType":"VariableDeclaration","scope":1508,"src":"2009:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"length":null,"nodeType":"ArrayTypeName","src":"2009:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"2008:20:9"},"scope":2102,"src":"1889:204:9","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1523,"nodeType":"Block","src":"2246:62:9","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1518,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2263:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keysByPurpose","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"2263:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[] storage ref)"}},"id":1521,"indexExpression":{"argumentTypes":null,"id":1520,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2292:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2263:38:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1517,"id":1522,"nodeType":"Return","src":"2256:45:9"}]},"documentation":null,"id":1524,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getKeysByPurpose","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1524,"src":"2125:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1509,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"2125:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1512,"name":"_purpose","nodeType":"VariableDeclaration","scope":1524,"src":"2163:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2163:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2124:56:9"},"payable":false,"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"name":"_keys","nodeType":"VariableDeclaration","scope":1524,"src":"2225:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1515,"length":null,"nodeType":"ArrayTypeName","src":"2225:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"2224:17:9"},"scope":2102,"src":"2099:209:9","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1616,"nodeType":"Block","src":"2465:620:9","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1538,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2483:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"2483:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1541,"indexExpression":{"argumentTypes":null,"id":1540,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2503:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2483:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"key","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"2483:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1543,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2516:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2483:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4b657920616c726561647920657869737473","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2522:20:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_37467005bb64787ee8832b1d5babc5419f104515384897fbd2d13f242375bf26","typeString":"literal_string \"Key already exists\""},"value":"Key already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37467005bb64787ee8832b1d5babc5419f104515384897fbd2d13f242375bf26","typeString":"literal_string \"Key already exists\""}],"id":1537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"2475:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2475:68:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"ExpressionStatement","src":"2475:68:9"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"2589:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2589:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1551,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"2611:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_KeyHolderLibrary_$2102","typeString":"library KeyHolderLibrary"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_KeyHolderLibrary_$2102","typeString":"library KeyHolderLibrary"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2603:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2603:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2589:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1570,"nodeType":"IfStatement","src":"2585:208:9","trueBody":{"id":1569,"nodeType":"Block","src":"2618:175:9","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1556,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2654:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"2697:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2697:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1558,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2680:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2680:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2680:28:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1557,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"2670:9:9","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2670:39:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"31","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2711:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1555,"name":"keyHasPurpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"2640:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2640:73:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2715:37:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29","typeString":"literal_string \"Sender does not have management key\""},"value":"Sender does not have management key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29","typeString":"literal_string \"Sender does not have management key\""}],"id":1554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"2632:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2632:121:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"2632:121:9"}]}},{"expression":{"argumentTypes":null,"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1571,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2803:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"2803:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1575,"indexExpression":{"argumentTypes":null,"id":1573,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2823:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2803:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"key","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"2803:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1577,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2835:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2803:36:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1579,"nodeType":"ExpressionStatement","src":"2803:36:9"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1587,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2889:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1580,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2849:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"2849:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1584,"indexExpression":{"argumentTypes":null,"id":1582,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2869:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2849:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"purposes","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"2849:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2849:39:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2849:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ExpressionStatement","src":"2849:49:9"},{"expression":{"argumentTypes":null,"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1590,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2908:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"2908:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1594,"indexExpression":{"argumentTypes":null,"id":1592,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2928:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2908:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"keyType","nodeType":"MemberAccess","referencedDeclaration":1369,"src":"2908:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1596,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2944:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2908:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1598,"nodeType":"ExpressionStatement","src":"2908:41:9"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1605,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"3004:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1599,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2960:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keysByPurpose","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"2960:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[] storage ref)"}},"id":1603,"indexExpression":{"argumentTypes":null,"id":1601,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2989:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2960:38:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2960:43:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2960:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1607,"nodeType":"ExpressionStatement","src":"2960:49:9"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1609,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"3034:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1610,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3040:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1611,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3050:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1608,"name":"KeyAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"3025:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3025:31:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"EmitStatement","src":"3020:36:9"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3074:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1536,"id":1615,"nodeType":"Return","src":"3067:11:9"}]},"documentation":null,"id":1617,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addKey","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1617,"src":"2330:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1525,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"2330:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1528,"name":"_key","nodeType":"VariableDeclaration","scope":1617,"src":"2368:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2368:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1530,"name":"_purpose","nodeType":"VariableDeclaration","scope":1617,"src":"2382:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1532,"name":"_type","nodeType":"VariableDeclaration","scope":1617,"src":"2400:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2329:85:9"},"payable":false,"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"name":"success","nodeType":"VariableDeclaration","scope":1617,"src":"2447:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1534,"name":"bool","nodeType":"ElementaryTypeName","src":"2447:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2446:14:9"},"scope":2102,"src":"2314:771:9","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1753,"nodeType":"Block","src":"3224:1225:9","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1630,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3256:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"3299:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3299:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1632,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"3282:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3282:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:28:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1631,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"3272:9:9","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3272:39:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"32","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3313:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1629,"name":"keyHasPurpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"3242:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3242:73:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656e64657220646f6573206e6f74206861766520616374696f6e206b6579","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3317:33:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2239811702909a77ce5c35bc6905c72e29655cd69df6a5b32bf74fddbc156a6c","typeString":"literal_string \"Sender does not have action key\""},"value":"Sender does not have action key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2239811702909a77ce5c35bc6905c72e29655cd69df6a5b32bf74fddbc156a6c","typeString":"literal_string \"Sender does not have action key\""}],"id":1628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"3234:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3234:117:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"3234:117:9"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3369:40:9","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1644,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3370:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3370:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1647,"indexExpression":{"argumentTypes":null,"id":1646,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3396:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3370:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"3370:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416c7265616479206578656375746564","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3411:18:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b","typeString":"literal_string \"Already executed\""},"value":"Already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b","typeString":"literal_string \"Already executed\""}],"id":1643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"3361:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3361:69:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"3361:69:9"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1654,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3455:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1655,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3460:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1653,"name":"Approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"3446:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3446:23:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"EmitStatement","src":"3441:28:9"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1658,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3484:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1749,"nodeType":"Block","src":"4350:72:9","statements":[{"expression":{"argumentTypes":null,"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1740,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4364:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4364:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1744,"indexExpression":{"argumentTypes":null,"id":1742,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4390:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4364:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"4364:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"66616c7365","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4406:5:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4364:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1748,"nodeType":"ExpressionStatement","src":"4364:47:9"}]},"id":1750,"nodeType":"IfStatement","src":"3480:942:9","trueBody":{"id":1739,"nodeType":"Block","src":"3502:842:9","statements":[{"expression":{"argumentTypes":null,"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1661,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3516:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3516:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1665,"indexExpression":{"argumentTypes":null,"id":1663,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3542:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3516:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"3516:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3558:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3516:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1669,"nodeType":"ExpressionStatement","src":"3516:46:9"},{"expression":{"argumentTypes":null,"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1670,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3576:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1677,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3625:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3625:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1680,"indexExpression":{"argumentTypes":null,"id":1679,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3651:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3625:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"3625:35:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"argumentTypes":null,"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3586:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3586:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1674,"indexExpression":{"argumentTypes":null,"id":1673,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3612:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3586:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"3586:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3586:38:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$__$returns$_t_bool_$","typeString":"function () payable returns (bool)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3586:78:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3576:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1685,"nodeType":"ExpressionStatement","src":"3576:88:9"},{"condition":{"argumentTypes":null,"id":1686,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3682:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1737,"nodeType":"Block","src":"4044:290:9","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1718,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4104:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1719,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4129:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4129:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1722,"indexExpression":{"argumentTypes":null,"id":1721,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4155:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4129:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"4129:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1724,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4184:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4184:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1727,"indexExpression":{"argumentTypes":null,"id":1726,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4210:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4184:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"4184:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1729,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4242:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4242:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1732,"indexExpression":{"argumentTypes":null,"id":1731,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4268:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4242:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"4242:35:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":1717,"name":"ExecutionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4067:15:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,bytes memory)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4067:228:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"EmitStatement","src":"4062:233:9"},{"expression":null,"functionReturnParameters":1627,"id":1736,"nodeType":"Return","src":"4313:7:9"}]},"id":1738,"nodeType":"IfStatement","src":"3678:656:9","trueBody":{"id":1716,"nodeType":"Block","src":"3691:347:9","statements":[{"expression":{"argumentTypes":null,"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1687,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3709:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3709:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1691,"indexExpression":{"argumentTypes":null,"id":1689,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3735:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3709:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"3709:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3751:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3709:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"ExpressionStatement","src":"3709:46:9"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1697,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3808:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1698,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3833:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3833:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1701,"indexExpression":{"argumentTypes":null,"id":1700,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3859:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3833:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"3833:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1703,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3888:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3888:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1706,"indexExpression":{"argumentTypes":null,"id":1705,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3914:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3888:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"3888:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1708,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3946:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3946:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1711,"indexExpression":{"argumentTypes":null,"id":1710,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3972:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3946:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"3946:35:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":1696,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"3778:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,bytes memory)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3778:221:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1714,"nodeType":"EmitStatement","src":"3773:226:9"},{"expression":null,"functionReturnParameters":1627,"id":1715,"nodeType":"Return","src":"4017:7:9"}]}}]}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4438:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1627,"id":1752,"nodeType":"Return","src":"4431:11:9"}]},"documentation":null,"id":1754,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1754,"src":"3108:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1618,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"3108:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1621,"name":"_id","nodeType":"VariableDeclaration","scope":1754,"src":"3146:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1623,"name":"_approve","nodeType":"VariableDeclaration","scope":1754,"src":"3159:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"3159:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"3107:66:9"},"payable":false,"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"name":"success","nodeType":"VariableDeclaration","scope":1754,"src":"3206:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1625,"name":"bool","nodeType":"ElementaryTypeName","src":"3206:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"3205:14:9"},"scope":2102,"src":"3091:1358:9","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1858,"nodeType":"Block","src":"4609:771:9","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4627:66:9","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1768,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4628:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4628:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1772,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1770,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4654:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4654:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4628:56:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"4628:65:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416c7265616479206578656375746564","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4695:18:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b","typeString":"literal_string \"Already executed\""},"value":"Already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b","typeString":"literal_string \"Already executed\""}],"id":1767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"4619:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4619:95:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"4619:95:9"},{"expression":{"argumentTypes":null,"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1778,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4724:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4724:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1783,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1780,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4750:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4750:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4724:56:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"4724:59:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1785,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"4786:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4724:65:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1787,"nodeType":"ExpressionStatement","src":"4724:65:9"},{"expression":{"argumentTypes":null,"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1788,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4799:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4799:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1793,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1790,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4825:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4825:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4799:56:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"4799:62:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1795,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"4864:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4799:71:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"4799:71:9"},{"expression":{"argumentTypes":null,"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1798,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4880:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4880:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Execution_$1399_storage_$","typeString":"mapping(uint256 => struct KeyHolderLibrary.Execution storage ref)"}},"id":1803,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1800,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4906:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4906:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4880:56:9","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$1399_storage","typeString":"struct KeyHolderLibrary.Execution storage ref"}},"id":1804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"4880:61:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1805,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4944:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4880:69:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1807,"nodeType":"ExpressionStatement","src":"4880:69:9"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1809,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4984:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4984:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1811,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"5015:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1812,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5020:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1813,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5028:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1808,"name":"ExecutionRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4965:18:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,bytes memory)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4965:69:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"EmitStatement","src":"4960:74:9"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1817,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5063:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"5106:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5106:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1819,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"5089:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5089:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5089:28:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1818,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"5079:9:9","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5079:39:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"31","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5119:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1816,"name":"keyHasPurpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5049:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5049:72:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1828,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5139:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"5182:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5182:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1830,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"5165:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5165:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5165:28:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1829,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"5155:9:9","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5155:39:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"32","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5195:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1827,"name":"keyHasPurpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5125:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5125:72:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5049:148:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1847,"nodeType":"IfStatement","src":"5045:239:9","trueBody":{"id":1846,"nodeType":"Block","src":"5199:85:9","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1840,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5221:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1841,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5237:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"5237:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"74727565","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5268:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1839,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"5213:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_uint256_$_t_bool_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,uint256,bool) returns (bool)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5213:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1845,"nodeType":"ExpressionStatement","src":"5213:60:9"}]}},{"expression":{"argumentTypes":null,"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5294:31:9","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1848,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5294:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"5294:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"5294:31:9"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1853,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5342:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executionNonce","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"5342:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5372:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5342:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1766,"id":1857,"nodeType":"Return","src":"5335:38:9"}]},"documentation":null,"id":1859,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"execute","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":1859,"src":"4472:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1755,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"4472:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1758,"name":"_to","nodeType":"VariableDeclaration","scope":1859,"src":"4510:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"4510:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1760,"name":"_value","nodeType":"VariableDeclaration","scope":1859,"src":"4523:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"4523:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1762,"name":"_data","nodeType":"VariableDeclaration","scope":1859,"src":"4539:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1761,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4471:80:9"},"payable":false,"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"name":"executionId","nodeType":"VariableDeclaration","scope":1859,"src":"4584:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4583:21:9"},"scope":2102,"src":"4455:925:9","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2037,"nodeType":"Block","src":"5525:1304:9","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"5539:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5539:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1873,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5561:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_KeyHolderLibrary_$2102","typeString":"library KeyHolderLibrary"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_KeyHolderLibrary_$2102","typeString":"library KeyHolderLibrary"}],"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5553:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5553:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5539:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1892,"nodeType":"IfStatement","src":"5535:208:9","trueBody":{"id":1891,"nodeType":"Block","src":"5568:175:9","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1878,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5604:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"5647:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5647:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1880,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"5630:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5630:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5630:28:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1879,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"5620:9:9","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5620:39:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"31","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5661:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1877,"name":"keyHasPurpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5590:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_KeyHolderData_$1388_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct KeyHolderLibrary.KeyHolderData storage pointer,bytes32,uint256) view returns (bool)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5590:73:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5665:37:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29","typeString":"literal_string \"Sender does not have management key\""},"value":"Sender does not have management key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29","typeString":"literal_string \"Sender does not have management key\""}],"id":1876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"5582:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5582:121:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"5582:121:9"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1894,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5761:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"5761:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1897,"indexExpression":{"argumentTypes":null,"id":1896,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"5781:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5761:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"key","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"5761:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1899,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"5794:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5761:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f2073756368206b6579","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5800:13:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b826bd0762bd3471f6eec3e5a72b8c5ba9c8c5001003ccda50dceabd4e9b73e4","typeString":"literal_string \"No such key\""},"value":"No such key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b826bd0762bd3471f6eec3e5a72b8c5ba9c8c5001003ccda50dceabd4e9b73e4","typeString":"literal_string \"No such key\""}],"id":1893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"5753:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5753:61:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"ExpressionStatement","src":"5753:61:9"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1905,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"5840:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1906,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5846:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1907,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5856:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"5856:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1910,"indexExpression":{"argumentTypes":null,"id":1909,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"5876:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5856:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keyType","nodeType":"MemberAccess","referencedDeclaration":1369,"src":"5856:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1904,"name":"KeyRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"5829:10:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5829:61:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"EmitStatement","src":"5824:66:9"},{"assignments":[1917],"declarations":[{"constant":false,"id":1917,"name":"purposes","nodeType":"VariableDeclaration","scope":2038,"src":"5936:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5936:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"length":null,"nodeType":"ArrayTypeName","src":"5936:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":1923,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1918,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5965:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"5965:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1921,"indexExpression":{"argumentTypes":null,"id":1920,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"5985:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5965:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"purposes","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"5965:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5936:63:9"},{"body":{"id":1967,"nodeType":"Block","src":"6052:241:9","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1935,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6070:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1937,"indexExpression":{"argumentTypes":null,"id":1936,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6079:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1938,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6085:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6070:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1966,"nodeType":"IfStatement","src":"6066:217:9","trueBody":{"id":1965,"nodeType":"Block","src":"6095:188:9","statements":[{"expression":{"argumentTypes":null,"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1940,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6113:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1942,"indexExpression":{"argumentTypes":null,"id":1941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6122:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6113:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1943,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6127:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1948,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1944,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6136:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6136:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6154:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6136:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6127:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6113:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"6113:43:9"},{"expression":{"argumentTypes":null,"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6174:36:9","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1951,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6181:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1956,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1952,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6190:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6190:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6208:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6190:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6181:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1958,"nodeType":"ExpressionStatement","src":"6174:36:9"},{"expression":{"argumentTypes":null,"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"6228:17:9","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1959,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6228:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6228:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"6228:17:9"},{"id":1964,"nodeType":"Break","src":"6263:5:9"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6026:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1929,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6030:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6030:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6026:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1968,"initializationExpression":{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"name":"i","nodeType":"VariableDeclaration","scope":2038,"src":"6014:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint","nodeType":"ElementaryTypeName","src":"6014:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1927,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6023:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6014:10:9"},"loopExpression":{"expression":{"argumentTypes":null,"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6047:3:9","subExpression":{"argumentTypes":null,"id":1932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6047:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"6047:3:9"},"nodeType":"ForStatement","src":"6009:284:9"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1969,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6350:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6350:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6350:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1980,"nodeType":"IfStatement","src":"6346:83:9","trueBody":{"id":1979,"nodeType":"Block","src":"6372:57:9","statements":[{"expression":{"argumentTypes":null,"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6386:32:9","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1973,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"6393:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"6393:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":1976,"indexExpression":{"argumentTypes":null,"id":1975,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"6413:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6393:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"ExpressionStatement","src":"6386:32:9"}]}},{"assignments":[1984],"declarations":[{"constant":false,"id":1984,"name":"keys","nodeType":"VariableDeclaration","scope":2038,"src":"6480:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6480:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1983,"length":null,"nodeType":"ArrayTypeName","src":"6480:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"id":1989,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1985,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"6505:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keysByPurpose","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"6505:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[] storage ref)"}},"id":1988,"indexExpression":{"argumentTypes":null,"id":1987,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6534:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6505:38:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6480:63:9"},{"body":{"id":2033,"nodeType":"Block","src":"6592:209:9","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2001,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6610:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2003,"indexExpression":{"argumentTypes":null,"id":2002,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6615:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6610:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":2004,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"6621:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6610:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2032,"nodeType":"IfStatement","src":"6606:185:9","trueBody":{"id":2031,"nodeType":"Block","src":"6627:164:9","statements":[{"expression":{"argumentTypes":null,"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2006,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6645:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2008,"indexExpression":{"argumentTypes":null,"id":2007,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6650:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6645:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2009,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6655:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2014,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2010,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6660:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6660:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6660:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6655:21:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6645:31:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2016,"nodeType":"ExpressionStatement","src":"6645:31:9"},{"expression":{"argumentTypes":null,"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6694:28:9","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2017,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6701:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2022,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2018,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6706:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6706:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6720:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6706:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6701:21:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2024,"nodeType":"ExpressionStatement","src":"6694:28:9"},{"expression":{"argumentTypes":null,"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"6740:13:9","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2025,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6740:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6740:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"6740:13:9"},{"id":2030,"nodeType":"Break","src":"6771:5:9"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1994,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6570:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1995,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6574:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6574:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2034,"initializationExpression":{"assignments":[1991],"declarations":[{"constant":false,"id":1991,"name":"j","nodeType":"VariableDeclaration","scope":2038,"src":"6558:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint","nodeType":"ElementaryTypeName","src":"6558:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1993,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6567:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6558:10:9"},"loopExpression":{"expression":{"argumentTypes":null,"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6587:3:9","subExpression":{"argumentTypes":null,"id":1998,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6587:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"6587:3:9"},"nodeType":"ForStatement","src":"6553:248:9"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6818:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1869,"id":2036,"nodeType":"Return","src":"6811:11:9"}]},"documentation":null,"id":2038,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"removeKey","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":2038,"src":"5405:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":1860,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"5405:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":1863,"name":"_key","nodeType":"VariableDeclaration","scope":2038,"src":"5443:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1865,"name":"_purpose","nodeType":"VariableDeclaration","scope":2038,"src":"5457:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"5457:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5404:70:9"},"payable":false,"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"name":"success","nodeType":"VariableDeclaration","scope":2038,"src":"5507:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1867,"name":"bool","nodeType":"ElementaryTypeName","src":"5507:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5506:14:9"},"scope":2102,"src":"5386:1443:9","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2100,"nodeType":"Block","src":"6989:388:9","statements":[{"assignments":[],"declarations":[{"constant":false,"id":2050,"name":"isThere","nodeType":"VariableDeclaration","scope":2101,"src":"6999:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2049,"name":"bool","nodeType":"ElementaryTypeName","src":"6999:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":2051,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"6999:12:9"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2052,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"7025:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"7025:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":2055,"indexExpression":{"argumentTypes":null,"id":2054,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"7045:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7025:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":2056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"key","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"7025:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7058:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7025:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2062,"nodeType":"IfStatement","src":"7021:77:9","trueBody":{"id":2061,"nodeType":"Block","src":"7061:37:9","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7082:5:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2048,"id":2060,"nodeType":"Return","src":"7075:12:9"}]}},{"assignments":[2066],"declarations":[{"constant":false,"id":2066,"name":"purposes","nodeType":"VariableDeclaration","scope":2101,"src":"7108:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"7108:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2065,"length":null,"nodeType":"ArrayTypeName","src":"7108:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":2072,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2067,"name":"_keyHolderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"7137:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData storage pointer"}},"id":2068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"7137:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Key_$1372_storage_$","typeString":"mapping(bytes32 => struct KeyHolderLibrary.Key storage ref)"}},"id":2070,"indexExpression":{"argumentTypes":null,"id":2069,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"7157:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7137:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Key_$1372_storage","typeString":"struct KeyHolderLibrary.Key storage ref"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"purposes","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"7137:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7108:63:9"},{"body":{"id":2096,"nodeType":"Block","src":"7224:123:9","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2084,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7242:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2086,"indexExpression":{"argumentTypes":null,"id":2085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7251:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7242:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":2087,"name":"_purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"7257:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7242:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2095,"nodeType":"IfStatement","src":"7238:99:9","trueBody":{"id":2094,"nodeType":"Block","src":"7267:70:9","statements":[{"expression":{"argumentTypes":null,"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2089,"name":"isThere","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7285:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7295:4:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7285:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"ExpressionStatement","src":"7285:14:9"},{"id":2093,"nodeType":"Break","src":"7317:5:9"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7198:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2078,"name":"purposes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7202:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7202:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7198:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2097,"initializationExpression":{"assignments":[2074],"declarations":[{"constant":false,"id":2074,"name":"i","nodeType":"VariableDeclaration","scope":2101,"src":"7186:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint","nodeType":"ElementaryTypeName","src":"7186:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2076,"initialValue":{"argumentTypes":null,"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7195:1:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7186:10:9"},"loopExpression":{"expression":{"argumentTypes":null,"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7219:3:9","subExpression":{"argumentTypes":null,"id":2081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7219:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2083,"nodeType":"ExpressionStatement","src":"7219:3:9"},"nodeType":"ForStatement","src":"7181:166:9"},{"expression":{"argumentTypes":null,"id":2098,"name":"isThere","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7363:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2048,"id":2099,"nodeType":"Return","src":"7356:14:9"}]},"documentation":null,"id":2101,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"keyHasPurpose","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"name":"_keyHolderData","nodeType":"VariableDeclaration","scope":2101,"src":"6858:36:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"},"typeName":{"contractScope":null,"id":2039,"name":"KeyHolderData","nodeType":"UserDefinedTypeName","referencedDeclaration":1388,"src":"6858:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_KeyHolderData_$1388_storage_ptr","typeString":"struct KeyHolderLibrary.KeyHolderData"}},"value":null,"visibility":"internal"},{"constant":false,"id":2042,"name":"_key","nodeType":"VariableDeclaration","scope":2101,"src":"6896:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6896:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2044,"name":"_purpose","nodeType":"VariableDeclaration","scope":2101,"src":"6910:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"6910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6857:70:9"},"payable":false,"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"name":"result","nodeType":"VariableDeclaration","scope":2101,"src":"6972:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2046,"name":"bool","nodeType":"ElementaryTypeName","src":"6972:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6971:13:9"},"scope":2102,"src":"6835:542:9","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":2103,"src":"27:7352:9"}],"src":"0:7380:9"}};

/***/ }),

/***/ "./contracts/build/contracts/OriginIdentity.json":
/*!*******************************************************!*\
  !*** ./contracts/build/contracts/OriginIdentity.json ***!
  \*******************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"name":"purposes","type":"uint256[]"},{"name":"keyType","type":"uint256"},{"name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"},{"name":"_type","type":"uint256"}],"name":"addKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_topic","type":"uint256[]"},{"name":"_issuer","type":"address[]"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_offsets","type":"uint256[]"}],"name":"addClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_id","type":"uint256"},{"name":"_approve","type":"bool"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"name":"claimIds","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"name":"_keys","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_topic","type":"uint256"},{"name":"_scheme","type":"uint256"},{"name":"_issuer","type":"address"},{"name":"_signature","type":"bytes"},{"name":"_data","type":"bytes"},{"name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"name":"claimRequestId","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"execute","outputs":[{"name":"executionId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"name":"topic","type":"uint256"},{"name":"scheme","type":"uint256"},{"name":"issuer","type":"address"},{"name":"signature","type":"bytes"},{"name":"data","type":"bytes"},{"name":"uri","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"name":"purposes","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimRequestId","type":"uint256"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"}],"bytecode":"0x608060408190527f30864be50000000000000000000000000000000000000000000000000000000081526000608481905273__KeyHolderLibrary______________________916330864be59160a49160248186803b15801561006157600080fd5b505af4158015610075573d6000803e3d6000fd5b50505050611340806100886000396000f3006080604052600436106100ab5763ffffffff60e060020a60003504166312aaac7081146100b05780631d3812401461012957806321c148f01461015b5780634eee424a146102a057806353d413c5146102b8578063747442d3146102d357806380e9e9e1146102f05780639010f72614610358578063b1a34e0d14610370578063b61d27f61461046a578063c9100bcb146104d3578063d202158d14610656578063fb307b3414610671575b600080fd5b3480156100bc57600080fd5b506100c8600435610689565b60408051602080820185905291810183905260608082528551908201528451909182916080830191878101910280838360005b838110156101135781810151838201526020016100fb565b5050505090500194505050505060405180910390f35b34801561013557600080fd5b506101476004356024356044356107a2565b604080519115158252519081900360200190f35b34801561016757600080fd5b506040805160206004803580820135838102808601850190965280855261029e95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506108589650505050505050565b005b3480156102ac57600080fd5b50610147600435610a72565b3480156102c457600080fd5b50610147600435602435610b1e565b3480156102df57600080fd5b506101476004356024351515610bcc565b3480156102fc57600080fd5b50610308600435610c48565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561034457818101518382015260200161032c565b505050509050019250505060405180910390f35b34801561036457600080fd5b50610308600435610cab565b34801561037c57600080fd5b50604080516020601f606435600481810135928301849004840285018401909552818452610458948035946024803595600160a060020a0360443516953695608494930191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d999650505050505050565b60408051918252519081900360200190f35b34801561047657600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610458948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610f909650505050505050565b3480156104df57600080fd5b506104eb600435611071565b6040518087815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561055457818101518382015260200161053c565b50505050905090810190601f1680156105815780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b838110156105b457818101518382015260200161059c565b50505050905090810190601f1680156105e15780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b838110156106145781810151838201526020016105fc565b50505050905090810190601f1680156106415780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561066257600080fd5b50610147600435602435611226565b34801561067d57600080fd5b506103086004356112a1565b604080517fb01a9fb300000000000000000000000000000000000000000000000000000000815260006004820181905260248201849052915160609291829173__KeyHolderLibrary______________________9163b01a9fb39160448083019286929190829003018186803b15801561070257600080fd5b505af4158015610716573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561073f57600080fd5b81019080805164010000000081111561075757600080fd5b8201602081018481111561076a57600080fd5b815185602082028301116401000000008211171561078757600080fd5b50506020820151604090920151909891975095509350505050565b604080517f5d601c3a000000000000000000000000000000000000000000000000000000008152600060048201819052602482018690526044820185905260648201849052915173__KeyHolderLibrary______________________91635d601c3a916084808301926020929190829003018186803b15801561082457600080fd5b505af4158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b5051949350505050565b73__ClaimHolderLibrary____________________63428e59ee6000600488888888886040518863ffffffff1660e060020a02815260040180888152602001878152602001806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b838110156108e95781810151838201526020016108d1565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b83811015610928578181015183820152602001610910565b50505050905001868103845289818151815260200191508051906020019080838360005b8381101561096457818101518382015260200161094c565b50505050905090810190601f1680156109915780820380516001836020036101000a031916815260200191505b5086810383528851815288516020918201918a019080838360005b838110156109c45781810151838201526020016109ac565b50505050905090810190601f1680156109f15780820380516001836020036101000a031916815260200191505b508681038252875181528751602091820191808a01910280838360005b83811015610a26578181015183820152602001610a0e565b505050509050019c5050505050505050505050505060006040518083038186803b158015610a5357600080fd5b505af4158015610a67573d6000803e3d6000fd5b505050505050505050565b604080517f5c02fae100000000000000000000000000000000000000000000000000000000815260006004828101829052602483015260448201849052915173__ClaimHolderLibrary____________________91635c02fae1916064808301926020929190829003018186803b158015610aec57600080fd5b505af4158015610b00573d6000803e3d6000fd5b505050506040513d6020811015610b1657600080fd5b505192915050565b604080517f3f47616d0000000000000000000000000000000000000000000000000000000081526000600482018190526024820185905260448201849052915173__KeyHolderLibrary______________________91633f47616d916064808301926020929190829003018186803b158015610b9957600080fd5b505af4158015610bad573d6000803e3d6000fd5b505050506040513d6020811015610bc357600080fd5b50519392505050565b604080517f67d4865f000000000000000000000000000000000000000000000000000000008152600060048201819052602482018590528315156044830152915173__KeyHolderLibrary______________________916367d4865f916064808301926020929190829003018186803b158015610b9957600080fd5b600081815260056020908152604091829020805483518184028101840190945280845260609392830182828015610c9f57602002820191906000526020600020905b81548152600190910190602001808311610c8a575b50505050509050919050565b606073__KeyHolderLibrary______________________63746199f96000846040518363ffffffff1660e060020a028152600401808381526020018281526020019250505060006040518083038186803b158015610d0857600080fd5b505af4158015610d1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d4557600080fd5b810190808051640100000000811115610d5d57600080fd5b82016020810184811115610d7057600080fd5b8151856020820283011164010000000082111715610d8d57600080fd5b50909695505050505050565b600073__ClaimHolderLibrary____________________63bd2d0c28600060048a8a8a8a8a8a6040518963ffffffff1660e060020a0281526004018089815260200188815260200187815260200186815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610e46578181015183820152602001610e2e565b50505050905090810190601f168015610e735780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015610ea6578181015183820152602001610e8e565b50505050905090810190601f168015610ed35780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015610f06578181015183820152602001610eee565b50505050905090810190601f168015610f335780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060206040518083038186803b158015610f5957600080fd5b505af4158015610f6d573d6000803e3d6000fd5b505050506040513d6020811015610f8357600080fd5b5051979650505050505050565b600073__KeyHolderLibrary______________________63e9356c6f60008686866040518563ffffffff1660e060020a0281526004018085815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561102457818101518382015260200161100c565b50505050905090810190601f1680156110515780820380516001836020036101000a031916815260200191505b509550505050505060206040518083038186803b15801561082457600080fd5b6000806000606080606073__ClaimHolderLibrary____________________638522d0eb6004896040518363ffffffff1660e060020a0281526004018083815260200182600019166000191681526020019250505060006040518083038186803b1580156110de57600080fd5b505af41580156110f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561111b57600080fd5b815160208301516040840151606085018051939592949193918301929164010000000081111561114a57600080fd5b8201602081018481111561115d57600080fd5b815164010000000081118282018710171561117757600080fd5b5050929190602001805164010000000081111561119357600080fd5b820160208101848111156111a657600080fd5b81516401000000008111828201871017156111c057600080fd5b505092919060200180516401000000008111156111dc57600080fd5b820160208101848111156111ef57600080fd5b815164010000000081118282018710171561120957600080fd5b505092919050505095509550955095509550955091939550919395565b604080517fd8188a400000000000000000000000000000000000000000000000000000000081526000600482018190526024820185905260448201849052915173__KeyHolderLibrary______________________9163d8188a40916064808301926020929190829003018186803b158015610b9957600080fd5b604080517f0f982bac00000000000000000000000000000000000000000000000000000000815260006004820181905260248201849052915160609273__KeyHolderLibrary______________________92630f982bac9260448083019392829003018186803b158015610d0857600080fd00a165627a7a72305820628ef217d3029cc8799fa6bf498505ebae572c834d7a0a3522082d8541cbb9320029","contractName":"OriginIdentity","networks":{"1":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},"0xe6b6db97dedfb44cbced367387e40b3f92dbee1b1be87f9367f7b673532b0d69":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimRequestId","type":"uint256"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRequested","type":"event"},"0x3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"}},"links":{"ClaimHolderLibrary":"0x1fe0b698b02bbc7fc7029ee1fc15885389b53067","KeyHolderLibrary":"0x7d26ae0838c4e15a87e9d3b26b03a0256c7554d8"},"address":"0x1af44feeb5737736b6beb42fe8e5e6b7bb7391cd","transactionHash":"0x92d55cba67d6084d0490f44a843fe3155f22ac54ad67c8bd71ac84200a5b6b3d"},"4":{"events":{"0x480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},"0x585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397":{"anonymous":false,"inputs":[{"indexed":true,"name":"key","type":"bytes32"},{"indexed":true,"name":"purpose","type":"uint256"},{"indexed":true,"name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},"0x8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},"0xe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},"0x1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"value","type":"uint256"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Executed","type":"event"},"0xb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8":{"anonymous":false,"inputs":[{"indexed":true,"name":"executionId","type":"uint256"},{"indexed":false,"name":"approved","type":"bool"}],"name":"Approved","type":"event"},"0x46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},"0x3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},"0xe6b6db97dedfb44cbced367387e40b3f92dbee1b1be87f9367f7b673532b0d69":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimRequestId","type":"uint256"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimRequested","type":"event"},"0x3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13":{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":true,"name":"topic","type":"uint256"},{"indexed":false,"name":"scheme","type":"uint256"},{"indexed":true,"name":"issuer","type":"address"},{"indexed":false,"name":"signature","type":"bytes"},{"indexed":false,"name":"data","type":"bytes"},{"indexed":false,"name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"}},"links":{"ClaimHolderLibrary":"0x6b022e55864bb884d1bddc87ae741b7266153169","KeyHolderLibrary":"0x10d49d64b983ad887aa783ad10de75d42abab2e9"},"address":"0x8a294aaece85ca472f09ab6c09d75448bf3b25c1","transactionHash":"0x08865d88ef7a2b3372892961bce9309578fc68260ed4e1be1d766cb0bd35dd97"}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/OriginIdentity.sol","exportedSymbols":{"OriginIdentity":[2108]},"id":2109,"nodeType":"SourceUnit","nodes":[{"id":2104,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:10"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolder.sol","file":"./ClaimHolder.sol","id":2105,"nodeType":"ImportDirective","scope":2109,"sourceUnit":181,"src":"26:27:10","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":2106,"name":"ClaimHolder","nodeType":"UserDefinedTypeName","referencedDeclaration":180,"src":"204:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_ClaimHolder_$180","typeString":"contract ClaimHolder"}},"id":2107,"nodeType":"InheritanceSpecifier","src":"204:11:10"}],"contractDependencies":[180,1022,1151,1310],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":2108,"linearizedBaseContracts":[2108,180,1151,1310,1022],"name":"OriginIdentity","nodeType":"ContractDefinition","nodes":[],"scope":2109,"src":"177:41:10"}],"src":"0:219:10"}};

/***/ }),

/***/ "./contracts/build/contracts/OriginToken.json":
/*!****************************************************!*\
  !*** ./contracts/build/contracts/OriginToken.json ***!
  \****************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"constant":true,"inputs":[],"name":"whitelistActive","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"mintingFinished","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_transactor","type":"address"}],"name":"addAllowedTransactor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"unpause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_transactor","type":"address"}],"name":"removeAllowedTransactor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"finishMinting","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"pause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"whitelistExpiration","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"allowedTransactors","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_expiration","type":"uint256"}],"name":"setWhitelistExpiration","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"callSpenderWhitelist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_initialSupply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"enabler","type":"address"},{"indexed":false,"name":"spender","type":"address"}],"name":"AddCallSpenderWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"disabler","type":"address"},{"indexed":false,"name":"spender","type":"address"}],"name":"RemoveCallSpenderWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"expiration","type":"uint256"}],"name":"SetWhitelistExpiration","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"address"}],"name":"AllowedTransactorAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"address"}],"name":"AllowedTransactorRemoved","type":"event"},{"anonymous":false,"inputs":[],"name":"Pause","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpause","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[],"name":"MintFinished","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"burner","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":false,"inputs":[{"name":"_value","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_who","type":"address"},{"name":"_value","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"}],"name":"addCallSpenderWhitelist","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"}],"name":"removeCallSpenderWhitelist","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_selector","type":"bytes4"},{"name":"_callParams","type":"bytes"}],"name":"approveAndCallWithSender","outputs":[{"name":"","type":"bool"}],"payable":true,"stateMutability":"payable","type":"function"}],"bytecode":"","contractName":"OriginToken","networks":{"1":{"events":{"0x1ba6e2be05698ce865c32566beec57943dafda4497692900d3d5b3c15fecfbb3":{"anonymous":false,"inputs":[{"indexed":false,"name":"enabler","type":"address"},{"indexed":false,"name":"spender","type":"address"}],"name":"AddCallSpenderWhitelist","type":"event"},"0xe840dc5b604bdf9f0bb0eafea84c8542625377dd1fe6116b6b63323e4855a85a":{"anonymous":false,"inputs":[{"indexed":false,"name":"disabler","type":"address"},{"indexed":false,"name":"spender","type":"address"}],"name":"RemoveCallSpenderWhitelist","type":"event"},"0x425185790737a8bc9659e0a4633a6b6b0428202b2e51b787b431d5fa68242f58":{"anonymous":false,"inputs":[{"indexed":false,"name":"expiration","type":"uint256"}],"name":"SetWhitelistExpiration","type":"event"},"0xe504b838e935ead8d5abd80b50f40c979d04e5a09fb1a3ffad89d2652a458a31":{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"address"}],"name":"AllowedTransactorAdded","type":"event"},"0xfd1d27a7b372eaafdb0f7bb6231d45a1557a67d539850354457c36e54b65b479":{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"address"}],"name":"AllowedTransactorRemoved","type":"event"},"0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625":{"anonymous":false,"inputs":[],"name":"Pause","type":"event"},"0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33":{"anonymous":false,"inputs":[],"name":"Unpause","type":"event"},"0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885":{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Mint","type":"event"},"0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08":{"anonymous":false,"inputs":[],"name":"MintFinished","type":"event"},"0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},"0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5":{"anonymous":false,"inputs":[{"indexed":true,"name":"burner","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Burn","type":"event"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}},"links":{},"address":"0x8207c1ffc5b6804f6024322ccf34f29c3541ae26","transactionHash":"0x9b8a3a8db40b02078f89cec2eed569682a23e37b36c3e462190ef391ebdd1d11"},"4":{"events":{"0x1ba6e2be05698ce865c32566beec57943dafda4497692900d3d5b3c15fecfbb3":{"anonymous":false,"inputs":[{"indexed":false,"name":"enabler","type":"address"},{"indexed":false,"name":"spender","type":"address"}],"name":"AddCallSpenderWhitelist","type":"event"},"0xe840dc5b604bdf9f0bb0eafea84c8542625377dd1fe6116b6b63323e4855a85a":{"anonymous":false,"inputs":[{"indexed":false,"name":"disabler","type":"address"},{"indexed":false,"name":"spender","type":"address"}],"name":"RemoveCallSpenderWhitelist","type":"event"},"0x425185790737a8bc9659e0a4633a6b6b0428202b2e51b787b431d5fa68242f58":{"anonymous":false,"inputs":[{"indexed":false,"name":"expiration","type":"uint256"}],"name":"SetWhitelistExpiration","type":"event"},"0xe504b838e935ead8d5abd80b50f40c979d04e5a09fb1a3ffad89d2652a458a31":{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"address"}],"name":"AllowedTransactorAdded","type":"event"},"0xfd1d27a7b372eaafdb0f7bb6231d45a1557a67d539850354457c36e54b65b479":{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"address"}],"name":"AllowedTransactorRemoved","type":"event"},"0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625":{"anonymous":false,"inputs":[],"name":"Pause","type":"event"},"0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33":{"anonymous":false,"inputs":[],"name":"Unpause","type":"event"},"0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885":{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Mint","type":"event"},"0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08":{"anonymous":false,"inputs":[],"name":"MintFinished","type":"event"},"0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},"0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5":{"anonymous":false,"inputs":[{"indexed":true,"name":"burner","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Burn","type":"event"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}},"links":{},"address":"0xa115e16ef6e217f7a327a57031f75ce0487aadb8","transactionHash":"0x17cabad2ea629f1febf48897cf768a4442da15c70bc70874654f7b263e97f23d"}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/token/OriginToken.sol","exportedSymbols":{"OriginToken":[3907]},"id":3908,"nodeType":"SourceUnit","nodes":[{"id":3724,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:14"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol","file":"../../../node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol","id":3725,"nodeType":"ImportDirective","scope":3908,"sourceUnit":4666,"src":"26:93:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol","file":"../../../node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol","id":3726,"nodeType":"ImportDirective","scope":3908,"sourceUnit":4881,"src":"120:93:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol","file":"../../../node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol","id":3727,"nodeType":"ImportDirective","scope":3908,"sourceUnit":4700,"src":"214:93:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/token/WhitelistedPausableToken.sol","file":"./WhitelistedPausableToken.sol","id":3728,"nodeType":"ImportDirective","scope":3908,"sourceUnit":4259,"src":"309:40:14","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":3729,"name":"BurnableToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4665,"src":"481:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_BurnableToken_$4665","typeString":"contract BurnableToken"}},"id":3730,"nodeType":"InheritanceSpecifier","src":"481:13:14"},{"arguments":null,"baseName":{"contractScope":null,"id":3731,"name":"MintableToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4880,"src":"496:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_MintableToken_$4880","typeString":"contract MintableToken"}},"id":3732,"nodeType":"InheritanceSpecifier","src":"496:13:14"},{"arguments":null,"baseName":{"contractScope":null,"id":3733,"name":"WhitelistedPausableToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4258,"src":"511:24:14","typeDescriptions":{"typeIdentifier":"t_contract$_WhitelistedPausableToken_$4258","typeString":"contract WhitelistedPausableToken"}},"id":3734,"nodeType":"InheritanceSpecifier","src":"511:24:14"},{"arguments":null,"baseName":{"contractScope":null,"id":3735,"name":"DetailedERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":4699,"src":"537:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_DetailedERC20_$4699","typeString":"contract DetailedERC20"}},"id":3736,"nodeType":"InheritanceSpecifier","src":"537:13:14"}],"contractDependencies":[4258,4318,4498,4594,4665,4699,4742,4774,4880,4982,5229],"contractKind":"contract","documentation":"@title Origin token\n@dev Token that allows minting, burning, and pausing by contract owner","fullyImplemented":true,"id":3907,"linearizedBaseContracts":[3907,4699,4258,4982,4318,4880,4498,5229,4665,4594,4742,4774],"name":"OriginToken","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":3742,"name":"AddCallSpenderWhitelist","nodeType":"EventDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"indexed":false,"name":"enabler","nodeType":"VariableDeclaration","scope":3742,"src":"587:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3740,"indexed":false,"name":"spender","nodeType":"VariableDeclaration","scope":3742,"src":"604:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"586:34:14"},"src":"557:64:14"},{"anonymous":false,"documentation":null,"id":3748,"name":"RemoveCallSpenderWhitelist","nodeType":"EventDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"indexed":false,"name":"disabler","nodeType":"VariableDeclaration","scope":3748,"src":"659:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3743,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3746,"indexed":false,"name":"spender","nodeType":"VariableDeclaration","scope":3748,"src":"677:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3745,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"658:35:14"},"src":"626:68:14"},{"constant":false,"id":3752,"name":"callSpenderWhitelist","nodeType":"VariableDeclaration","scope":3907,"src":"700:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3751,"keyType":{"id":3749,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"700:25:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3750,"name":"bool","nodeType":"ElementaryTypeName","src":"720:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"public"},{"body":{"id":3772,"nodeType":"Block","src":"909:72:14","statements":[{"expression":{"argumentTypes":null,"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"919:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"927:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"927:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"919:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3766,"nodeType":"ExpressionStatement","src":"919:18:14"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3768,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"952:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3769,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"959:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3767,"name":"mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"947:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"947:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3771,"nodeType":"ExpressionStatement","src":"947:27:14"}]},"documentation":null,"id":3773,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"4f726967696e546f6b656e","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"876:13:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7db9a4e07cbf15285ee6bdfe31926d90f5ab876f595f536f038eccb94f03adc","typeString":"literal_string \"OriginToken\""},"value":"OriginToken"},{"argumentTypes":null,"hexValue":"4f474e","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"891:5:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_23a3152e1a03c20056a924c53f6c5ba9ebbcde51ee35bd4d0871e703c80580e9","typeString":"literal_string \"OGN\""},"value":"OGN"},{"argumentTypes":null,"hexValue":"3138","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"898:2:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"}],"id":3760,"modifierName":{"argumentTypes":null,"id":3756,"name":"DetailedERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"862:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DetailedERC20_$4699_$","typeString":"type(contract DetailedERC20)"}},"nodeType":"ModifierInvocation","src":"862:39:14"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"name":"_initialSupply","nodeType":"VariableDeclaration","scope":3773,"src":"838:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"837:24:14"},"payable":false,"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[],"src":"909:0:14"},"scope":3907,"src":"826:155:14","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3786,"nodeType":"Block","src":"1168:152:14","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3783,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"1306:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3780,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"1295:5:14","typeDescriptions":{"typeIdentifier":"t_super$_OriginToken_$3907","typeString":"contract super OriginToken"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":4617,"src":"1295:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1295:18:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3785,"nodeType":"ExpressionStatement","src":"1295:18:14"}]},"documentation":null,"id":3787,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3778,"modifierName":{"argumentTypes":null,"id":3777,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"1158:9:14","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1158:9:14"}],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"name":"_value","nodeType":"VariableDeclaration","scope":3787,"src":"1135:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1134:16:14"},"payable":false,"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[],"src":"1168:0:14"},"scope":3907,"src":"1121:199:14","stateMutability":"nonpayable","superFunction":4617,"visibility":"public"},{"body":{"id":3801,"nodeType":"Block","src":"1555:36:14","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3797,"name":"_who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1571:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"1577:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3796,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"1565:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1565:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3800,"nodeType":"ExpressionStatement","src":"1565:19:14"}]},"documentation":null,"id":3802,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3794,"modifierName":{"argumentTypes":null,"id":3793,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"1545:9:14","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1545:9:14"}],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"name":"_who","nodeType":"VariableDeclaration","scope":3802,"src":"1508:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3791,"name":"_value","nodeType":"VariableDeclaration","scope":3802,"src":"1522:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1507:30:14"},"payable":false,"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"1555:0:14"},"scope":3907,"src":"1494:97:14","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3821,"nodeType":"Block","src":"1816:114:14","statements":[{"expression":{"argumentTypes":null,"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3809,"name":"callSpenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"1826:20:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3811,"indexExpression":{"argumentTypes":null,"id":3810,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"1847:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1826:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1859:4:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1826:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3814,"nodeType":"ExpressionStatement","src":"1826:37:14"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"1902:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1902:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3818,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"1914:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3815,"name":"AddCallSpenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1878:23:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:45:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3820,"nodeType":"EmitStatement","src":"1873:50:14"}]},"documentation":null,"id":3822,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3807,"modifierName":{"argumentTypes":null,"id":3806,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"1806:9:14","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1806:9:14"}],"name":"addCallSpenderWhitelist","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"name":"_spender","nodeType":"VariableDeclaration","scope":3822,"src":"1781:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"1781:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1780:18:14"},"payable":false,"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[],"src":"1816:0:14"},"scope":3907,"src":"1748:182:14","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3840,"nodeType":"Block","src":"2121:117:14","statements":[{"expression":{"argumentTypes":null,"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2131:37:14","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3829,"name":"callSpenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"2138:20:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3831,"indexExpression":{"argumentTypes":null,"id":3830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"2159:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2138:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3833,"nodeType":"ExpressionStatement","src":"2131:37:14"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"2210:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2210:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3837,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"2222:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3834,"name":"RemoveCallSpenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2183:26:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2183:48:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3839,"nodeType":"EmitStatement","src":"2178:53:14"}]},"documentation":null,"id":3841,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3827,"modifierName":{"argumentTypes":null,"id":3826,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"2111:9:14","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2111:9:14"}],"name":"removeCallSpenderWhitelist","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"name":"_spender","nodeType":"VariableDeclaration","scope":3841,"src":"2086:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3823,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2085:18:14"},"payable":false,"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[],"src":"2121:0:14"},"scope":3907,"src":"2050:188:14","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3905,"nodeType":"Block","src":"3497:491:14","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3855,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"3515:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3857,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"3535:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_OriginToken_$3907","typeString":"contract OriginToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OriginToken_$3907","typeString":"contract OriginToken"}],"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3527:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3527:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3515:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"746f6b656e20636f6e74726163742063616e277420626520617070726f766564","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3542:34:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d951fda88afb5b30a058d85e80f524b00ec125e4a4f3545ea73e40fee70b3d85","typeString":"literal_string \"token contract can't be approved\""},"value":"token contract can't be approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d951fda88afb5b30a058d85e80f524b00ec125e4a4f3545ea73e40fee70b3d85","typeString":"literal_string \"token contract can't be approved\""}],"id":3854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"3507:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3507:70:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3862,"nodeType":"ExpressionStatement","src":"3507:70:14"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3864,"name":"callSpenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"3595:20:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3866,"indexExpression":{"argumentTypes":null,"id":3865,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"3616:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3595:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"7370656e646572206e6f7420696e2077686974656c697374","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3627:26:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_af1d74a78a9ac0f46171bd599b1c612fae02f907f5d18ef055e98f019b5a29d9","typeString":"literal_string \"spender not in whitelist\""},"value":"spender not in whitelist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af1d74a78a9ac0f46171bd599b1c612fae02f907f5d18ef055e98f019b5a29d9","typeString":"literal_string \"spender not in whitelist\""}],"id":3863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"3587:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3587:67:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3869,"nodeType":"ExpressionStatement","src":"3587:67:14"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3873,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"3687:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3874,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"3697:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3871,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"3673:5:14","typeDescriptions":{"typeIdentifier":"t_super$_OriginToken_$3907","typeString":"contract super OriginToken"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":4945,"src":"3673:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3673:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"617070726f7665206661696c6564","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3706:16:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_69ab7f66ce454a3f8b5143239ba623f1d94f81bb9bd3a1f7a83880ee53504f33","typeString":"literal_string \"approve failed\""},"value":"approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69ab7f66ce454a3f8b5143239ba623f1d94f81bb9bd3a1f7a83880ee53504f33","typeString":"literal_string \"approve failed\""}],"id":3870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"3665:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:58:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3878,"nodeType":"ExpressionStatement","src":"3665:58:14"},{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"name":"callData","nodeType":"VariableDeclaration","scope":3906,"src":"3734:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3734:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":3890,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3883,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"3775:9:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"3794:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3794:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3786:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3786:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3888,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3807:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":3881,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"3758:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3758:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:61:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3734:85:14"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3898,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"3927:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"3916:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3916:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3892,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"3896:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3896:13:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$__$returns$_t_bool_$","typeString":"function () payable returns (bool)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3896:19:14","typeDescriptions":{"typeIdentifier":"t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$","typeString":"function (uint256) returns (function () payable returns (bool))"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:30:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$__$returns$_t_bool_$value","typeString":"function () payable returns (bool)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"70726f786965642063616c6c206661696c6564","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:21:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_93c7eea5590fccf024422b08235051ea0ffbb6ab61b395bae0001d5932c97949","typeString":"literal_string \"proxied call failed\""},"value":"proxied call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93c7eea5590fccf024422b08235051ea0ffbb6ab61b395bae0001d5932c97949","typeString":"literal_string \"proxied call failed\""}],"id":3891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"3888:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3888:72:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3902,"nodeType":"ExpressionStatement","src":"3888:72:14"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3977:4:14","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3853,"id":3904,"nodeType":"Return","src":"3970:11:14"}]},"documentation":null,"id":3906,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approveAndCallWithSender","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"name":"_spender","nodeType":"VariableDeclaration","scope":3906,"src":"3339:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3845,"name":"_value","nodeType":"VariableDeclaration","scope":3906,"src":"3365:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"3365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3847,"name":"_selector","nodeType":"VariableDeclaration","scope":3906,"src":"3389:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3846,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3389:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"},{"constant":false,"id":3849,"name":"_callParams","nodeType":"VariableDeclaration","scope":3906,"src":"3415:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"3415:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3329:109:14"},"payable":true,"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"name":"","nodeType":"VariableDeclaration","scope":3906,"src":"3487:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3851,"name":"bool","nodeType":"ElementaryTypeName","src":"3487:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"3486:6:14"},"scope":3907,"src":"3296:692:14","stateMutability":"payable","superFunction":null,"visibility":"public"}],"scope":3908,"src":"457:3533:14"}],"src":"0:3991:14"}};

/***/ }),

/***/ "./contracts/build/contracts/V00_Marketplace.json":
/*!********************************************************!*\
  !*** ./contracts/build/contracts/V00_Marketplace.json ***!
  \********************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"constant":true,"inputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"name":"offers","outputs":[{"name":"value","type":"uint256"},{"name":"commission","type":"uint256"},{"name":"refund","type":"uint256"},{"name":"currency","type":"address"},{"name":"buyer","type":"address"},{"name":"affiliate","type":"address"},{"name":"arbitrator","type":"address"},{"name":"finalizes","type":"uint256"},{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"tokenAddr","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"allowedAffiliates","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"listings","outputs":[{"name":"seller","type":"address"},{"name":"deposit","type":"uint256"},{"name":"depositManager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_tokenAddr","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"MarketplaceData","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"AffiliateAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"AffiliateRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingArbitrated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingData","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferAccepted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferFundsAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferDisputed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"},{"indexed":false,"name":"ruling","type":"uint256"}],"name":"OfferRuling","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferData","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"constant":true,"inputs":[],"name":"totalListings","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"listingID","type":"uint256"}],"name":"totalOffers","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_ipfsHash","type":"bytes32"},{"name":"_deposit","type":"uint256"},{"name":"_depositManager","type":"address"}],"name":"createListing","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_seller","type":"address"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_deposit","type":"uint256"},{"name":"_depositManager","type":"address"}],"name":"createListingWithSender","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_additionalDeposit","type":"uint256"}],"name":"updateListing","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_seller","type":"address"},{"name":"listingID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_additionalDeposit","type":"uint256"}],"name":"updateListingWithSender","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"_target","type":"address"},{"name":"_ipfsHash","type":"bytes32"}],"name":"withdrawListing","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_finalizes","type":"uint256"},{"name":"_affiliate","type":"address"},{"name":"_commission","type":"uint256"},{"name":"_value","type":"uint256"},{"name":"_currency","type":"address"},{"name":"_arbitrator","type":"address"},{"name":"_withdrawOfferID","type":"uint256"}],"name":"makeOffer","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_finalizes","type":"uint256"},{"name":"_affiliate","type":"address"},{"name":"_commission","type":"uint256"},{"name":"_value","type":"uint256"},{"name":"_currency","type":"address"},{"name":"_arbitrator","type":"address"}],"name":"makeOffer","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"}],"name":"acceptOffer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"}],"name":"withdrawOffer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_value","type":"uint256"}],"name":"addFunds","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"}],"name":"finalize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"}],"name":"dispute","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"},{"name":"_ruling","type":"uint256"},{"name":"_refund","type":"uint256"}],"name":"executeRuling","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"_refund","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"}],"name":"updateRefund","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"ipfsHash","type":"bytes32"}],"name":"addData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"ipfsHash","type":"bytes32"}],"name":"addData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"offerID","type":"uint256"},{"name":"ipfsHash","type":"bytes32"}],"name":"addData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"listingID","type":"uint256"},{"name":"target","type":"address"},{"name":"value","type":"uint256"},{"name":"ipfsHash","type":"bytes32"}],"name":"sendDeposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_tokenAddr","type":"address"}],"name":"setTokenAddr","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_affiliate","type":"address"},{"name":"ipfsHash","type":"bytes32"}],"name":"addAffiliate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_affiliate","type":"address"},{"name":"ipfsHash","type":"bytes32"}],"name":"removeAffiliate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x60806040523480156200001157600080fd5b5060405160208062002d3f83398101604052516000805433600160a060020a0319918216811790911617905562000051816401000000006200008d810204565b506000805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff805460ff19166001179055620000c7565b600054600160a060020a03163314620000a557600080fd5b60048054600160a060020a031916600160a060020a0392909216919091179055565b612c6880620000d76000396000f30060806040526004361061017f5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631d34be47811461018457806328af94c8146101a75780632ebd1e28146101bf5780634d03a9a5146101e057806351b18250146102535780635f0da25b146102845780635fbe4d1d146102ae57806370809757146102df578063715018a6146102fd57806378572816146103125780637d19514d146103365780638da5cb5b1461034a57806391f1f3101461035f578063963ff4cb146103895780639a8d10a3146103be5780639c3f7ca2146103d9578063a0823111146103f7578063a3111d7c1461041b578063bf77aa1f14610442578063c73111dd14610460578063c78b616c14610484578063c9c8580c14610499578063ca27eb1c146104ce578063cea4b687146104f5578063d9fefbf81461051f578063de4006291461053d578063de74e57b1461056c578063ebe65f60146105af578063f2fde38b146105cd578063fde34dc4146105ee575b600080fd5b34801561019057600080fd5b506101a560043560243560443560643561060c565b005b3480156101b357600080fd5b506101a56004356107ab565b3480156101cb57600080fd5b506101a5600160a060020a03600435166107e4565b3480156101ec57600080fd5b506101fb60043560243561082a565b60408051998a5260208a019890985288880196909652600160a060020a039485166060890152928416608088015290831660a087015290911660c085015260e084015260ff1661010083015251908190036101200190f35b6101a5600435602435604435600160a060020a036064358116906084359060a4359060c43581169060e435166108a7565b34801561029057600080fd5b506101a5600435600160a060020a0360243516604435606435610d3b565b3480156102ba57600080fd5b506102c3610f51565b60408051600160a060020a039092168252519081900360200190f35b3480156102eb57600080fd5b506101a5600435602435604435610f60565b34801561030957600080fd5b506101a5611128565b34801561031e57600080fd5b506101a5600160a060020a0360043516602435611194565b6101a5600435602435604435606435611207565b34801561035657600080fd5b506102c36114d3565b34801561036b57600080fd5b506103776004356114e2565b60408051918252519081900360200190f35b34801561039557600080fd5b506103aa600160a060020a03600435166114f4565b604080519115158252519081900360200190f35b3480156103ca57600080fd5b506101a5600435602435611509565b3480156103e557600080fd5b506101a5600435602435604435611544565b34801561040357600080fd5b506101a5600160a060020a0360043516602435611734565b34801561042757600080fd5b506101a5600435600160a060020a03602435166044356117a4565b34801561044e57600080fd5b506101a5600435602435604435611960565b34801561046c57600080fd5b506101a5600435602435604435606435608435611971565b34801561049057600080fd5b50610377611c15565b6101a5600435602435604435600160a060020a036064358116906084359060a4359060c43581169060e4351661010435611c1b565b3480156104da57600080fd5b506101a5600435602435600160a060020a0360443516611c41565b34801561050157600080fd5b506103aa600160a060020a0360043516602435604435606435611c4d565b34801561052b57600080fd5b506101a5600435602435604435611cc9565b34801561054957600080fd5b506103aa600160a060020a03600435811690602435906044359060643516611d08565b34801561057857600080fd5b50610584600435611d79565b60408051600160a060020a039485168152602081019390935292168183015290519081900360600190f35b3480156105bb57600080fd5b506101a5600435602435604435611db5565b3480156105d957600080fd5b506101a5600160a060020a0360043516611fbc565b3480156105fa57600080fd5b506101a5600435602435604435611fdf565b600084815260026020526040812080548291908690811061062957fe5b9060005260206000209060090201915060018681548110151561064857fe5b600091825260209091206003909102018054909150600160a060020a031633146106bc576040805160e560020a62461bcd02815260206004820152601060248201527f53656c6c6572206d7573742063616c6c00000000000000000000000000000000604482015290519081900360640190fd5b600882015460ff16600214610709576040805160e560020a62461bcd0281526020600482015260126024820152600080516020612c1d833981519152604482015290519081900360640190fd5b8154841115610762576040805160e560020a62461bcd02815260206004820152601060248201527f45786365737369766520726566756e6400000000000000000000000000000000604482015290519081900360640190fd5b600282018490556040805184815290518691889133917f9b7312a236066d2da679eba7e3a2e86d2d07a973819499846c0efd2fd2506c80919081900360200190a4505050505050565b60408051828152905133917f8e530f3a09c59fdf1b0d5ed714b7a5b94c059256cdc29b8521e9891734c6a2b7919081900360200190a250565b600054600160a060020a031633146107fb57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60026020528160005260406000208181548110151561084557fe5b60009182526020909120600990910201805460018201546002830154600384015460048501546005860154600687015460078801546008909801549699509497509295600160a060020a03928316959183169493831693909216919060ff1689565b3060009081526003602052604090205460ff1680806108de5750600160a060020a03861660009081526003602052604090205460ff165b1515610934576040805160e560020a62461bcd02815260206004820152601560248201527f416666696c69617465206e6f7420616c6c6f7765640000000000000000000000604482015290519081900360640190fd5b600160a060020a038616151561099a57841561099a576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6d6d697373696f6e20726571756972657320616666696c69617465000000604482015290519081900360640190fd5b600260008a8152602001908152602001600020610120604051908101604052808681526020018781526020016000815260200185600160a060020a0316815260200133600160a060020a0316815260200188600160a060020a0316815260200184600160a060020a03168152602001898152602001600160ff168152509080600181540180825580915050906001820390600052602060002090600902016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a815481600160a060020a030219169083600160a060020a0316021790555060808201518160040160006101000a815481600160a060020a030219169083600160a060020a0316021790555060a08201518160050160006101000a815481600160a060020a030219169083600160a060020a0316021790555060c08201518160060160006101000a815481600160a060020a030219169083600160a060020a0316021790555060e082015181600701556101008201518160080160006101000a81548160ff021916908360ff16021790555050505082600160a060020a031660001415610bb157348414610bac576040805160e560020a62461bcd02815260206004820152601d60248201527f4554482076616c756520646f65736e2774206d61746368206f66666572000000604482015290519081900360640190fd5b610ce1565b3415610c07576040805160e560020a62461bcd02815260206004820152601160248201527f45544820776f756c64206265206c6f7374000000000000000000000000000000604482015290519081900360640190fd5b6040805160e060020a6323b872dd028152336004820152306024820152604481018690529051600160a060020a038516916323b872dd9160648083019260209291908290030181600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b505050506040513d6020811015610c8957600080fd5b50511515610ce1576040805160e560020a62461bcd02815260206004820152601360248201527f7472616e7366657246726f6d206661696c656400000000000000000000000000604482015290519081900360640190fd5b6000898152600260209081526040918290205482518b81529251600019909101928c9233927f6ee68cb753f284cf771c1a32c236d7ffcab6011345186a30e57837d761e868379281900390910190a4505050505050505050565b6000600185815481101515610d4c57fe5b60009182526020909120600260039092020190810154909150600160a060020a03163314610dc4576040805160e560020a62461bcd02815260206004820152601860248201527f6465706f7369744d616e61676572206d7573742063616c6c0000000000000000604482015290519081900360640190fd5b6001810154831115610e20576040805160e560020a62461bcd02815260206004820152600e60248201527f56616c756520746f6f2068696768000000000000000000000000000000000000604482015290519081900360640190fd5b6001810180548490039055600480546040805160e060020a63a9059cbb028152600160a060020a0388811694820194909452602481018790529051929091169163a9059cbb916044808201926020929091908290030181600087803b158015610e8857600080fd5b505af1158015610e9c573d6000803e3d6000fd5b505050506040513d6020811015610eb257600080fd5b50511515610f0a576040805160e560020a62461bcd02815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b6040805183815290518691600160a060020a038716917f9c9827b799328bcbadbd04862686713436136571c54d7ca0388bd952f314f8909181900360200190a35050505050565b600454600160a060020a031681565b600080600185815481101515610f7257fe5b906000526020600020906003020191506002600086815260200190815260200160002084815481101515610fa257fe5b600091825260209091206009909102016004810154909150600160a060020a0316331480610fd957508154600160a060020a031633145b151561102f576040805160e560020a62461bcd02815260206004820152601760248201527f4d7573742062652073656c6c6572206f72206275796572000000000000000000604482015290519081900360640190fd5b600881015460ff1660021461107c576040805160e560020a62461bcd0281526020600482015260126024820152600080516020612c1d833981519152604482015290519081900360640190fd5b60078101544211156110d8576040805160e560020a62461bcd02815260206004820152601160248201527f416c72656164792066696e616c697a6564000000000000000000000000000000604482015290519081900360640190fd5b60088101805460ff191660031790556040805184815290518591879133917f11c45991938e1dec0b00887cd2368a2195fccb46b08cc56483ac3053ddb609b2919081900360200190a45050505050565b600054600160a060020a0316331461113f57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146111ab57600080fd5b600160a060020a038216600081815260036020908152604091829020805460ff19166001179055815184815291517f5e48128fde8c162f70ea9f59d0a58f1d1cc40c2eec4b4c71356ab395650bfbdf9281900390910190a25050565b600084815260026020526040812080548590811061122157fe5b600091825260209091206009909102016004810154909150600160a060020a03163314611298576040805160e560020a62461bcd02815260206004820152600f60248201527f4275796572206d7573742063616c6c0000000000000000000000000000000000604482015290519081900360640190fd5b600881015460ff166002146112e5576040805160e560020a62461bcd0281526020600482015260126024820152600080516020612c1d833981519152604482015290519081900360640190fd5b6003810154600160a060020a0316151561135557348214611350576040805160e560020a62461bcd02815260206004820152601560248201527f73656e7420213d206f6666657265642076616c75650000000000000000000000604482015290519081900360640190fd5b61148c565b34156113ab576040805160e560020a62461bcd02815260206004820152601460248201527f455448206d757374206e6f742062652073656e74000000000000000000000000604482015290519081900360640190fd5b60038101546040805160e060020a6323b872dd028152336004820152306024820152604481018590529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b15801561140a57600080fd5b505af115801561141e573d6000803e3d6000fd5b505050506040513d602081101561143457600080fd5b5051151561148c576040805160e560020a62461bcd02815260206004820152601360248201527f7472616e7366657246726f6d206661696c656400000000000000000000000000604482015290519081900360640190fd5b8054820181556040805184815290518591879133917f5f0e66c42b81a43cbd35b11ea0a599d0be1d8e1fdb61d1d4f7a98243ba6cc26b919081900360200190a45050505050565b600054600160a060020a031681565b60009081526002602052604090205490565b60036020526000908152604090205460ff1681565b604080518281529051839133917f12dc84d4005dd5b86fd88951106aa76927a62b83b85ba9c912a7268582906aa99181900360200190a35050565b60008060018581548110151561155657fe5b90600052602060002090600302019150600260008681526020019081526020016000208481548110151561158657fe5b6000918252602090912083546009909202019150600160a060020a031633146115f9576040805160e560020a62461bcd02815260206004820152601260248201527f53656c6c6572206d757374206163636570740000000000000000000000000000604482015290519081900360640190fd5b600881015460ff16600114611658576040805160e560020a62461bcd02815260206004820152601160248201527f73746174757320213d2063726561746564000000000000000000000000000000604482015290519081900360640190fd5b6001808201549083015410156116b8576040805160e560020a62461bcd02815260206004820152601d60248201527f6465706f736974206d75737420636f76657220636f6d6d697373696f6e000000604482015290519081900360640190fd5b633b9aca00816007015410156116d357600781018054420190555b600180820154908301805491909103905560088101805460ff191660021790556040805184815290518591879133917f449224201a35688b74a38ff24770e8b2a326ebf42357bf19a36f5fedbbe552a0919081900360200190a45050505050565b600054600160a060020a0316331461174b57600080fd5b600160a060020a038216600081815260036020908152604091829020805460ff19169055815184815291517f3553c89fbe376344fc3e6cfb39cce65e6d961cece468c297dad2a1e31d4fa2b69281900390910190a25050565b60006001848154811015156117b557fe5b600091825260209091206003909102016002810154909150600160a060020a0316331461182c576040805160e560020a62461bcd02815260206004820152601660248201527f4d757374206265206465706f7369744d616e6167657200000000000000000000604482015290519081900360640190fd5b600160a060020a038316151561188c576040805160e560020a62461bcd02815260206004820152600960248201527f4e6f207461726765740000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6004805460018301546040805160e060020a63a9059cbb028152600160a060020a0388811695820195909552602481019290925251929091169163a9059cbb916044808201926020929091908290030181600087803b1580156118ee57600080fd5b505af1158015611902573d6000803e3d6000fd5b505050506040513d602081101561191857600080fd5b50506040805183815290518591600160a060020a038616917fafa3dc4f271ef3419006f21140d375eba48ef3def56e8bfe6d54d0c72a81a3079181900360200190a350505050565b61196c338484846121eb565b505050565b600085815260026020526040812080548690811061198b57fe5b600091825260209091206009909102016006810154909150600160a060020a03163314611a02576040805160e560020a62461bcd02815260206004820152601260248201527f4d7573742062652061726269747261746f720000000000000000000000000000604482015290519081900360640190fd5b600881015460ff16600314611a61576040805160e560020a62461bcd02815260206004820152601260248201527f73746174757320213d2064697370757465640000000000000000000000000000604482015290519081900360640190fd5b8054821115611aba576040805160e560020a62461bcd02815260206004820152600f60248201527f726566756e6420746f6f20686967680000000000000000000000000000000000604482015290519081900360640190fd5b6002810182905560018084161415611adb57611ad6868661235f565b611ae5565b611ae5868661250d565b8260021660021415611b0057611afb8686612859565b611b2f565b8060010154600187815481101515611b1457fe5b60009182526020909120600160039092020101805490910190555b60068101546040805186815260208101869052815188938a93600160a060020a03909116927f3e4d55eb2a402ba6f500db5d75f9303dfe863a2e8319054aeddb6a35ec7e3c61929081900390910190a46000868152600260205260409020805486908110611b9957fe5b600091825260208220600990910201818155600181018290556002810182905560038101805473ffffffffffffffffffffffffffffffffffffffff19908116909155600482018054821690556005820180548216905560068201805490911690556007810191909155600801805460ff19169055505050505050565b60015490565b611c2689828a611db5565b611c3689898989898989896108a7565b505050505050505050565b61196c3384848461297f565b600454600090600160a060020a03163314611cb2576040805160e560020a62461bcd02815260206004820152600f60248201527f546f6b656e206d7573742063616c6c0000000000000000000000000000000000604482015290519081900360640190fd5b611cbe858585856121eb565b506001949350505050565b6040805182815290518391859133917f9b7312a236066d2da679eba7e3a2e86d2d07a973819499846c0efd2fd2506c80919081900360200190a4505050565b600454600090600160a060020a03163314611d6d576040805160e560020a62461bcd02815260206004820152600f60248201527f546f6b656e206d7573742063616c6c0000000000000000000000000000000000604482015290519081900360640190fd5b611cbe8585858561297f565b6001805482908110611d8757fe5b6000918252602090912060039091020180546001820154600290920154600160a060020a0391821693501683565b600080600185815481101515611dc757fe5b906000526020600020906003020191506002600086815260200190815260200160002084815481101515611df757fe5b600091825260209091206009909102016004810154909150600160a060020a0316331480611e2e57508154600160a060020a031633145b1515611e84576040805160e560020a62461bcd02815260206004820152601d60248201527f5265737472696374656420746f206275796572206f722073656c6c6572000000604482015290519081900360640190fd5b600881015460ff16600114611ee3576040805160e560020a62461bcd02815260206004820152601160248201527f73746174757320213d2063726561746564000000000000000000000000000000604482015290519081900360640190fd5b611eed858561235f565b6040805184815290518591879133917fe9ae767ab1c8f3f874a5b2810a1f6323b43283a5b462b52a4de5f8ed53a4fe25919081900360200190a46000858152600260205260409020805485908110611f4157fe5b600091825260208220600990910201818155600181018290556002810182905560038101805473ffffffffffffffffffffffffffffffffffffffff19908116909155600482018054821690556005820180548216905560068201805490911690556007810191909155600801805460ff191690555050505050565b600054600160a060020a03163314611fd357600080fd5b611fdc81612b9f565b50565b600080600185815481101515611ff157fe5b90600052602060002090600302019150600260008681526020019081526020016000208481548110151561202157fe5b906000526020600020906009020190508060070154421115156120a7576004810154600160a060020a031633146120a2576040805160e560020a62461bcd02815260206004820152601760248201527f4f6e6c792062757965722063616e2066696e616c697a65000000000000000000604482015290519081900360640190fd5b612121565b6004810154600160a060020a03163314806120cb57508154600160a060020a031633145b1515612121576040805160e560020a62461bcd02815260206004820152601d60248201527f53656c6c6572206f72206275796572206d7573742066696e616c697a65000000604482015290519081900360640190fd5b600881015460ff1660021461216e576040805160e560020a62461bcd0281526020600482015260126024820152600080516020612c1d833981519152604482015290519081900360640190fd5b612178858561250d565b6004810154600160a060020a0316331415612197576121978585612859565b6040805184815290518591879133917fbfefa76df66ac53c6517b1939b14bfc4d5fdf714b93a71aea2e50977d1b3b8e6919081900360200190a46000858152600260205260409020805485908110611f4157fe5b60006001848154811015156121fc57fe5b600091825260209091206003909102018054909150600160a060020a03868116911614612273576040805160e560020a62461bcd02815260206004820152601060248201527f53656c6c6572206d7573742063616c6c00000000000000000000000000000000604482015290519081900360640190fd5b600082111561231657600480546040805160e060020a6323b872dd028152600160a060020a038981169482019490945230602482015260448101869052905192909116916323b872dd916064808201926020929091908290030181600087803b1580156122df57600080fd5b505af11580156122f3573d6000803e3d6000fd5b505050506040513d602081101561230957600080fd5b5050600181018054830190555b80546040805185815290518692600160a060020a0316917f470503ad37642fff73a57bac35e69733b6b38281a893f39b50c285aad1f040e0919081900360200190a35050505050565b600082815260026020526040812080548390811061237957fe5b600091825260209091206009909102016003810154909150600160a060020a031615156124275760048101548154604051600160a060020a039092169181156108fc0291906000818181858888f193505050501515612422576040805160e560020a62461bcd02815260206004820152601160248201527f45544820726566756e64206661696c6564000000000000000000000000000000604482015290519081900360640190fd5b61196c565b600381015460048083015483546040805160e060020a63a9059cbb028152600160a060020a039384169481019490945260248401919091525192169163a9059cbb916044808201926020929091908290030181600087803b15801561248b57600080fd5b505af115801561249f573d6000803e3d6000fd5b505050506040513d60208110156124b557600080fd5b5051151561196c576040805160e560020a62461bcd02815260206004820152600d60248201527f526566756e64206661696c656400000000000000000000000000000000000000604482015290519081900360640190fd5b600080600060018581548110151561252157fe5b90600052602060002090600302019250600260008681526020019081526020016000208481548110151561255157fe5b60009182526020909120600990910201600281015481546003830154929450039150600160a060020a0316151561268a5760048201546002830154604051600160a060020a039092169181156108fc0291906000818181858888f193505050501515612607576040805160e560020a62461bcd02815260206004820152601160248201527f45544820726566756e64206661696c6564000000000000000000000000000000604482015290519081900360640190fd5b8254604051600160a060020a039091169082156108fc029083906000818181858888f193505050501515612685576040805160e560020a62461bcd02815260206004820152600f60248201527f4554482073656e64206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b612852565b600382015460048084015460028501546040805160e060020a63a9059cbb028152600160a060020a039384169481019490945260248401919091525192169163a9059cbb916044808201926020929091908290030181600087803b1580156126f157600080fd5b505af1158015612705573d6000803e3d6000fd5b505050506040513d602081101561271b57600080fd5b50511515612773576040805160e560020a62461bcd02815260206004820152600d60248201527f526566756e64206661696c656400000000000000000000000000000000000000604482015290519081900360640190fd5b600382015483546040805160e060020a63a9059cbb028152600160a060020a039283166004820152602481018590529051919092169163a9059cbb9160448083019260209291908290030181600087803b1580156127d057600080fd5b505af11580156127e4573d6000803e3d6000fd5b505050506040513d60208110156127fa57600080fd5b50511515612852576040805160e560020a62461bcd02815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b600082815260026020526040812080548390811061287357fe5b600091825260209091206009909102016005810154909150600160a060020a03161561196c5760048054600583015460018401546040805160e060020a63a9059cbb028152600160a060020a039384169581019590955260248501919091525191169163a9059cbb9160448083019260209291908290030181600087803b1580156128fd57600080fd5b505af1158015612911573d6000803e3d6000fd5b505050506040513d602081101561292757600080fd5b5051151561196c576040805160e560020a62461bcd02815260206004820152601a60248201527f436f6d6d697373696f6e207472616e73666572206661696c6564000000000000604482015290519081900360640190fd5b600160a060020a03811615156129df576040805160e560020a62461bcd02815260206004820152601b60248201527f4d7573742073706563696679206465706f7369744d616e616765720000000000604482015290519081900360640190fd5b60408051606081018252600160a060020a038087168252602082018581528482169383019384526001805480820182556000918252935160039094027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805495851673ffffffffffffffffffffffffffffffffffffffff1996871617905591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf783015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf89091018054919092169216919091179055821115612b5057600480546040805160e060020a6323b872dd028152600160a060020a038881169482019490945230602482015260448101869052905192909116916323b872dd916064808201926020929091908290030181600087803b158015612b2357600080fd5b505af1158015612b37573d6000803e3d6000fd5b505050506040513d6020811015612b4d57600080fd5b50505b60015460408051858152905160001990920191600160a060020a038716917fec3d306143145322b45d2788d826e3b7b9ad062f16e1ec59a5eaba214f96ee3c919081900360200190a350505050565b600160a060020a0381161515612bb457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055560073746174757320213d2061636365707465640000000000000000000000000000a165627a7a723058209557373ab30a8c8b4b1f1431613f311f0a8e694d98e3a6a461d3d9209fa705ff0029","contractName":"V00_Marketplace","networks":{"1":{"events":{"0x8e530f3a09c59fdf1b0d5ed714b7a5b94c059256cdc29b8521e9891734c6a2b7":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"MarketplaceData","type":"event"},"0x5e48128fde8c162f70ea9f59d0a58f1d1cc40c2eec4b4c71356ab395650bfbdf":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"AffiliateAdded","type":"event"},"0x3553c89fbe376344fc3e6cfb39cce65e6d961cece468c297dad2a1e31d4fa2b6":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"AffiliateRemoved","type":"event"},"0xec3d306143145322b45d2788d826e3b7b9ad062f16e1ec59a5eaba214f96ee3c":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingCreated","type":"event"},"0x470503ad37642fff73a57bac35e69733b6b38281a893f39b50c285aad1f040e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingUpdated","type":"event"},"0xafa3dc4f271ef3419006f21140d375eba48ef3def56e8bfe6d54d0c72a81a307":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingWithdrawn","type":"event"},"0x9c9827b799328bcbadbd04862686713436136571c54d7ca0388bd952f314f890":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingArbitrated","type":"event"},"0x12dc84d4005dd5b86fd88951106aa76927a62b83b85ba9c912a7268582906aa9":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingData","type":"event"},"0x6ee68cb753f284cf771c1a32c236d7ffcab6011345186a30e57837d761e86837":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferCreated","type":"event"},"0x449224201a35688b74a38ff24770e8b2a326ebf42357bf19a36f5fedbbe552a0":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferAccepted","type":"event"},"0xbfefa76df66ac53c6517b1939b14bfc4d5fdf714b93a71aea2e50977d1b3b8e6":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferFinalized","type":"event"},"0xe9ae767ab1c8f3f874a5b2810a1f6323b43283a5b462b52a4de5f8ed53a4fe25":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferWithdrawn","type":"event"},"0x5f0e66c42b81a43cbd35b11ea0a599d0be1d8e1fdb61d1d4f7a98243ba6cc26b":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferFundsAdded","type":"event"},"0x11c45991938e1dec0b00887cd2368a2195fccb46b08cc56483ac3053ddb609b2":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferDisputed","type":"event"},"0x3e4d55eb2a402ba6f500db5d75f9303dfe863a2e8319054aeddb6a35ec7e3c61":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"},{"indexed":false,"name":"ruling","type":"uint256"}],"name":"OfferRuling","type":"event"},"0x9b7312a236066d2da679eba7e3a2e86d2d07a973819499846c0efd2fd2506c80":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferData","type":"event"},"0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}},"links":{},"address":"0x819bb9964b6ebf52361f1ae42cf4831b921510f9","transactionHash":"0xd08a190b4e84ab55bc6a104122cf932a2932de84d4957d22356b2be65e25e987"},"4":{"events":{"0x8e530f3a09c59fdf1b0d5ed714b7a5b94c059256cdc29b8521e9891734c6a2b7":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"MarketplaceData","type":"event"},"0x5e48128fde8c162f70ea9f59d0a58f1d1cc40c2eec4b4c71356ab395650bfbdf":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"AffiliateAdded","type":"event"},"0x3553c89fbe376344fc3e6cfb39cce65e6d961cece468c297dad2a1e31d4fa2b6":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"AffiliateRemoved","type":"event"},"0xec3d306143145322b45d2788d826e3b7b9ad062f16e1ec59a5eaba214f96ee3c":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingCreated","type":"event"},"0x470503ad37642fff73a57bac35e69733b6b38281a893f39b50c285aad1f040e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingUpdated","type":"event"},"0xafa3dc4f271ef3419006f21140d375eba48ef3def56e8bfe6d54d0c72a81a307":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingWithdrawn","type":"event"},"0x9c9827b799328bcbadbd04862686713436136571c54d7ca0388bd952f314f890":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingArbitrated","type":"event"},"0x12dc84d4005dd5b86fd88951106aa76927a62b83b85ba9c912a7268582906aa9":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"ListingData","type":"event"},"0x6ee68cb753f284cf771c1a32c236d7ffcab6011345186a30e57837d761e86837":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferCreated","type":"event"},"0x449224201a35688b74a38ff24770e8b2a326ebf42357bf19a36f5fedbbe552a0":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferAccepted","type":"event"},"0xbfefa76df66ac53c6517b1939b14bfc4d5fdf714b93a71aea2e50977d1b3b8e6":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferFinalized","type":"event"},"0xe9ae767ab1c8f3f874a5b2810a1f6323b43283a5b462b52a4de5f8ed53a4fe25":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferWithdrawn","type":"event"},"0x5f0e66c42b81a43cbd35b11ea0a599d0be1d8e1fdb61d1d4f7a98243ba6cc26b":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferFundsAdded","type":"event"},"0x11c45991938e1dec0b00887cd2368a2195fccb46b08cc56483ac3053ddb609b2":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferDisputed","type":"event"},"0x3e4d55eb2a402ba6f500db5d75f9303dfe863a2e8319054aeddb6a35ec7e3c61":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"},{"indexed":false,"name":"ruling","type":"uint256"}],"name":"OfferRuling","type":"event"},"0x9b7312a236066d2da679eba7e3a2e86d2d07a973819499846c0efd2fd2506c80":{"anonymous":false,"inputs":[{"indexed":true,"name":"party","type":"address"},{"indexed":true,"name":"listingID","type":"uint256"},{"indexed":true,"name":"offerID","type":"uint256"},{"indexed":false,"name":"ipfsHash","type":"bytes32"}],"name":"OfferData","type":"event"},"0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}},"links":{},"address":"0xe842831533c4bf4b0f71b4521c4320bdb669324e","transactionHash":"0x1722489488e8aac3e481801f4114beeec1ab6a0db4f7e7b89fdf313fca41c352"}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/marketplace/v00/Marketplace.sol","exportedSymbols":{"ERC20":[2176],"V00_Marketplace":[3702]},"id":3703,"nodeType":"SourceUnit","nodes":[{"id":2154,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:12"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"../../../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol","id":2155,"nodeType":"ImportDirective","scope":3703,"sourceUnit":4499,"src":"26:88:12","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":"@title A Marketplace contract for managing listings, offers, payments, escrow and arbitration\n@author Nick Poulden <nick@poulden.com>\n * Listings may be priced in Eth or ERC20.","fullyImplemented":false,"id":2176,"linearizedBaseContracts":[2176],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":null,"id":2164,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"name":"_to","nodeType":"VariableDeclaration","scope":2164,"src":"351:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"351:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2159,"name":"_value","nodeType":"VariableDeclaration","scope":2164,"src":"364:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"350:29:12"},"payable":false,"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"name":"","nodeType":"VariableDeclaration","scope":2164,"src":"398:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2161,"name":"bool","nodeType":"ElementaryTypeName","src":"398:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"397:6:12"},"scope":2176,"src":"333:71:12","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":null,"id":2175,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"name":"_from","nodeType":"VariableDeclaration","scope":2175,"src":"431:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2168,"name":"_to","nodeType":"VariableDeclaration","scope":2175,"src":"446:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2170,"name":"_value","nodeType":"VariableDeclaration","scope":2175,"src":"459:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"430:44:12"},"payable":false,"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"name":"","nodeType":"VariableDeclaration","scope":2175,"src":"493:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2172,"name":"bool","nodeType":"ElementaryTypeName","src":"493:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"492:6:12"},"scope":2176,"src":"409:90:12","stateMutability":"nonpayable","superFunction":null,"visibility":"external"}],"scope":3703,"src":"312:189:12"},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":2177,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":4498,"src":"532:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$4498","typeString":"contract Ownable"}},"id":2178,"nodeType":"InheritanceSpecifier","src":"532:7:12"}],"contractDependencies":[4498],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":3702,"linearizedBaseContracts":[3702,4498],"name":"V00_Marketplace","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":"@notice All events have the same indexed signature offsets for easy filtering","id":2184,"name":"MarketplaceData","nodeType":"EventDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2184,"src":"670:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2182,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2184,"src":"693:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"693:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"669:41:12"},"src":"646:65:12"},{"anonymous":false,"documentation":null,"id":2190,"name":"AffiliateAdded","nodeType":"EventDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2190,"src":"740:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2188,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2190,"src":"763:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"739:41:12"},"src":"716:65:12"},{"anonymous":false,"documentation":null,"id":2196,"name":"AffiliateRemoved","nodeType":"EventDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2196,"src":"810:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"810:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2194,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2196,"src":"833:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"833:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"809:41:12"},"src":"786:65:12"},{"anonymous":false,"documentation":null,"id":2204,"name":"ListingCreated","nodeType":"EventDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2204,"src":"880:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"880:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2200,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2204,"src":"903:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint","nodeType":"ElementaryTypeName","src":"903:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2202,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2204,"src":"927:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"927:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"879:65:12"},"src":"856:89:12"},{"anonymous":false,"documentation":null,"id":2212,"name":"ListingUpdated","nodeType":"EventDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2212,"src":"974:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2208,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2212,"src":"997:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint","nodeType":"ElementaryTypeName","src":"997:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2210,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2212,"src":"1021:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1021:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"973:65:12"},"src":"950:89:12"},{"anonymous":false,"documentation":null,"id":2220,"name":"ListingWithdrawn","nodeType":"EventDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2220,"src":"1068:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2216,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2220,"src":"1091:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint","nodeType":"ElementaryTypeName","src":"1091:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2218,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2220,"src":"1115:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1115:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1067:65:12"},"src":"1044:89:12"},{"anonymous":false,"documentation":null,"id":2228,"name":"ListingArbitrated","nodeType":"EventDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2228,"src":"1162:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2224,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2228,"src":"1185:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint","nodeType":"ElementaryTypeName","src":"1185:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2226,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2228,"src":"1209:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1209:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1161:65:12"},"src":"1138:89:12"},{"anonymous":false,"documentation":null,"id":2236,"name":"ListingData","nodeType":"EventDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2236,"src":"1256:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"1256:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2232,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2236,"src":"1279:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint","nodeType":"ElementaryTypeName","src":"1279:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2234,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2236,"src":"1303:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1303:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1255:65:12"},"src":"1232:89:12"},{"anonymous":false,"documentation":null,"id":2246,"name":"OfferCreated","nodeType":"EventDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2246,"src":"1350:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2240,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2246,"src":"1373:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint","nodeType":"ElementaryTypeName","src":"1373:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2242,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2246,"src":"1397:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint","nodeType":"ElementaryTypeName","src":"1397:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2244,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2246,"src":"1419:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1419:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1349:87:12"},"src":"1326:111:12"},{"anonymous":false,"documentation":null,"id":2256,"name":"OfferAccepted","nodeType":"EventDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2256,"src":"1466:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2250,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2256,"src":"1489:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint","nodeType":"ElementaryTypeName","src":"1489:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2252,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2256,"src":"1513:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint","nodeType":"ElementaryTypeName","src":"1513:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2254,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2256,"src":"1535:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1535:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1465:87:12"},"src":"1442:111:12"},{"anonymous":false,"documentation":null,"id":2266,"name":"OfferFinalized","nodeType":"EventDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2266,"src":"1582:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2260,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2266,"src":"1605:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint","nodeType":"ElementaryTypeName","src":"1605:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2262,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2266,"src":"1629:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint","nodeType":"ElementaryTypeName","src":"1629:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2264,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2266,"src":"1651:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1651:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1581:87:12"},"src":"1558:111:12"},{"anonymous":false,"documentation":null,"id":2276,"name":"OfferWithdrawn","nodeType":"EventDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2276,"src":"1698:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"1698:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2270,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2276,"src":"1721:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint","nodeType":"ElementaryTypeName","src":"1721:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2272,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2276,"src":"1745:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint","nodeType":"ElementaryTypeName","src":"1745:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2274,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2276,"src":"1767:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1767:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1697:87:12"},"src":"1674:111:12"},{"anonymous":false,"documentation":null,"id":2286,"name":"OfferFundsAdded","nodeType":"EventDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2286,"src":"1814:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"1814:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2280,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2286,"src":"1837:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint","nodeType":"ElementaryTypeName","src":"1837:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2282,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2286,"src":"1861:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint","nodeType":"ElementaryTypeName","src":"1861:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2284,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2286,"src":"1883:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1813:87:12"},"src":"1790:111:12"},{"anonymous":false,"documentation":null,"id":2296,"name":"OfferDisputed","nodeType":"EventDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2296,"src":"1930:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"1930:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2290,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2296,"src":"1953:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint","nodeType":"ElementaryTypeName","src":"1953:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2292,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2296,"src":"1977:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint","nodeType":"ElementaryTypeName","src":"1977:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2294,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2296,"src":"1999:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1999:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1929:87:12"},"src":"1906:111:12"},{"anonymous":false,"documentation":null,"id":2308,"name":"OfferRuling","nodeType":"EventDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2308,"src":"2046:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"2046:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2300,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2308,"src":"2069:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint","nodeType":"ElementaryTypeName","src":"2069:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2302,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2308,"src":"2093:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint","nodeType":"ElementaryTypeName","src":"2093:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2304,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2308,"src":"2115:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2115:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2306,"indexed":false,"name":"ruling","nodeType":"VariableDeclaration","scope":2308,"src":"2133:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint","nodeType":"ElementaryTypeName","src":"2133:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2045:100:12"},"src":"2022:124:12"},{"anonymous":false,"documentation":null,"id":2318,"name":"OfferData","nodeType":"EventDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"indexed":true,"name":"party","nodeType":"VariableDeclaration","scope":2318,"src":"2175:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2312,"indexed":true,"name":"listingID","nodeType":"VariableDeclaration","scope":2318,"src":"2198:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint","nodeType":"ElementaryTypeName","src":"2198:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2314,"indexed":true,"name":"offerID","nodeType":"VariableDeclaration","scope":2318,"src":"2222:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint","nodeType":"ElementaryTypeName","src":"2222:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2316,"indexed":false,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":2318,"src":"2244:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2244:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2174:87:12"},"src":"2151:111:12"},{"canonicalName":"V00_Marketplace.Listing","id":2325,"members":[{"constant":false,"id":2320,"name":"seller","nodeType":"VariableDeclaration","scope":2325,"src":"2293:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"2293:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2322,"name":"deposit","nodeType":"VariableDeclaration","scope":2325,"src":"2375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint","nodeType":"ElementaryTypeName","src":"2375:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2324,"name":"depositManager","nodeType":"VariableDeclaration","scope":2325,"src":"2430:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"2430:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"name":"Listing","nodeType":"StructDefinition","scope":3702,"src":"2268:234:12","visibility":"public"},{"canonicalName":"V00_Marketplace.Offer","id":2344,"members":[{"constant":false,"id":2327,"name":"value","nodeType":"VariableDeclaration","scope":2344,"src":"2531:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint","nodeType":"ElementaryTypeName","src":"2531:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2329,"name":"commission","nodeType":"VariableDeclaration","scope":2344,"src":"2603:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint","nodeType":"ElementaryTypeName","src":"2603:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2331,"name":"refund","nodeType":"VariableDeclaration","scope":2344,"src":"2684:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint","nodeType":"ElementaryTypeName","src":"2684:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2333,"name":"currency","nodeType":"VariableDeclaration","scope":2344,"src":"2756:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"},"typeName":{"contractScope":null,"id":2332,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2176,"src":"2756:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":2335,"name":"buyer","nodeType":"VariableDeclaration","scope":2344,"src":"2807:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"2807:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2337,"name":"affiliate","nodeType":"VariableDeclaration","scope":2344,"src":"2888:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2339,"name":"arbitrator","nodeType":"VariableDeclaration","scope":2344,"src":"2950:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2341,"name":"finalizes","nodeType":"VariableDeclaration","scope":2344,"src":"3011:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint","nodeType":"ElementaryTypeName","src":"3011:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2343,"name":"status","nodeType":"VariableDeclaration","scope":2344,"src":"3068:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2342,"name":"uint8","nodeType":"ElementaryTypeName","src":"3068:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"name":"Offer","nodeType":"StructDefinition","scope":3702,"src":"2508:639:12","visibility":"public"},{"constant":false,"id":2347,"name":"listings","nodeType":"VariableDeclaration","scope":3702,"src":"3153:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing[]"},"typeName":{"baseType":{"contractScope":null,"id":2345,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"3153:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"id":2346,"length":null,"nodeType":"ArrayTypeName","src":"3153:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage_ptr","typeString":"struct V00_Marketplace.Listing[]"}},"value":null,"visibility":"public"},{"constant":false,"id":2352,"name":"offers","nodeType":"VariableDeclaration","scope":3702,"src":"3184:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer[])"},"typeName":{"id":2351,"keyType":{"id":2348,"name":"uint","nodeType":"ElementaryTypeName","src":"3192:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3184:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer[])"},"valueType":{"baseType":{"contractScope":null,"id":2349,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"3200:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"id":2350,"length":null,"nodeType":"ArrayTypeName","src":"3200:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_ptr","typeString":"struct V00_Marketplace.Offer[]"}}},"value":null,"visibility":"public"},{"constant":false,"id":2356,"name":"allowedAffiliates","nodeType":"VariableDeclaration","scope":3702,"src":"3251:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2355,"keyType":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"3259:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3251:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2354,"name":"bool","nodeType":"ElementaryTypeName","src":"3270:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"public"},{"constant":false,"id":2358,"name":"tokenAddr","nodeType":"VariableDeclaration","scope":3702,"src":"3307:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"},"typeName":{"contractScope":null,"id":2357,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2176,"src":"3307:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"value":null,"visibility":"public"},{"body":{"id":2378,"nodeType":"Block","src":"3399:168:12","statements":[{"expression":{"argumentTypes":null,"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2363,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"3409:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2364,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"3417:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3417:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3409:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2367,"nodeType":"ExpressionStatement","src":"3409:18:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2369,"name":"_tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3450:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2368,"name":"setTokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3437:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3437:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2371,"nodeType":"ExpressionStatement","src":"3437:24:12"},{"expression":{"argumentTypes":null,"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2372,"name":"allowedAffiliates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3496:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2374,"indexExpression":{"argumentTypes":null,"hexValue":"307830","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3514:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3496:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3521:4:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3496:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"ExpressionStatement","src":"3496:29:12"}]},"documentation":null,"id":2379,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"name":"_tokenAddr","nodeType":"VariableDeclaration","scope":2379,"src":"3372:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"3372:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3371:20:12"},"payable":false,"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"3399:0:12"},"scope":3702,"src":"3360:207:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2387,"nodeType":"Block","src":"3673:39:12","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2384,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"3690:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3690:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2383,"id":2386,"nodeType":"Return","src":"3683:22:12"}]},"documentation":null,"id":2388,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalListings","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[],"src":"3643:2:12"},"payable":false,"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"name":"","nodeType":"VariableDeclaration","scope":2388,"src":"3667:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint","nodeType":"ElementaryTypeName","src":"3667:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3666:6:12"},"scope":3702,"src":"3621:91:12","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":2400,"nodeType":"Block","src":"3828:48:12","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2395,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3845:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2397,"indexExpression":{"argumentTypes":null,"id":2396,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3852:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3845:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3845:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2394,"id":2399,"nodeType":"Return","src":"3838:31:12"}]},"documentation":null,"id":2401,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalOffers","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"name":"listingID","nodeType":"VariableDeclaration","scope":2401,"src":"3785:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint","nodeType":"ElementaryTypeName","src":"3785:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3784:16:12"},"payable":false,"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"name":"","nodeType":"VariableDeclaration","scope":2401,"src":"3822:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint","nodeType":"ElementaryTypeName","src":"3822:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3821:6:12"},"scope":3702,"src":"3764:112:12","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":2418,"nodeType":"Block","src":"4018:81:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2411,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"4043:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4043:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2413,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"4055:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":2414,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"4066:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2415,"name":"_depositManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4076:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2410,"name":"_createListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4028:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,bytes32,uint256,address)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4028:64:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"ExpressionStatement","src":"4028:64:12"}]},"documentation":null,"id":2419,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"createListing","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2419,"src":"3940:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3940:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2405,"name":"_deposit","nodeType":"VariableDeclaration","scope":2419,"src":"3959:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint","nodeType":"ElementaryTypeName","src":"3959:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2407,"name":"_depositManager","nodeType":"VariableDeclaration","scope":2419,"src":"3974:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3939:59:12"},"payable":false,"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"4018:0:12"},"scope":3702,"src":"3917:182:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2451,"nodeType":"Block","src":"4326:169:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"4344:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4344:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2436,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"4366:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4358:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4358:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4344:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"546f6b656e206d7573742063616c6c","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4378:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8d51d2a57dc1583ba188e5884ebbfc08a42da145920c168f3327d797f11d4915","typeString":"literal_string \"Token must call\""},"value":"Token must call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d51d2a57dc1583ba188e5884ebbfc08a42da145920c168f3327d797f11d4915","typeString":"literal_string \"Token must call\""}],"id":2432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"4336:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4336:60:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2441,"nodeType":"ExpressionStatement","src":"4336:60:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2443,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4421:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2444,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"4430:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":2445,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"4441:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2446,"name":"_depositManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"4451:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2442,"name":"_createListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4406:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,bytes32,uint256,address)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4406:61:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2448,"nodeType":"ExpressionStatement","src":"4406:61:12"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4484:4:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2431,"id":2450,"nodeType":"Return","src":"4477:11:12"}]},"documentation":null,"id":2452,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"createListingWithSender","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"name":"_seller","nodeType":"VariableDeclaration","scope":2452,"src":"4187:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2423,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2452,"src":"4212:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2425,"name":"_deposit","nodeType":"VariableDeclaration","scope":2452,"src":"4239:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint","nodeType":"ElementaryTypeName","src":"4239:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2427,"name":"_depositManager","nodeType":"VariableDeclaration","scope":2452,"src":"4262:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4177:114:12"},"payable":false,"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"name":"","nodeType":"VariableDeclaration","scope":2452,"src":"4316:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2429,"name":"bool","nodeType":"ElementaryTypeName","src":"4316:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4315:6:12"},"scope":3702,"src":"4145:350:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2502,"nodeType":"Block","src":"4793:514:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2464,"name":"_depositManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"4901:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4920:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"4901:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d7573742073706563696679206465706f7369744d616e61676572","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:29:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8ce16429220cae901d0fffa224076d2975f07e4d1a37dfb07dba8988c6547651","typeString":"literal_string \"Must specify depositManager\""},"value":"Must specify depositManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ce16429220cae901d0fffa224076d2975f07e4d1a37dfb07dba8988c6547651","typeString":"literal_string \"Must specify depositManager\""}],"id":2463,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"4893:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4893:62:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2469,"nodeType":"ExpressionStatement","src":"4893:62:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2474,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"5010:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2475,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5040:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2476,"name":"_depositManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5078:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":null,"id":2473,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"4980:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$2325_storage_ptr_$","typeString":"type(struct V00_Marketplace.Listing storage pointer)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["seller","deposit","depositManager"],"nodeType":"FunctionCall","src":"4980:124:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_memory","typeString":"struct V00_Marketplace.Listing memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Listing_$2325_memory","typeString":"struct V00_Marketplace.Listing memory"}],"expression":{"argumentTypes":null,"id":2470,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"4966:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4966:13:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_struct$_Listing_$2325_storage_$returns$_t_uint256_$","typeString":"function (struct V00_Marketplace.Listing storage ref) returns (uint256)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4966:139:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"4966:139:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2480,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5120:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5131:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5120:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2492,"nodeType":"IfStatement","src":"5116:115:12","trueBody":{"id":2491,"nodeType":"Block","src":"5134:97:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2486,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"5171:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2487,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"5180:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"}},{"argumentTypes":null,"id":2488,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5186:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2483,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"5148:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2175,"src":"5148:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"nodeType":"ExpressionStatement","src":"5148:47:12"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2494,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"5260:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2495,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"5269:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5269:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5287:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5269:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2499,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"5290:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2493,"name":"ListingCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"5245:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5245:55:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2501,"nodeType":"EmitStatement","src":"5240:60:12"}]},"documentation":null,"id":2503,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_createListing","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"name":"_seller","nodeType":"VariableDeclaration","scope":2503,"src":"4549:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2453,"name":"address","nodeType":"ElementaryTypeName","src":"4549:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2456,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2503,"src":"4574:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4574:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2458,"name":"_deposit","nodeType":"VariableDeclaration","scope":2503,"src":"4651:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint","nodeType":"ElementaryTypeName","src":"4651:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2460,"name":"_depositManager","nodeType":"VariableDeclaration","scope":2503,"src":"4706:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"4706:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4539:233:12"},"payable":false,"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[],"src":"4793:0:12"},"scope":3702,"src":"4516:791:12","stateMutability":"nonpayable","superFunction":null,"visibility":"private"},{"body":{"id":2520,"nodeType":"Block","src":"5468:85:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"5493:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5493:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2515,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5505:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2516,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5516:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":2517,"name":"_additionalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"5527:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2512,"name":"_updateListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"5478:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bytes32,uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5478:68:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"ExpressionStatement","src":"5478:68:12"}]},"documentation":null,"id":2521,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"updateListing","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"name":"listingID","nodeType":"VariableDeclaration","scope":2521,"src":"5380:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint","nodeType":"ElementaryTypeName","src":"5380:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2507,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2521,"src":"5404:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2509,"name":"_additionalDeposit","nodeType":"VariableDeclaration","scope":2521,"src":"5431:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint","nodeType":"ElementaryTypeName","src":"5431:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5370:90:12"},"payable":false,"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"5468:0:12"},"scope":3702,"src":"5348:205:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2553,"nodeType":"Block","src":"5741:173:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"5759:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5759:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2538,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"5781:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5773:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5759:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"546f6b656e206d7573742063616c6c","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5793:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8d51d2a57dc1583ba188e5884ebbfc08a42da145920c168f3327d797f11d4915","typeString":"literal_string \"Token must call\""},"value":"Token must call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d51d2a57dc1583ba188e5884ebbfc08a42da145920c168f3327d797f11d4915","typeString":"literal_string \"Token must call\""}],"id":2534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"5751:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5751:60:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2543,"nodeType":"ExpressionStatement","src":"5751:60:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2545,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5836:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2546,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5845:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2547,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"5856:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":2548,"name":"_additionalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"5867:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2544,"name":"_updateListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"5821:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bytes32,uint256)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5821:65:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2550,"nodeType":"ExpressionStatement","src":"5821:65:12"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5903:4:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2533,"id":2552,"nodeType":"Return","src":"5896:11:12"}]},"documentation":null,"id":2554,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"updateListingWithSender","nodeType":"FunctionDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"name":"_seller","nodeType":"VariableDeclaration","scope":2554,"src":"5601:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"5601:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2525,"name":"listingID","nodeType":"VariableDeclaration","scope":2554,"src":"5626:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint","nodeType":"ElementaryTypeName","src":"5626:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2527,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2554,"src":"5650:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5650:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2529,"name":"_additionalDeposit","nodeType":"VariableDeclaration","scope":2554,"src":"5677:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2528,"name":"uint","nodeType":"ElementaryTypeName","src":"5677:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5591:115:12"},"payable":false,"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"name":"","nodeType":"VariableDeclaration","scope":2554,"src":"5731:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2531,"name":"bool","nodeType":"ElementaryTypeName","src":"5731:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5730:6:12"},"scope":3702,"src":"5559:355:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2605,"nodeType":"Block","src":"6122:365:12","statements":[{"assignments":[2566],"declarations":[{"constant":false,"id":2566,"name":"listing","nodeType":"VariableDeclaration","scope":2606,"src":"6132:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":2565,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"6132:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":2570,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2567,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"6158:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2569,"indexExpression":{"argumentTypes":null,"id":2568,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"6167:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6158:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6132:45:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2572,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6195:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"6195:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":2574,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"6213:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6195:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656c6c6572206d7573742063616c6c","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6222:18:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a08cec57774c62dd65f658897fc5f1bc20bd061618f0f8b6b4b1764d9399a090","typeString":"literal_string \"Seller must call\""},"value":"Seller must call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a08cec57774c62dd65f658897fc5f1bc20bd061618f0f8b6b4b1764d9399a090","typeString":"literal_string \"Seller must call\""}],"id":2571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"6187:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6187:54:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"ExpressionStatement","src":"6187:54:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2579,"name":"_additionalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6256:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6277:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6256:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2597,"nodeType":"IfStatement","src":"6252:161:12","trueBody":{"id":2596,"nodeType":"Block","src":"6280:133:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2585,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"6317:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2586,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"6326:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"}},{"argumentTypes":null,"id":2587,"name":"_additionalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6332:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2582,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"6294:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2175,"src":"6294:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6294:57:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2589,"nodeType":"ExpressionStatement","src":"6294:57:12"},{"expression":{"argumentTypes":null,"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2590,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6365:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"6365:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"id":2593,"name":"_additionalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6384:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6365:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"6365:37:12"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2599,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6443:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"6443:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2601,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"6459:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2602,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"6470:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2598,"name":"ListingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"6428:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6428:52:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2604,"nodeType":"EmitStatement","src":"6423:57:12"}]},"documentation":null,"id":2606,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_updateListing","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"name":"_seller","nodeType":"VariableDeclaration","scope":2606,"src":"5953:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"5953:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2558,"name":"listingID","nodeType":"VariableDeclaration","scope":2606,"src":"5978:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint","nodeType":"ElementaryTypeName","src":"5978:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2560,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2606,"src":"6002:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6002:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2562,"name":"_additionalDeposit","nodeType":"VariableDeclaration","scope":2606,"src":"6055:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint","nodeType":"ElementaryTypeName","src":"6055:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5943:170:12"},"payable":false,"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[],"src":"6122:0:12"},"scope":3702,"src":"5920:567:12","stateMutability":"nonpayable","superFunction":null,"visibility":"private"},{"body":{"id":2651,"nodeType":"Block","src":"6672:331:12","statements":[{"assignments":[2616],"declarations":[{"constant":false,"id":2616,"name":"listing","nodeType":"VariableDeclaration","scope":2652,"src":"6682:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":2615,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"6682:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":2620,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2617,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"6708:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2619,"indexExpression":{"argumentTypes":null,"id":2618,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"6717:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6708:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6682:45:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"6745:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6745:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2624,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6759:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"depositManager","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"6759:22:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6745:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d757374206265206465706f7369744d616e61676572","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6783:24:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_cdd1fc333a322109b0058cd986b30664a7dc801d3123ad4bf571ac057eac52b1","typeString":"literal_string \"Must be depositManager\""},"value":"Must be depositManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cdd1fc333a322109b0058cd986b30664a7dc801d3123ad4bf571ac057eac52b1","typeString":"literal_string \"Must be depositManager\""}],"id":2621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"6737:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6737:71:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"6737:71:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2631,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6826:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6837:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"6826:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f20746172676574","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6842:11:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_214485f1433bae623846248757395600b92803947c2fa8812fdf46c62b67caa3","typeString":"literal_string \"No target\""},"value":"No target"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_214485f1433bae623846248757395600b92803947c2fa8812fdf46c62b67caa3","typeString":"literal_string \"No target\""}],"id":2630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"6818:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6818:36:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2636,"nodeType":"ExpressionStatement","src":"6818:36:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2640,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6883:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2641,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6892:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"6892:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2637,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"6864:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"6864:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6864:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2644,"nodeType":"ExpressionStatement","src":"6864:44:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2646,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6966:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2647,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"6975:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2648,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"6986:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2645,"name":"ListingWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"6949:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6949:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2650,"nodeType":"EmitStatement","src":"6944:52:12"}]},"documentation":null,"id":2652,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawListing","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"name":"listingID","nodeType":"VariableDeclaration","scope":2652,"src":"6613:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint","nodeType":"ElementaryTypeName","src":"6613:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2610,"name":"_target","nodeType":"VariableDeclaration","scope":2652,"src":"6629:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"6629:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2612,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2652,"src":"6646:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6646:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"6612:52:12"},"payable":false,"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"6672:0:12"},"scope":3702,"src":"6588:415:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2766,"nodeType":"Block","src":"7612:1223:12","statements":[{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"name":"affiliateWhitelistDisabled","nodeType":"VariableDeclaration","scope":2767,"src":"7622:31:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2671,"name":"bool","nodeType":"ElementaryTypeName","src":"7622:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":2678,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2673,"name":"allowedAffiliates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"7656:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2677,"indexExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2675,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"7682:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7674:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7674:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7656:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7622:66:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2680,"name":"affiliateWhitelistDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"7719:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2681,"name":"allowedAffiliates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"7749:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2683,"indexExpression":{"argumentTypes":null,"id":2682,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7767:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7749:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7719:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416666696c69617465206e6f7420616c6c6f776564","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7792:23:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f745befd8f6f233ff12512085ca6145c7bd35362339d884f8481ddc0f968400a","typeString":"literal_string \"Affiliate not allowed\""},"value":"Affiliate not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f745befd8f6f233ff12512085ca6145c7bd35362339d884f8481ddc0f968400a","typeString":"literal_string \"Affiliate not allowed\""}],"id":2679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"7698:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7698:127:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"ExpressionStatement","src":"7698:127:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2688,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7840:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7854:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"7840:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2699,"nodeType":"IfStatement","src":"7836:184:12","trueBody":{"id":2698,"nodeType":"Block","src":"7859:161:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2692,"name":"_commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"7959:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7959:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"636f6d6d697373696f6e20726571756972657320616666696c69617465","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7977:31:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_50e7ff04fd32d67462889d9dc3376a30e60ef39fce9c5833a1b52855e2fd19fe","typeString":"literal_string \"commission requires affiliate\""},"value":"commission requires affiliate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50e7ff04fd32d67462889d9dc3376a30e60ef39fce9c5833a1b52855e2fd19fe","typeString":"literal_string \"commission requires affiliate\""}],"id":2691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"7951:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7951:58:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2697,"nodeType":"ExpressionStatement","src":"7951:58:12"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8081:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"8103:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8103:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2708,"name":"_finalizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"8138:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2709,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"8173:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2710,"name":"_commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"8209:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2711,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8244:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},{"argumentTypes":null,"id":2712,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"8274:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2713,"name":"_arbitrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8306:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8339:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":null,"id":2704,"name":"Offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"8053:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Offer_$2344_storage_ptr_$","typeString":"type(struct V00_Marketplace.Offer storage pointer)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["status","buyer","finalizes","affiliate","commission","currency","value","arbitrator","refund"],"nodeType":"FunctionCall","src":"8053:298:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_memory","typeString":"struct V00_Marketplace.Offer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Offer_$2344_memory","typeString":"struct V00_Marketplace.Offer memory"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2700,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8030:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2702,"indexExpression":{"argumentTypes":null,"id":2701,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8037:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8030:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8030:22:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_struct$_Offer_$2344_storage_$returns$_t_uint256_$","typeString":"function (struct V00_Marketplace.Offer storage ref) returns (uint256)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8030:322:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"8030:322:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2719,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8375:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8367:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8367:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8389:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"8367:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2751,"nodeType":"Block","src":"8507:232:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2733,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"8552:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8552:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8565:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8552:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45544820776f756c64206265206c6f7374","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8568:19:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8c7edc3eead4b741080dab10e8fc2fb9d556b9fa7891309fcdfa4f97043f3860","typeString":"literal_string \"ETH would be lost\""},"value":"ETH would be lost"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c7edc3eead4b741080dab10e8fc2fb9d556b9fa7891309fcdfa4f97043f3860","typeString":"literal_string \"ETH would be lost\""}],"id":2732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"8544:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8544:44:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"ExpressionStatement","src":"8544:44:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"8650:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8650:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2745,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"8662:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"}},{"argumentTypes":null,"id":2746,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"8668:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2741,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8627:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2175,"src":"8627:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8627:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"7472616e7366657246726f6d206661696c6564","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8693:21:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3","typeString":"literal_string \"transferFrom failed\""},"value":"transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3","typeString":"literal_string \"transferFrom failed\""}],"id":2740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"8602:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8602:126:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"ExpressionStatement","src":"8602:126:12"}]},"id":2752,"nodeType":"IfStatement","src":"8363:376:12","trueBody":{"id":2731,"nodeType":"Block","src":"8394:107:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"8437:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8437:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":2726,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"8450:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8437:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4554482076616c756520646f65736e2774206d61746368206f66666572","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8458:31:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_86727e703ffef5e9dac4aa5ef2ba37b0d1d667897fb2b97c6c9f29c4882e5e53","typeString":"literal_string \"ETH value doesn't match offer\""},"value":"ETH value doesn't match offer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86727e703ffef5e9dac4aa5ef2ba37b0d1d667897fb2b97c6c9f29c4882e5e53","typeString":"literal_string \"ETH value doesn't match offer\""}],"id":2723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"8429:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8429:61:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2730,"nodeType":"ExpressionStatement","src":"8429:61:12"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2754,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"8767:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8767:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2756,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8779:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2757,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8790:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2759,"indexExpression":{"argumentTypes":null,"id":2758,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8797:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8790:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8790:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8815:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8790:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2763,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"8818:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2753,"name":"OfferCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"8754:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8754:74:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"EmitStatement","src":"8749:79:12"}]},"documentation":null,"id":2767,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"makeOffer","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"name":"listingID","nodeType":"VariableDeclaration","scope":2767,"src":"7068:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint","nodeType":"ElementaryTypeName","src":"7068:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2656,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2767,"src":"7092:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7092:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2658,"name":"_finalizes","nodeType":"VariableDeclaration","scope":2767,"src":"7156:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint","nodeType":"ElementaryTypeName","src":"7156:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2660,"name":"_affiliate","nodeType":"VariableDeclaration","scope":2767,"src":"7230:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"7230:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2662,"name":"_commission","nodeType":"VariableDeclaration","scope":2767,"src":"7305:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7305:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2664,"name":"_value","nodeType":"VariableDeclaration","scope":2767,"src":"7401:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint","nodeType":"ElementaryTypeName","src":"7401:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2666,"name":"_currency","nodeType":"VariableDeclaration","scope":2767,"src":"7462:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"},"typeName":{"contractScope":null,"id":2665,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2176,"src":"7462:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":2668,"name":"_arbitrator","nodeType":"VariableDeclaration","scope":2767,"src":"7529:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"7529:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7058:518:12"},"payable":true,"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[],"src":"7612:0:12"},"scope":3702,"src":"7040:1795:12","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":2805,"nodeType":"Block","src":"9183:180:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2789,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"9207:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2790,"name":"_withdrawOfferID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9218:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2791,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9236:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2788,"name":"withdrawOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"9193:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9193:53:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2793,"nodeType":"ExpressionStatement","src":"9193:53:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2795,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"9266:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2796,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9277:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":2797,"name":"_finalizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9288:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2798,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"9300:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2799,"name":"_commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"9312:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2800,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"9325:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2801,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"9333:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},{"argumentTypes":null,"id":2802,"name":"_arbitrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"9344:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2794,"name":"makeOffer","nodeType":"Identifier","overloadedDeclarations":[2767,2806],"referencedDeclaration":2767,"src":"9256:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_contract$_ERC20_$2176_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,uint256,address,uint256,uint256,contract ERC20,address)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9256:100:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"9256:100:12"}]},"documentation":null,"id":2806,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"makeOffer","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"name":"listingID","nodeType":"VariableDeclaration","scope":2806,"src":"8912:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint","nodeType":"ElementaryTypeName","src":"8912:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2771,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2806,"src":"8936:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8936:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2773,"name":"_finalizes","nodeType":"VariableDeclaration","scope":2806,"src":"8963:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint","nodeType":"ElementaryTypeName","src":"8963:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2775,"name":"_affiliate","nodeType":"VariableDeclaration","scope":2806,"src":"8988:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"8988:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2777,"name":"_commission","nodeType":"VariableDeclaration","scope":2806,"src":"9016:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"9016:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2779,"name":"_value","nodeType":"VariableDeclaration","scope":2806,"src":"9045:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint","nodeType":"ElementaryTypeName","src":"9045:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2781,"name":"_currency","nodeType":"VariableDeclaration","scope":2806,"src":"9066:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"},"typeName":{"contractScope":null,"id":2780,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2176,"src":"9066:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":2783,"name":"_arbitrator","nodeType":"VariableDeclaration","scope":2806,"src":"9091:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2782,"name":"address","nodeType":"ElementaryTypeName","src":"9091:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2785,"name":"_withdrawOfferID","nodeType":"VariableDeclaration","scope":2806,"src":"9120:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint","nodeType":"ElementaryTypeName","src":"9120:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8902:245:12"},"payable":true,"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[],"src":"9183:0:12"},"scope":3702,"src":"8884:479:12","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":2891,"nodeType":"Block","src":"9479:727:12","statements":[{"assignments":[2816],"declarations":[{"constant":false,"id":2816,"name":"listing","nodeType":"VariableDeclaration","scope":2892,"src":"9489:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":2815,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"9489:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":2820,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2817,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"9515:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2819,"indexExpression":{"argumentTypes":null,"id":2818,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9524:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9515:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9489:45:12"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"name":"offer","nodeType":"VariableDeclaration","scope":2892,"src":"9544:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":2821,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"9544:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":2828,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2823,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"9566:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2825,"indexExpression":{"argumentTypes":null,"id":2824,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9573:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9566:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2827,"indexExpression":{"argumentTypes":null,"id":2826,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9584:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9566:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9544:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"9610:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9610:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2832,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"9624:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"9624:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9610:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656c6c6572206d75737420616363657074","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9640:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b5fada7b23c284bc3b284066ac6a5222b7a2ea9d23a758bc3b2ad33bdb8ad8e8","typeString":"literal_string \"Seller must accept\""},"value":"Seller must accept"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5fada7b23c284bc3b284066ac6a5222b7a2ea9d23a758bc3b2ad33bdb8ad8e8","typeString":"literal_string \"Seller must accept\""}],"id":2829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"9602:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9602:59:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"ExpressionStatement","src":"9602:59:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2839,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9679:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"9679:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9695:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9679:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d2063726561746564","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9698:19:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00ac012b9f14b02635da9dcdc100d497cc0b041e90df447ccd47941349e0f69e","typeString":"literal_string \"status != created\""},"value":"status != created"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00ac012b9f14b02635da9dcdc100d497cc0b041e90df447ccd47941349e0f69e","typeString":"literal_string \"status != created\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"9671:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2845,"nodeType":"ExpressionStatement","src":"9671:47:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2847,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"9749:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"9749:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2849,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9768:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"commission","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"9768:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9749:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6465706f736974206d75737420636f76657220636f6d6d697373696f6e","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9798:31:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_390e50a47cd11ea672e1cc1a66dc7b02b8123a6a98fd579655e7daf261832fd7","typeString":"literal_string \"deposit must cover commission\""},"value":"deposit must cover commission"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_390e50a47cd11ea672e1cc1a66dc7b02b8123a6a98fd579655e7daf261832fd7","typeString":"literal_string \"deposit must cover commission\""}],"id":2846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"9728:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9728:111:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2854,"nodeType":"ExpressionStatement","src":"9728:111:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2855,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9853:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"finalizes","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"9853:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"31303030303030303030","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9871:10:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000000000"},"src":"9853:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2869,"nodeType":"IfStatement","src":"9849:130:12","trueBody":{"id":2868,"nodeType":"Block","src":"9883:96:12","statements":[{"expression":{"argumentTypes":null,"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2859,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9929:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"finalizes","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"9929:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2862,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"9947:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2863,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9953:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"finalizes","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"9953:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9929:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"9929:39:12"}]}},{"expression":{"argumentTypes":null,"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2870,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"9988:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"9988:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2873,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"10007:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"commission","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"10007:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9988:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"9988:35:12"},{"expression":{"argumentTypes":null,"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2877,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"10085:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"10085:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"32","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10100:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10085:16:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2882,"nodeType":"ExpressionStatement","src":"10085:16:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"10157:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10157:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2886,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"10169:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2887,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2888,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"10189:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2883,"name":"OfferAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"10143:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10143:56:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2890,"nodeType":"EmitStatement","src":"10138:61:12"}]},"documentation":null,"id":2892,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"acceptOffer","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"name":"listingID","nodeType":"VariableDeclaration","scope":2892,"src":"9423:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint","nodeType":"ElementaryTypeName","src":"9423:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2810,"name":"offerID","nodeType":"VariableDeclaration","scope":2892,"src":"9439:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint","nodeType":"ElementaryTypeName","src":"9439:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2812,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2892,"src":"9453:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9453:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"9422:49:12"},"payable":false,"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[],"src":"9479:0:12"},"scope":3702,"src":"9402:804:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2958,"nodeType":"Block","src":"10367:476:12","statements":[{"assignments":[2902],"declarations":[{"constant":false,"id":2902,"name":"listing","nodeType":"VariableDeclaration","scope":2959,"src":"10377:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":2901,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"10377:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":2906,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2903,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"10403:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":2905,"indexExpression":{"argumentTypes":null,"id":2904,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10412:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10403:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10377:45:12"},{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"name":"offer","nodeType":"VariableDeclaration","scope":2959,"src":"10432:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":2907,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"10432:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":2914,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2909,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10454:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2911,"indexExpression":{"argumentTypes":null,"id":2910,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10461:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10454:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2913,"indexExpression":{"argumentTypes":null,"id":2912,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10472:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10454:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10432:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2916,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"10511:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10511:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2918,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10525:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"10525:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10511:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"10540:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10540:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2923,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"10554:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":2924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"10554:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10540:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10511:57:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5265737472696374656420746f206275796572206f722073656c6c6572","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10582:31:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2d9536b1dd47f8ec295b953827d083e8f346e606df9c0e2e009fdf861985d4b9","typeString":"literal_string \"Restricted to buyer or seller\""},"value":"Restricted to buyer or seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2d9536b1dd47f8ec295b953827d083e8f346e606df9c0e2e009fdf861985d4b9","typeString":"literal_string \"Restricted to buyer or seller\""}],"id":2915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"10490:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10490:133:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"10490:133:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2931,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10641:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"10641:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10657:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10641:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d2063726561746564","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10660:19:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00ac012b9f14b02635da9dcdc100d497cc0b041e90df447ccd47941349e0f69e","typeString":"literal_string \"status != created\""},"value":"status != created"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00ac012b9f14b02635da9dcdc100d497cc0b041e90df447ccd47941349e0f69e","typeString":"literal_string \"status != created\""}],"id":2930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"10633:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10633:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2937,"nodeType":"ExpressionStatement","src":"10633:47:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2939,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10702:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2940,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2938,"name":"refundBuyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"10690:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10690:31:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"10690:31:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"10751:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10751:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2946,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10763:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2947,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2948,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"10783:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2943,"name":"OfferWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"10736:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10736:57:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2950,"nodeType":"EmitStatement","src":"10731:62:12"},{"expression":{"argumentTypes":null,"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10803:33:12","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2951,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10810:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2953,"indexExpression":{"argumentTypes":null,"id":2952,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10817:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10810:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2955,"indexExpression":{"argumentTypes":null,"id":2954,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10828:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10810:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2957,"nodeType":"ExpressionStatement","src":"10803:33:12"}]},"documentation":null,"id":2959,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawOffer","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"name":"listingID","nodeType":"VariableDeclaration","scope":2959,"src":"10311:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint","nodeType":"ElementaryTypeName","src":"10311:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2896,"name":"offerID","nodeType":"VariableDeclaration","scope":2959,"src":"10327:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint","nodeType":"ElementaryTypeName","src":"10327:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2898,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":2959,"src":"10341:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10341:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"10310:49:12"},"payable":false,"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[],"src":"10367:0:12"},"scope":3702,"src":"10288:555:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3046,"nodeType":"Block","src":"11001:726:12","statements":[{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"name":"offer","nodeType":"VariableDeclaration","scope":3047,"src":"11011:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":2970,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"11011:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":2977,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2972,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"11033:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":2974,"indexExpression":{"argumentTypes":null,"id":2973,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"11040:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11033:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":2976,"indexExpression":{"argumentTypes":null,"id":2975,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"11051:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11033:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11011:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11077:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11077:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2981,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11091:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"11091:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11077:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4275796572206d7573742063616c6c","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11104:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_20052e81445ad56f424f13c05e8956b93f2a0ad9a9387aef8084aefde58e1ec3","typeString":"literal_string \"Buyer must call\""},"value":"Buyer must call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20052e81445ad56f424f13c05e8956b93f2a0ad9a9387aef8084aefde58e1ec3","typeString":"literal_string \"Buyer must call\""}],"id":2978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"11069:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:53:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2986,"nodeType":"ExpressionStatement","src":"11069:53:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2988,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11140:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"11140:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11140:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d206163636570746564","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11159:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""},"value":"status != accepted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""}],"id":2987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"11132:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11132:48:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2994,"nodeType":"ExpressionStatement","src":"11132:48:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2996,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11202:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":2997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"11202:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11194:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11194:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11221:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"11194:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3030,"nodeType":"Block","src":"11377:240:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3011,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11422:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11422:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11435:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11422:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"455448206d757374206e6f742062652073656e74","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11438:22:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e66ce2c363c107e7556d44d54c964828a55f8442b45ebea3f50ff245d75f72b9","typeString":"literal_string \"ETH must not be sent\""},"value":"ETH must not be sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e66ce2c363c107e7556d44d54c964828a55f8442b45ebea3f50ff245d75f72b9","typeString":"literal_string \"ETH must not be sent\""}],"id":3010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"11414:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11414:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3017,"nodeType":"ExpressionStatement","src":"11414:47:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11528:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11528:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"11540:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"}},{"argumentTypes":null,"id":3025,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"11546:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_V00_Marketplace_$3702","typeString":"contract V00_Marketplace"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3019,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11500:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"11500:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2175,"src":"11500:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11500:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"7472616e7366657246726f6d206661696c6564","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11571:21:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3","typeString":"literal_string \"transferFrom failed\""},"value":"transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3","typeString":"literal_string \"transferFrom failed\""}],"id":3018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"11475:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11475:131:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"ExpressionStatement","src":"11475:131:12"}]},"id":3031,"nodeType":"IfStatement","src":"11190:427:12","trueBody":{"id":3009,"nodeType":"Block","src":"11226:145:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11286:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11286:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":3004,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"11299:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11286:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73656e7420213d206f6666657265642076616c7565","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11323:23:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e32eb14551190d5387b4ed692c7bc4137d98ccba159e9c9c1f84d71d215a64a7","typeString":"literal_string \"sent != offered value\""},"value":"sent != offered value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e32eb14551190d5387b4ed692c7bc4137d98ccba159e9c9c1f84d71d215a64a7","typeString":"literal_string \"sent != offered value\""}],"id":3001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"11261:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11261:99:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"ExpressionStatement","src":"11261:99:12"}]}},{"expression":{"argumentTypes":null,"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3032,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11626:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"11626:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"id":3035,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"11641:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11626:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ExpressionStatement","src":"11626:21:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3039,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11678:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11678:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3041,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"11690:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3042,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"11701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3043,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"11710:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3038,"name":"OfferFundsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"11662:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11662:58:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3045,"nodeType":"EmitStatement","src":"11657:63:12"}]},"documentation":null,"id":3047,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addFunds","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"name":"listingID","nodeType":"VariableDeclaration","scope":3047,"src":"10924:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint","nodeType":"ElementaryTypeName","src":"10924:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2963,"name":"offerID","nodeType":"VariableDeclaration","scope":3047,"src":"10940:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint","nodeType":"ElementaryTypeName","src":"10940:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2965,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":3047,"src":"10954:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10954:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2967,"name":"_value","nodeType":"VariableDeclaration","scope":3047,"src":"10973:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint","nodeType":"ElementaryTypeName","src":"10973:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10923:62:12"},"payable":true,"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[],"src":"11001:0:12"},"scope":3702,"src":"10906:821:12","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":3141,"nodeType":"Block","src":"11873:966:12","statements":[{"assignments":[3057],"declarations":[{"constant":false,"id":3057,"name":"listing","nodeType":"VariableDeclaration","scope":3142,"src":"11883:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":3056,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"11883:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":3061,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3058,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11909:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":3060,"indexExpression":{"argumentTypes":null,"id":3059,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"11918:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11909:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11883:45:12"},{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"name":"offer","nodeType":"VariableDeclaration","scope":3142,"src":"11938:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3062,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"11938:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3069,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3064,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"11960:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3066,"indexExpression":{"argumentTypes":null,"id":3065,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"11967:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11960:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3068,"indexExpression":{"argumentTypes":null,"id":3067,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11978:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11960:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11938:48:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3070,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"12000:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3071,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12007:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"finalizes","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"12007:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12000:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3099,"nodeType":"Block","src":"12216:247:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"12332:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12332:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3087,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12346:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"12346:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12332:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3090,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"12361:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12361:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3092,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12375:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"12375:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12361:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12332:57:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656c6c6572206f72206275796572206d7573742066696e616c697a65","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12407:31:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4f806320e1dcaad8f99304d0726023fabd3499b06df5838f057aef14b1970210","typeString":"literal_string \"Seller or buyer must finalize\""},"value":"Seller or buyer must finalize"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f806320e1dcaad8f99304d0726023fabd3499b06df5838f057aef14b1970210","typeString":"literal_string \"Seller or buyer must finalize\""}],"id":3084,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"12307:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12307:145:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"12307:145:12"}]},"id":3100,"nodeType":"IfStatement","src":"11996:467:12","trueBody":{"id":3083,"nodeType":"Block","src":"12024:186:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"12117:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12117:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3077,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12131:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"12131:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12117:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c792062757965722063616e2066696e616c697a65","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12160:25:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_da7d9c4a1b08a0ecca72754a053b39f616c7f957004ea88074bbf81ba8b9375e","typeString":"literal_string \"Only buyer can finalize\""},"value":"Only buyer can finalize"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da7d9c4a1b08a0ecca72754a053b39f616c7f957004ea88074bbf81ba8b9375e","typeString":"literal_string \"Only buyer can finalize\""}],"id":3074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"12092:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12092:107:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3082,"nodeType":"ExpressionStatement","src":"12092:107:12"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3102,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12480:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"12480:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12496:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12480:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d206163636570746564","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12499:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""},"value":"status != accepted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""}],"id":3101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"12472:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12472:48:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3108,"nodeType":"ExpressionStatement","src":"12472:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3110,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12540:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3111,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"12551:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"paySeller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"12530:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12530:29:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3113,"nodeType":"ExpressionStatement","src":"12530:29:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"12587:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12587:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3116,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"12601:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"12601:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12587:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3125,"nodeType":"IfStatement","src":"12583:135:12","trueBody":{"id":3124,"nodeType":"Block","src":"12614:104:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3120,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12688:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3121,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"12699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3119,"name":"payCommission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"12674:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12674:33:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3123,"nodeType":"ExpressionStatement","src":"12674:33:12"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"12747:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12747:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3129,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12759:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3130,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"12770:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3131,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"12779:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3126,"name":"OfferFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"12732:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12732:57:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3133,"nodeType":"EmitStatement","src":"12727:62:12"},{"expression":{"argumentTypes":null,"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12799:33:12","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3134,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"12806:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3136,"indexExpression":{"argumentTypes":null,"id":3135,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"12813:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12806:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3138,"indexExpression":{"argumentTypes":null,"id":3137,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"12824:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12806:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3140,"nodeType":"ExpressionStatement","src":"12799:33:12"}]},"documentation":null,"id":3142,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"finalize","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"name":"listingID","nodeType":"VariableDeclaration","scope":3142,"src":"11817:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint","nodeType":"ElementaryTypeName","src":"11817:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3051,"name":"offerID","nodeType":"VariableDeclaration","scope":3142,"src":"11833:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint","nodeType":"ElementaryTypeName","src":"11833:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3053,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":3142,"src":"11847:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11847:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"11816:49:12"},"payable":false,"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[],"src":"11873:0:12"},"scope":3702,"src":"11799:1040:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3210,"nodeType":"Block","src":"12997:502:12","statements":[{"assignments":[3152],"declarations":[{"constant":false,"id":3152,"name":"listing","nodeType":"VariableDeclaration","scope":3211,"src":"13007:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":3151,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"13007:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":3156,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3153,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"13033:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":3155,"indexExpression":{"argumentTypes":null,"id":3154,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"13042:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13033:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13007:45:12"},{"assignments":[3158],"declarations":[{"constant":false,"id":3158,"name":"offer","nodeType":"VariableDeclaration","scope":3211,"src":"13062:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3157,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"13062:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3164,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3159,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"13084:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3161,"indexExpression":{"argumentTypes":null,"id":3160,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"13091:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13084:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3163,"indexExpression":{"argumentTypes":null,"id":3162,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"13102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13084:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13062:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13141:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13141:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3168,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"13155:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"13155:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13141:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13170:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13170:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3173,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"13184:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"13184:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13170:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13141:57:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d7573742062652073656c6c6572206f72206275796572","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13212:25:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1c0bf244fb441c0cd795b33bd8d61533a67f1608baefa6d6f50ba3368461bf23","typeString":"literal_string \"Must be seller or buyer\""},"value":"Must be seller or buyer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c0bf244fb441c0cd795b33bd8d61533a67f1608baefa6d6f50ba3368461bf23","typeString":"literal_string \"Must be seller or buyer\""}],"id":3165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"13120:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13120:127:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"ExpressionStatement","src":"13120:127:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3181,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"13265:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"13265:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13281:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13265:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d206163636570746564","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13284:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""},"value":"status != accepted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""}],"id":3180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"13257:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13257:48:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3187,"nodeType":"ExpressionStatement","src":"13257:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3189,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"13323:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3190,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"13330:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"finalizes","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"13330:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13323:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416c72656164792066696e616c697a6564","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13347:19:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""},"value":"Already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""}],"id":3188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"13315:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13315:52:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3195,"nodeType":"ExpressionStatement","src":"13315:52:12"},{"expression":{"argumentTypes":null,"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3196,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"13377:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"13377:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"33","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"13377:16:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3201,"nodeType":"ExpressionStatement","src":"13377:16:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13450:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13450:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3205,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"13462:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3206,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"13473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3207,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13482:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3202,"name":"OfferDisputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"13436:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13436:56:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3209,"nodeType":"EmitStatement","src":"13431:61:12"}]},"documentation":null,"id":3211,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"dispute","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"name":"listingID","nodeType":"VariableDeclaration","scope":3211,"src":"12941:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint","nodeType":"ElementaryTypeName","src":"12941:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3146,"name":"offerID","nodeType":"VariableDeclaration","scope":3211,"src":"12957:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint","nodeType":"ElementaryTypeName","src":"12957:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3148,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":3211,"src":"12971:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12971:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"12940:49:12"},"payable":false,"returnParameters":{"id":3150,"nodeType":"ParameterList","parameters":[],"src":"12997:0:12"},"scope":3702,"src":"12924:575:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3318,"nodeType":"Block","src":"13747:760:12","statements":[{"assignments":[3225],"declarations":[{"constant":false,"id":3225,"name":"offer","nodeType":"VariableDeclaration","scope":3319,"src":"13757:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3224,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"13757:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3231,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3226,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"13779:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3228,"indexExpression":{"argumentTypes":null,"id":3227,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13786:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13779:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3230,"indexExpression":{"argumentTypes":null,"id":3229,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"13797:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13779:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13757:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13823:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13823:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3235,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"13837:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrator","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"13837:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13823:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d7573742062652061726269747261746f72","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13855:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_cb262c66d4aa78e081345c72c6e575d8f0743be9e7b511923627348f4a2f3f76","typeString":"literal_string \"Must be arbitrator\""},"value":"Must be arbitrator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb262c66d4aa78e081345c72c6e575d8f0743be9e7b511923627348f4a2f3f76","typeString":"literal_string \"Must be arbitrator\""}],"id":3232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"13815:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13815:61:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"ExpressionStatement","src":"13815:61:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3242,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"13894:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"13894:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"33","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13910:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"13894:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d206469737075746564","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13913:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_28aafa7e394f1b3cf847d96bc4fc1b1219b61eeaa8ec2ced964988e02fbf5bd4","typeString":"literal_string \"status != disputed\""},"value":"status != disputed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_28aafa7e394f1b3cf847d96bc4fc1b1219b61eeaa8ec2ced964988e02fbf5bd4","typeString":"literal_string \"status != disputed\""}],"id":3241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"13886:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13886:48:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3248,"nodeType":"ExpressionStatement","src":"13886:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3250,"name":"_refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"13952:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3251,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"13963:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"13963:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13952:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"726566756e6420746f6f2068696768","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13976:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_88c5a30ec5a8ea06a3ca728d6795a8b069223b478a28f045f2a28a81b85eaaba","typeString":"literal_string \"refund too high\""},"value":"refund too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88c5a30ec5a8ea06a3ca728d6795a8b069223b478a28f045f2a28a81b85eaaba","typeString":"literal_string \"refund too high\""}],"id":3249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"13944:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13944:50:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3256,"nodeType":"ExpressionStatement","src":"13944:50:12"},{"expression":{"argumentTypes":null,"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3257,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"14004:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"refund","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"14004:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":3260,"name":"_refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14019:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14004:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3262,"nodeType":"ExpressionStatement","src":"14004:22:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3263,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14040:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"31","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14050:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14040:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"31","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14055:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14040:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3279,"nodeType":"Block","src":"14121:54:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3275,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14145:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3276,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"14156:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3274,"name":"paySeller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"14135:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14135:29:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3278,"nodeType":"ExpressionStatement","src":"14135:29:12"}]},"id":3280,"nodeType":"IfStatement","src":"14036:139:12","trueBody":{"id":3273,"nodeType":"Block","src":"14058:56:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3269,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14084:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3270,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"14095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3268,"name":"refundBuyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"14072:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14072:31:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3272,"nodeType":"ExpressionStatement","src":"14072:31:12"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3281,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14188:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14198:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14188:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14203:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14188:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3300,"nodeType":"Block","src":"14271:103:12","statements":[{"expression":{"argumentTypes":null,"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3292,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"14316:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":3294,"indexExpression":{"argumentTypes":null,"id":3293,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14325:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14316:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"id":3295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"14316:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3296,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"14347:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"commission","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"14347:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14316:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"14316:47:12"}]},"id":3301,"nodeType":"IfStatement","src":"14184:190:12","trueBody":{"id":3291,"nodeType":"Block","src":"14206:58:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3287,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14234:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3288,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"14245:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3286,"name":"payCommission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"14220:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14220:33:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"ExpressionStatement","src":"14220:33:12"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3303,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"14400:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrator","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"14400:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3305,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14418:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3306,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"14429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3307,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"14438:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":3308,"name":"_ruling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14449:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3302,"name":"OfferRuling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"14388:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,bytes32,uint256)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14388:69:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"EmitStatement","src":"14383:74:12"},{"expression":{"argumentTypes":null,"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14467:33:12","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3311,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"14474:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3313,"indexExpression":{"argumentTypes":null,"id":3312,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14481:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14474:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3315,"indexExpression":{"argumentTypes":null,"id":3314,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"14492:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14474:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3317,"nodeType":"ExpressionStatement","src":"14467:33:12"}]},"documentation":null,"id":3319,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"executeRuling","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"name":"listingID","nodeType":"VariableDeclaration","scope":3319,"src":"13570:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint","nodeType":"ElementaryTypeName","src":"13570:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3215,"name":"offerID","nodeType":"VariableDeclaration","scope":3319,"src":"13594:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint","nodeType":"ElementaryTypeName","src":"13594:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3217,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":3319,"src":"13616:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13616:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":3219,"name":"_ruling","nodeType":"VariableDeclaration","scope":3319,"src":"13643:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint","nodeType":"ElementaryTypeName","src":"13643:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3221,"name":"_refund","nodeType":"VariableDeclaration","scope":3319,"src":"13721:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint","nodeType":"ElementaryTypeName","src":"13721:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13560:179:12"},"payable":false,"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[],"src":"13747:0:12"},"scope":3702,"src":"13538:969:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3383,"nodeType":"Block","src":"14675:405:12","statements":[{"assignments":[3331],"declarations":[{"constant":false,"id":3331,"name":"offer","nodeType":"VariableDeclaration","scope":3384,"src":"14685:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3330,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"14685:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3337,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3332,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"14707:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3334,"indexExpression":{"argumentTypes":null,"id":3333,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14714:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14707:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3336,"indexExpression":{"argumentTypes":null,"id":3335,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"14725:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14707:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14685:48:12"},{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"name":"listing","nodeType":"VariableDeclaration","scope":3384,"src":"14743:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":3338,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"14743:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":3343,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3340,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"14769:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":3342,"indexExpression":{"argumentTypes":null,"id":3341,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14778:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14769:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14743:45:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"14806:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14806:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3347,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"14820:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"14820:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14806:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656c6c6572206d7573742063616c6c","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14836:18:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a08cec57774c62dd65f658897fc5f1bc20bd061618f0f8b6b4b1764d9399a090","typeString":"literal_string \"Seller must call\""},"value":"Seller must call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a08cec57774c62dd65f658897fc5f1bc20bd061618f0f8b6b4b1764d9399a090","typeString":"literal_string \"Seller must call\""}],"id":3344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"14798:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14798:57:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3352,"nodeType":"ExpressionStatement","src":"14798:57:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3354,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14873:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"14873:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14889:1:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14873:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73746174757320213d206163636570746564","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14892:20:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""},"value":"status != accepted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b993e556003ab38707b2287649186f076f77739fa5873c4471d28fec3af1ebe","typeString":"literal_string \"status != accepted\""}],"id":3353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"14865:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14865:48:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3360,"nodeType":"ExpressionStatement","src":"14865:48:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3362,"name":"_refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"14931:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3363,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14942:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"14942:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14931:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45786365737369766520726566756e64","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14955:18:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5b5ca7cc495b3d73f6b148db4f29a0d190a0640dfd493a2a89c8631010464ad5","typeString":"literal_string \"Excessive refund\""},"value":"Excessive refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b5ca7cc495b3d73f6b148db4f29a0d190a0640dfd493a2a89c8631010464ad5","typeString":"literal_string \"Excessive refund\""}],"id":3361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"14923:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14923:51:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3368,"nodeType":"ExpressionStatement","src":"14923:51:12"},{"expression":{"argumentTypes":null,"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3369,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14984:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"refund","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"14984:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":3372,"name":"_refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"14999:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14984:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3374,"nodeType":"ExpressionStatement","src":"14984:22:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3376,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"15031:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15031:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3378,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"15043:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3379,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"15054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3380,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"15063:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3375,"name":"OfferData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"15021:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15021:52:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"EmitStatement","src":"15016:57:12"}]},"documentation":null,"id":3384,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"updateRefund","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"name":"listingID","nodeType":"VariableDeclaration","scope":3384,"src":"14605:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint","nodeType":"ElementaryTypeName","src":"14605:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3323,"name":"offerID","nodeType":"VariableDeclaration","scope":3384,"src":"14621:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint","nodeType":"ElementaryTypeName","src":"14621:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3325,"name":"_refund","nodeType":"VariableDeclaration","scope":3384,"src":"14635:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint","nodeType":"ElementaryTypeName","src":"14635:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3327,"name":"_ipfsHash","nodeType":"VariableDeclaration","scope":3384,"src":"14649:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14649:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14604:63:12"},"payable":false,"returnParameters":{"id":3329,"nodeType":"ParameterList","parameters":[],"src":"14675:0:12"},"scope":3702,"src":"14583:497:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3430,"nodeType":"Block","src":"15262:346:12","statements":[{"assignments":[3392],"declarations":[{"constant":false,"id":3392,"name":"offer","nodeType":"VariableDeclaration","scope":3431,"src":"15272:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3391,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"15272:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3398,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3393,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15294:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3395,"indexExpression":{"argumentTypes":null,"id":3394,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"15301:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15294:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3397,"indexExpression":{"argumentTypes":null,"id":3396,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"15312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15294:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15272:48:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3400,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"15342:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"15342:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15334:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15334:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15361:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"15334:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3428,"nodeType":"Block","src":"15456:146:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3420,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"15519:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"15519:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3422,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"15532:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"15532:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3417,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"15495:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"15495:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"15495:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15495:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"526566756e64206661696c6564","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15562:15:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":3416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"15470:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15470:121:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3427,"nodeType":"ExpressionStatement","src":"15470:121:12"}]},"id":3429,"nodeType":"IfStatement","src":"15330:272:12","trueBody":{"id":3415,"nodeType":"Block","src":"15366:84:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3409,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"15405:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"15405:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3406,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"15388:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"15388:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"send","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15388:16:12","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15388:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45544820726566756e64206661696c6564","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15419:19:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""},"value":"ETH refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""}],"id":3405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"15380:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15380:59:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3414,"nodeType":"ExpressionStatement","src":"15380:59:12"}]}}]},"documentation":null,"id":3431,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"refundBuyer","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"name":"listingID","nodeType":"VariableDeclaration","scope":3431,"src":"15224:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint","nodeType":"ElementaryTypeName","src":"15224:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3388,"name":"offerID","nodeType":"VariableDeclaration","scope":3431,"src":"15240:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint","nodeType":"ElementaryTypeName","src":"15240:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15223:30:12"},"payable":false,"returnParameters":{"id":3390,"nodeType":"ParameterList","parameters":[],"src":"15262:0:12"},"scope":3702,"src":"15203:405:12","stateMutability":"nonpayable","superFunction":null,"visibility":"private"},{"body":{"id":3511,"nodeType":"Block","src":"15710:655:12","statements":[{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"name":"listing","nodeType":"VariableDeclaration","scope":3512,"src":"15720:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":3438,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"15720:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":3443,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3440,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"15746:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":3442,"indexExpression":{"argumentTypes":null,"id":3441,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"15755:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15746:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15720:45:12"},{"assignments":[3445],"declarations":[{"constant":false,"id":3445,"name":"offer","nodeType":"VariableDeclaration","scope":3512,"src":"15775:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3444,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"15775:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3451,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3446,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15797:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3448,"indexExpression":{"argumentTypes":null,"id":3447,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"15804:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15797:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3450,"indexExpression":{"argumentTypes":null,"id":3449,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"15815:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15797:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15775:48:12"},{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"name":"value","nodeType":"VariableDeclaration","scope":3512,"src":"15833:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint","nodeType":"ElementaryTypeName","src":"15833:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":3459,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3454,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"15846:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"15846:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3456,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"15860:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"refund","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"15860:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15846:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15833:39:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3461,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"15895:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"15895:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}],"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15887:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15914:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"15887:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3509,"nodeType":"Block","src":"16078:281:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3490,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"16141:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"16141:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3492,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"16154:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"refund","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"16154:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3487,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"16117:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"16117:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"16117:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16117:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"526566756e64206661696c6564","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16185:15:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":3486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"16092:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16092:122:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3497,"nodeType":"ExpressionStatement","src":"16092:122:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3502,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"16277:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"16277:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"16293:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3499,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"16253:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"16253:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"16253:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16253:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5472616e73666572206661696c6564","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16317:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"16228:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16228:120:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3508,"nodeType":"ExpressionStatement","src":"16228:120:12"}]},"id":3510,"nodeType":"IfStatement","src":"15883:476:12","trueBody":{"id":3485,"nodeType":"Block","src":"15919:153:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3470,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"15958:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"refund","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"15958:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3467,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"15941:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"15941:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"send","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15941:16:12","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15941:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45544820726566756e64206661696c6564","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15973:19:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""},"value":"ETH refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""}],"id":3466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"15933:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15933:60:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3475,"nodeType":"ExpressionStatement","src":"15933:60:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"16035:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3477,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"16015:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"16015:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"send","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16015:19:12","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16015:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4554482073656e64206661696c6564","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16043:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f367d65c6428ba250cccf1bbd5b1d5c5d7d820c5f735d0153fc9520a4fc19623","typeString":"literal_string \"ETH send failed\""},"value":"ETH send failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f367d65c6428ba250cccf1bbd5b1d5c5d7d820c5f735d0153fc9520a4fc19623","typeString":"literal_string \"ETH send failed\""}],"id":3476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"16007:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:54:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3484,"nodeType":"ExpressionStatement","src":"16007:54:12"}]}}]},"documentation":null,"id":3512,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"paySeller","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"name":"listingID","nodeType":"VariableDeclaration","scope":3512,"src":"15672:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint","nodeType":"ElementaryTypeName","src":"15672:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3435,"name":"offerID","nodeType":"VariableDeclaration","scope":3512,"src":"15688:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint","nodeType":"ElementaryTypeName","src":"15688:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15671:30:12"},"payable":false,"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[],"src":"15710:0:12"},"scope":3702,"src":"15653:712:12","stateMutability":"nonpayable","superFunction":null,"visibility":"private"},{"body":{"id":3544,"nodeType":"Block","src":"16472:265:12","statements":[{"assignments":[3520],"declarations":[{"constant":false,"id":3520,"name":"offer","nodeType":"VariableDeclaration","scope":3545,"src":"16482:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"},"typeName":{"contractScope":null,"id":3519,"name":"Offer","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"16482:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer"}},"value":null,"visibility":"internal"}],"id":3526,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3521,"name":"offers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"16504:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Offer_$2344_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct V00_Marketplace.Offer storage ref[] storage ref)"}},"id":3523,"indexExpression":{"argumentTypes":null,"id":3522,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"16511:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16504:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Offer_$2344_storage_$dyn_storage","typeString":"struct V00_Marketplace.Offer storage ref[] storage ref"}},"id":3525,"indexExpression":{"argumentTypes":null,"id":3524,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"16522:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16504:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage","typeString":"struct V00_Marketplace.Offer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16482:48:12"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3527,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"16544:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"affiliate","nodeType":"MemberAccess","referencedDeclaration":2337,"src":"16544:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16563:3:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"16544:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3543,"nodeType":"IfStatement","src":"16540:191:12","trueBody":{"id":3542,"nodeType":"Block","src":"16568:163:12","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3534,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"16626:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"affiliate","nodeType":"MemberAccess","referencedDeclaration":2337,"src":"16626:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3536,"name":"offer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"16643:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Offer_$2344_storage_ptr","typeString":"struct V00_Marketplace.Offer storage pointer"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"commission","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"16643:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3532,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"16607:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"16607:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16607:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"436f6d6d697373696f6e207472616e73666572206661696c6564","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16678:28:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff","typeString":"literal_string \"Commission transfer failed\""},"value":"Commission transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff","typeString":"literal_string \"Commission transfer failed\""}],"id":3531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"16582:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16582:138:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3541,"nodeType":"ExpressionStatement","src":"16582:138:12"}]}}]},"documentation":null,"id":3545,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"payCommission","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"name":"listingID","nodeType":"VariableDeclaration","scope":3545,"src":"16434:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint","nodeType":"ElementaryTypeName","src":"16434:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3516,"name":"offerID","nodeType":"VariableDeclaration","scope":3545,"src":"16450:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint","nodeType":"ElementaryTypeName","src":"16450:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16433:30:12"},"payable":false,"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[],"src":"16472:0:12"},"scope":3702,"src":"16411:326:12","stateMutability":"nonpayable","superFunction":null,"visibility":"private"},{"body":{"id":3556,"nodeType":"Block","src":"16838:59:12","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"16869:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16869:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3553,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"16881:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3550,"name":"MarketplaceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"16853:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16853:37:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3555,"nodeType":"EmitStatement","src":"16848:42:12"}]},"documentation":null,"id":3557,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addData","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":3557,"src":"16813:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16813:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16812:18:12"},"payable":false,"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[],"src":"16838:0:12"},"scope":3702,"src":"16796:101:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3571,"nodeType":"Block","src":"17008:66:12","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"17035:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17035:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3567,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"17047:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3568,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"17058:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3564,"name":"ListingData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"17023:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17023:44:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3570,"nodeType":"EmitStatement","src":"17018:49:12"}]},"documentation":null,"id":3572,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addData","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"name":"listingID","nodeType":"VariableDeclaration","scope":3572,"src":"16967:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint","nodeType":"ElementaryTypeName","src":"16967:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3561,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":3572,"src":"16983:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16983:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16966:34:12"},"payable":false,"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[],"src":"17008:0:12"},"scope":3702,"src":"16950:124:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3589,"nodeType":"Block","src":"17198:73:12","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3582,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"17223:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17223:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3584,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"17235:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3585,"name":"offerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17246:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3586,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"17255:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3581,"name":"OfferData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"17213:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17213:51:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3588,"nodeType":"EmitStatement","src":"17208:56:12"}]},"documentation":null,"id":3590,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addData","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"name":"listingID","nodeType":"VariableDeclaration","scope":3590,"src":"17143:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint","nodeType":"ElementaryTypeName","src":"17143:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3576,"name":"offerID","nodeType":"VariableDeclaration","scope":3590,"src":"17159:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint","nodeType":"ElementaryTypeName","src":"17159:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3578,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":3590,"src":"17173:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17173:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17142:48:12"},"payable":false,"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[],"src":"17198:0:12"},"scope":3702,"src":"17126:145:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3645,"nodeType":"Block","src":"17424:372:12","statements":[{"assignments":[3602],"declarations":[{"constant":false,"id":3602,"name":"listing","nodeType":"VariableDeclaration","scope":3646,"src":"17434:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"},"typeName":{"contractScope":null,"id":3601,"name":"Listing","nodeType":"UserDefinedTypeName","referencedDeclaration":2325,"src":"17434:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing"}},"value":null,"visibility":"internal"}],"id":3606,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3603,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"17460:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Listing_$2325_storage_$dyn_storage","typeString":"struct V00_Marketplace.Listing storage ref[] storage ref"}},"id":3605,"indexExpression":{"argumentTypes":null,"id":3604,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"17469:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17460:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage","typeString":"struct V00_Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17434:45:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3608,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"17497:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"depositManager","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"17497:22:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"17523:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17523:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17497:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6465706f7369744d616e61676572206d7573742063616c6c","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17535:26:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_540de9264d798638e80d4cb019ae208a6ef13dced47ad2823f453d99c7433b1a","typeString":"literal_string \"depositManager must call\""},"value":"depositManager must call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_540de9264d798638e80d4cb019ae208a6ef13dced47ad2823f453d99c7433b1a","typeString":"literal_string \"depositManager must call\""}],"id":3607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"17489:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17489:73:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3615,"nodeType":"ExpressionStatement","src":"17489:73:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3617,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"17580:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"17580:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":3619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"17599:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17580:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"56616c756520746f6f2068696768","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17606:16:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb","typeString":"literal_string \"Value too high\""},"value":"Value too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb","typeString":"literal_string \"Value too high\""}],"id":3616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"17572:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17572:51:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3623,"nodeType":"ExpressionStatement","src":"17572:51:12"},{"expression":{"argumentTypes":null,"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3624,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"17633:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2325_storage_ptr","typeString":"struct V00_Marketplace.Listing storage pointer"}},"id":3626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"17633:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"argumentTypes":null,"id":3627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"17652:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17633:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ExpressionStatement","src":"17633:24:12"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3633,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"17694:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"17702:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3631,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"17675:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"17675:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17675:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5472616e73666572206661696c6564","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17710:17:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[5247,5248],"referencedDeclaration":5248,"src":"17667:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17667:61:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3638,"nodeType":"ExpressionStatement","src":"17667:61:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3640,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"17761:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3641,"name":"listingID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"17769:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":3642,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"17780:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3639,"name":"ListingArbitrated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"17743:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17743:46:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3644,"nodeType":"EmitStatement","src":"17738:51:12"}]},"documentation":null,"id":3646,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"sendDeposit","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"name":"listingID","nodeType":"VariableDeclaration","scope":3646,"src":"17355:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint","nodeType":"ElementaryTypeName","src":"17355:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3594,"name":"target","nodeType":"VariableDeclaration","scope":3646,"src":"17371:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"17371:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3596,"name":"value","nodeType":"VariableDeclaration","scope":3646,"src":"17387:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint","nodeType":"ElementaryTypeName","src":"17387:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3598,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":3646,"src":"17399:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17399:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17354:62:12"},"payable":false,"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[],"src":"17424:0:12"},"scope":3702,"src":"17334:462:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3659,"nodeType":"Block","src":"17918:46:12","statements":[{"expression":{"argumentTypes":null,"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3653,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"17928:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3655,"name":"_tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"17946:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3654,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"17940:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$2176_$","typeString":"type(contract ERC20)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17940:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"src":"17928:29:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2176","typeString":"contract ERC20"}},"id":3658,"nodeType":"ExpressionStatement","src":"17928:29:12"}]},"documentation":null,"id":3660,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3651,"modifierName":{"argumentTypes":null,"id":3650,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"17908:9:12","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17908:9:12"}],"name":"setTokenAddr","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"name":"_tokenAddr","nodeType":"VariableDeclaration","scope":3660,"src":"17881:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"17881:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17880:20:12"},"payable":false,"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[],"src":"17918:0:12"},"scope":3702,"src":"17859:105:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3680,"nodeType":"Block","src":"18120:104:12","statements":[{"expression":{"argumentTypes":null,"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3669,"name":"allowedAffiliates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"18130:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3671,"indexExpression":{"argumentTypes":null,"id":3670,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"18148:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18130:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18162:4:12","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18130:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3674,"nodeType":"ExpressionStatement","src":"18130:36:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3676,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"18196:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3677,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"18208:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3675,"name":"AffiliateAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"18181:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18181:36:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"EmitStatement","src":"18176:41:12"}]},"documentation":null,"id":3681,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3667,"modifierName":{"argumentTypes":null,"id":3666,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"18110:9:12","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18110:9:12"}],"name":"addAffiliate","nodeType":"FunctionDefinition","parameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"name":"_affiliate","nodeType":"VariableDeclaration","scope":3681,"src":"18065:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"18065:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3664,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":3681,"src":"18085:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18085:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18064:38:12"},"payable":false,"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[],"src":"18120:0:12"},"scope":3702,"src":"18043:181:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":3700,"nodeType":"Block","src":"18355:106:12","statements":[{"expression":{"argumentTypes":null,"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18365:36:12","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":3690,"name":"allowedAffiliates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"18372:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3692,"indexExpression":{"argumentTypes":null,"id":3691,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"18390:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18372:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3694,"nodeType":"ExpressionStatement","src":"18365:36:12"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3696,"name":"_affiliate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"18433:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3697,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"18445:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3695,"name":"AffiliateRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"18416:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18416:38:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3699,"nodeType":"EmitStatement","src":"18411:43:12"}]},"documentation":null,"id":3701,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":3688,"modifierName":{"argumentTypes":null,"id":3687,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"18345:9:12","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18345:9:12"}],"name":"removeAffiliate","nodeType":"FunctionDefinition","parameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"name":"_affiliate","nodeType":"VariableDeclaration","scope":3701,"src":"18300:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3682,"name":"address","nodeType":"ElementaryTypeName","src":"18300:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3685,"name":"ipfsHash","nodeType":"VariableDeclaration","scope":3701,"src":"18320:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18320:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18299:38:12"},"payable":false,"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"18355:0:12"},"scope":3702,"src":"18275:186:12","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":3703,"src":"504:17959:12"}],"src":"0:18464:12"}};

/***/ }),

/***/ "./contracts/build/contracts/V00_UserRegistry.json":
/*!*********************************************************!*\
  !*** ./contracts/build/contracts/V00_UserRegistry.json ***!
  \*********************************************************/
/*! exports provided: abi, bytecode, contractName, networks, ast, default */
/***/ (function(module) {

module.exports = {"abi":[{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"users","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_address","type":"address"},{"indexed":false,"name":"_identity","type":"address"}],"name":"NewUser","type":"event"},{"constant":false,"inputs":[],"name":"registerUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"clearUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634d3820eb811461005b57806376b1658814610072578063a87430ba14610087575b600080fd5b34801561006757600080fd5b506100706100de565b005b34801561007e57600080fd5b50610070610146565b34801561009357600080fd5b506100b573ffffffffffffffffffffffffffffffffffffffff60043516610172565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3260008181526020818152604091829020805473ffffffffffffffffffffffffffffffffffffffff19163390811790915582519384529083015280517fff3eabe1067b08ba8af3e8d3191eebeae9b35de7a7aeee40f2ad1ceb6a8876079281900390910190a1565b336000908152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582087923653594aa1c581cf5712f8ff85674604b96e8e9ab4b2efa2a88dcc4459ec0029","contractName":"V00_UserRegistry","networks":{"1":{"events":{},"links":{},"address":"0xa4428439ec214cc68240552ec93298d1da391114","transactionHash":"0x5f0fd1d48c04d4651d0e738aba772146f7f09d9567fbe6328405a5a1b3221796"},"4":{"events":{},"links":{},"address":"0x56727c8a51b276aec911afa8d6d80d485c89d5cc","transactionHash":"0x1fb8bf412109d35f8dda3530c66745ca6d656f55b1efc46a64fcb5092bc178f4"}},"ast":{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/V00_UserRegistry.sol","exportedSymbols":{"V00_UserRegistry":[2152]},"id":2153,"nodeType":"SourceUnit","nodes":[{"id":2110,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:11"},{"absolutePath":"/Users/franck/src/2nd_origin/origin/origin-js/contracts/contracts/identity/ClaimHolderPresigned.sol","file":"./ClaimHolderPresigned.sol","id":2111,"nodeType":"ImportDirective","scope":2153,"sourceUnit":672,"src":"26:36:11","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":"@title UserRegistry\n @dev Used to keep registry of user identifies\n @author Matt Liu <matt@originprotocol.com>, Josh Fraser <josh@originprotocol.com>, Stan James <stan@originprotocol.com>","fullyImplemented":true,"id":2152,"linearizedBaseContracts":[2152],"name":"V00_UserRegistry","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":2117,"name":"NewUser","nodeType":"EventDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"indexed":false,"name":"_address","nodeType":"VariableDeclaration","scope":2117,"src":"338:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"338:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2115,"indexed":false,"name":"_identity","nodeType":"VariableDeclaration","scope":2117,"src":"356:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"337:37:11"},"src":"324:51:11"},{"constant":false,"id":2121,"name":"users","nodeType":"VariableDeclaration","scope":2152,"src":"465:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":2120,"keyType":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"473:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"465:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"value":null,"visibility":"public"},{"body":{"id":2139,"nodeType":"Block","src":"649:91:11","statements":[{"expression":{"argumentTypes":null,"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2124,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"659:5:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2127,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2125,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"665:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":null,"src":"665:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"659:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"678:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"678:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"659:29:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2131,"nodeType":"ExpressionStatement","src":"659:29:11"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2133,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"711:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":null,"src":"711:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"722:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"722:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2132,"name":"NewUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"703:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"703:30:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"EmitStatement","src":"698:35:11"}]},"documentation":"@dev registerUser(): Add a user to the registry","id":2140,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"registerUser","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"627:2:11"},"payable":false,"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[],"src":"649:0:11"},"scope":2152,"src":"606:134:11","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":2150,"nodeType":"Block","src":"842:38:11","statements":[{"expression":{"argumentTypes":null,"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2143,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"852:5:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2146,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"858:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"858:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"852:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"872:1:11","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"852:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2149,"nodeType":"ExpressionStatement","src":"852:21:11"}]},"documentation":"@dev clearUser(): Remove user from the registry","id":2151,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"clearUser","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[],"src":"820:2:11"},"payable":false,"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[],"src":"842:0:11"},"scope":2152,"src":"802:78:11","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":2153,"src":"264:618:11"}],"src":"0:883:11"}};

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: name, version, description, engines, main, scripts, files, repository, author, license, dependencies, devDependencies, eslintConfig, default */
/***/ (function(module) {

module.exports = {"name":"origin","version":"0.8.6","description":"","engines":{"node":"9.11.1"},"main":"./dist/index.js","scripts":{"build":"node scripts/build.js","format":"npx prettier-eslint --write 'src/**/*.js' 'test/**/*test.js' 'contracts/test/**/*.js' 'scripts/**/*.js'","format:solidity":"solium -d contracts/contracts/ --fix","install:dev":"npm install && npm link","prepare":"npm run build","start":"node scripts/serve.js serve","start:no-ganache":"node scripts/serve.js no-ganache","test":"node scripts/test.js","test:truffle":"node scripts/test-truffle.js","test:js":"node scripts/test-js.js","test:jsw":"node scripts/test-js.js --watch","test:contracts":"mocha -r babel-register -r babel-polyfill -t 10000 --exit contracts/test-alt/","test:contractsw":"mocha -r babel-register -r babel-polyfill -t 10000 -w --watch-extensions sol contracts/test-alt/","test:contracts-coverage":"SOLIDITY_COVERAGE=1 npx solidity-coverage"},"files":["dist"],"repository":{"type":"git","url":"https://github.com/OriginProtocol/origin-js"},"author":"Stan James <stan@originprotocol.com>","license":"MIT","dependencies":{"ajv":"^6.5.0","babel-polyfill":"^6.26.0","bignumber.js":"^7.2.1","bs58":"^4.0.1","chalk":"^2.4.1","cross-fetch":"^2.1.1","crypto-js":"^3.1.9-1","crypto-random-string":"^1.0.0","ethereumjs-util":"^5.2.0","form-data":"^2.3.2","map-cache":"^0.2.2","openzeppelin-solidity":"1.10.0","rlp":"^2.0.0","store":"^2.0.12","truffle-privatekey-provider":"^0.1.0","url-parse":"^1.4.0","web3":"^1.0.0-beta.34"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-eslint":"^8.2.3","babel-loader":"^7.1.4","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-env":"^1.6.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","babel-preset-stage-2":"^6.24.1","chai":"^4.1.2","chai-as-promised":"^7.1.1","chai-bignumber":"^2.0.2","chai-string":"1.4.0","eth-gas-reporter":"^0.1.2","fetch-mock":"^6.3.0","flow-bin":"^0.71.0","fs-extra":"^7.0.0","ganache-core":"^2.1.0","html-webpack-plugin":"^3.2.0","ipfs":"^0.28.2","ipfs-api":"^20.2.1","mocha":"^5.1.1","mocha-loader":"^1.1.3","node-watch":"^0.5.8","prettier-eslint-cli":"^4.7.1","sinon":"^5.1.1","solc":"^0.4.24","solidity-coverage":"^0.5.10","solium":"^1.1.7","truffle":"^4.1.8","truffle-contract":"^3.0.5","truffle-hdwallet-provider":"0.0.5","web3-provider-engine":"^14.0.6","webpack":"^4.8.1","webpack-cli":"^2.1.3","webpack-dev-server":"^3.1.4","webpack-node-externals":"^1.7.2"},"eslintConfig":{"root":true,"parser":"babel-eslint","extends":["eslint:recommended"],"env":{"browser":true,"es6":true,"mocha":true,"node":true},"globals":{"artifacts":true,"assert":true,"contract":true,"expect":true,"web3":true},"rules":{"indent":["error",2],"no-console":["off"],"no-var":["error"],"prefer-const":["error"],"semi":["error","never"],"quotes":["error","single",{"avoidEscape":true,"allowTemplateLiterals":true}]}}};

/***/ }),

/***/ "./src/contractInterface/marketplace/resolver.js":
/*!*******************************************************!*\
  !*** ./src/contractInterface/marketplace/resolver.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _v00_adapter = __webpack_require__(/*! ./v00_adapter */ "./src/contractInterface/marketplace/v00_adapter.js");

var _v00_adapter2 = _interopRequireDefault(_v00_adapter);

var _id = __webpack_require__(/*! ../../utils/id */ "./src/utils/id.js");

var _notification = __webpack_require__(/*! ../../models/notification */ "./src/models/notification.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MarketplaceResolver = function () {
  function MarketplaceResolver(_ref) {
    var contractService = _ref.contractService,
        store = _ref.store,
        blockEpoch = _ref.blockEpoch;

    _classCallCheck(this, MarketplaceResolver);

    this.adapters = {
      '000': new _v00_adapter2.default({ contractService: contractService, store: store, blockEpoch: blockEpoch })
    };
    this.versions = ['000'];
    this.currentVersion = this.versions[this.versions.length - 1];
    this.currentAdapter = this.adapters[this.currentVersion];
    this.contractService = contractService;
    this.store = store;
  }

  _createClass(MarketplaceResolver, [{
    key: 'getListingsCount',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var total, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, version;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                total = 0;
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context.prev = 4;
                _iterator = this.versions[Symbol.iterator]();

              case 6:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context.next = 14;
                  break;
                }

                version = _step.value;
                _context.next = 10;
                return this.adapters[version].getListingsCount();

              case 10:
                total += _context.sent;

              case 11:
                _iteratorNormalCompletion = true;
                _context.next = 6;
                break;

              case 14:
                _context.next = 20;
                break;

              case 16:
                _context.prev = 16;
                _context.t0 = _context['catch'](4);
                _didIteratorError = true;
                _iteratorError = _context.t0;

              case 20:
                _context.prev = 20;
                _context.prev = 21;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 23:
                _context.prev = 23;

                if (!_didIteratorError) {
                  _context.next = 26;
                  break;
                }

                throw _iteratorError;

              case 26:
                return _context.finish(23);

              case 27:
                return _context.finish(20);

              case 28:
                return _context.abrupt('return', total);

              case 29:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[4, 16, 20, 28], [21,, 23, 27]]);
      }));

      function getListingsCount() {
        return _ref2.apply(this, arguments);
      }

      return getListingsCount;
    }()
  }, {
    key: 'getListingIds',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var _this = this;

        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var network, listingIds, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _loop, _iterator2, _step2;

        return regeneratorRuntime.wrap(function _callee2$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.contractService.web3.eth.net.getId();

              case 2:
                network = _context3.sent;
                listingIds = [];
                _iteratorNormalCompletion2 = true;
                _didIteratorError2 = false;
                _iteratorError2 = undefined;
                _context3.prev = 7;
                _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {
                  var version, listingIndexes;
                  return regeneratorRuntime.wrap(function _loop$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          version = _step2.value;
                          _context2.next = 3;
                          return _this.adapters[version].getListings(opts);

                        case 3:
                          listingIndexes = _context2.sent;

                          listingIndexes.forEach(function (listingIndex) {
                            listingIds.unshift((0, _id.generateListingId)({ version: version, network: network, listingIndex: listingIndex }));
                          });

                        case 5:
                        case 'end':
                          return _context2.stop();
                      }
                    }
                  }, _loop, _this);
                });
                _iterator2 = this.versions[Symbol.iterator]();

              case 10:
                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                  _context3.next = 15;
                  break;
                }

                return _context3.delegateYield(_loop(), 't0', 12);

              case 12:
                _iteratorNormalCompletion2 = true;
                _context3.next = 10;
                break;

              case 15:
                _context3.next = 21;
                break;

              case 17:
                _context3.prev = 17;
                _context3.t1 = _context3['catch'](7);
                _didIteratorError2 = true;
                _iteratorError2 = _context3.t1;

              case 21:
                _context3.prev = 21;
                _context3.prev = 22;

                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }

              case 24:
                _context3.prev = 24;

                if (!_didIteratorError2) {
                  _context3.next = 27;
                  break;
                }

                throw _iteratorError2;

              case 27:
                return _context3.finish(24);

              case 28:
                return _context3.finish(21);

              case 29:
                return _context3.abrupt('return', listingIds);

              case 30:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee2, this, [[7, 17, 21, 29], [22,, 24, 28]]);
      }));

      function getListingIds() {
        return _ref3.apply(this, arguments);
      }

      return getListingIds;
    }()
  }, {
    key: 'getListing',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(listingId) {
        var _parseListingId2, adapter, listingIndex;

        return regeneratorRuntime.wrap(function _callee3$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _parseListingId2 = this.parseListingId(listingId), adapter = _parseListingId2.adapter, listingIndex = _parseListingId2.listingIndex;
                _context4.next = 3;
                return adapter.getListing(listingIndex);

              case 3:
                return _context4.abrupt('return', _context4.sent);

              case 4:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee3, this);
      }));

      function getListing(_x2) {
        return _ref4.apply(this, arguments);
      }

      return getListing;
    }()
  }, {
    key: 'getOfferIds',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(listingId) {
        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var network, _parseListingId3, adapter, listingIndex, version, offers;

        return regeneratorRuntime.wrap(function _callee4$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.contractService.web3.eth.net.getId();

              case 2:
                network = _context5.sent;
                _parseListingId3 = this.parseListingId(listingId), adapter = _parseListingId3.adapter, listingIndex = _parseListingId3.listingIndex, version = _parseListingId3.version;
                _context5.next = 6;
                return adapter.getOffers(listingIndex, opts);

              case 6:
                offers = _context5.sent;
                return _context5.abrupt('return', offers.map(function (offerIndex) {
                  return (0, _id.generateOfferId)({ network: network, version: version, listingIndex: listingIndex, offerIndex: offerIndex });
                }));

              case 8:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee4, this);
      }));

      function getOfferIds(_x4) {
        return _ref5.apply(this, arguments);
      }

      return getOfferIds;
    }()
  }, {
    key: 'getOffer',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(offerId) {
        var _parseOfferId2, adapter, listingIndex, offerIndex, version, network, listingId, chainOffer;

        return regeneratorRuntime.wrap(function _callee5$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _parseOfferId2 = this.parseOfferId(offerId), adapter = _parseOfferId2.adapter, listingIndex = _parseOfferId2.listingIndex, offerIndex = _parseOfferId2.offerIndex, version = _parseOfferId2.version, network = _parseOfferId2.network;
                listingId = (0, _id.generateListingId)({ version: version, network: network, listingIndex: listingIndex });

                // Load chain data.

                _context6.next = 4;
                return adapter.getOffer(listingIndex, offerIndex);

              case 4:
                chainOffer = _context6.sent;
                return _context6.abrupt('return', { chainOffer: chainOffer, listingId: listingId });

              case 6:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee5, this);
      }));

      function getOffer(_x5) {
        return _ref6.apply(this, arguments);
      }

      return getOffer;
    }()
  }, {
    key: 'createListing',
    value: function () {
      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(ipfsBytes, ipfsData, confirmationCallback) {
        var transactionReceipt, version, network, listingIndex, listingId;
        return regeneratorRuntime.wrap(function _callee6$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.currentAdapter.createListing(ipfsBytes, ipfsData, confirmationCallback);

              case 2:
                transactionReceipt = _context7.sent;
                version = this.currentVersion;
                _context7.next = 6;
                return this.contractService.web3.eth.net.getId();

              case 6:
                network = _context7.sent;
                listingIndex = transactionReceipt.listingIndex;
                listingId = (0, _id.generateListingId)({ network: network, version: version, listingIndex: listingIndex });
                return _context7.abrupt('return', Object.assign({ listingId: listingId }, transactionReceipt));

              case 10:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee6, this);
      }));

      function createListing(_x6, _x7, _x8) {
        return _ref7.apply(this, arguments);
      }

      return createListing;
    }()
  }, {
    key: 'withdrawListing',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(listingId, ipfsBytes, confirmationCallback) {
        var _parseListingId4, adapter, listingIndex;

        return regeneratorRuntime.wrap(function _callee7$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _parseListingId4 = this.parseListingId(listingId), adapter = _parseListingId4.adapter, listingIndex = _parseListingId4.listingIndex;
                _context8.next = 3;
                return adapter.withdrawListing(listingIndex, ipfsBytes, confirmationCallback);

              case 3:
                return _context8.abrupt('return', _context8.sent);

              case 4:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee7, this);
      }));

      function withdrawListing(_x9, _x10, _x11) {
        return _ref8.apply(this, arguments);
      }

      return withdrawListing;
    }()
  }, {
    key: 'makeOffer',
    value: function () {
      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(listingId, ipfsBytes, offerData, confirmationCallback) {
        var _parseListingId5, adapter, listingIndex, version, network, transactionReceipt, offerIndex, offerId;

        return regeneratorRuntime.wrap(function _callee8$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _parseListingId5 = this.parseListingId(listingId), adapter = _parseListingId5.adapter, listingIndex = _parseListingId5.listingIndex, version = _parseListingId5.version, network = _parseListingId5.network;
                _context9.next = 3;
                return adapter.makeOffer(listingIndex, ipfsBytes, offerData, confirmationCallback);

              case 3:
                transactionReceipt = _context9.sent;


                // Success. Return listingId, newly created offerId and chain transaction receipt.
                offerIndex = transactionReceipt.offerIndex;
                offerId = (0, _id.generateOfferId)({
                  network: network,
                  version: version,
                  listingIndex: listingIndex,
                  offerIndex: offerIndex
                });
                return _context9.abrupt('return', Object.assign({ listingId: listingId, offerId: offerId }, transactionReceipt));

              case 7:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee8, this);
      }));

      function makeOffer(_x12, _x13, _x14, _x15) {
        return _ref9.apply(this, arguments);
      }

      return makeOffer;
    }()
  }, {
    key: 'withdrawOffer',
    value: function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(id, ipfsBytes, confirmationCallback) {
        var _parseOfferId3, adapter, listingIndex, offerIndex;

        return regeneratorRuntime.wrap(function _callee9$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _parseOfferId3 = this.parseOfferId(id), adapter = _parseOfferId3.adapter, listingIndex = _parseOfferId3.listingIndex, offerIndex = _parseOfferId3.offerIndex;
                _context10.next = 3;
                return adapter.withdrawOffer(listingIndex, offerIndex, ipfsBytes, confirmationCallback);

              case 3:
                return _context10.abrupt('return', _context10.sent);

              case 4:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee9, this);
      }));

      function withdrawOffer(_x16, _x17, _x18) {
        return _ref10.apply(this, arguments);
      }

      return withdrawOffer;
    }()
  }, {
    key: 'acceptOffer',
    value: function () {
      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(id, ipfsBytes, confirmationCallback) {
        var _parseOfferId4, adapter, listingIndex, offerIndex;

        return regeneratorRuntime.wrap(function _callee10$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _parseOfferId4 = this.parseOfferId(id), adapter = _parseOfferId4.adapter, listingIndex = _parseOfferId4.listingIndex, offerIndex = _parseOfferId4.offerIndex;
                _context11.next = 3;
                return adapter.acceptOffer(listingIndex, offerIndex, ipfsBytes, confirmationCallback);

              case 3:
                return _context11.abrupt('return', _context11.sent);

              case 4:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee10, this);
      }));

      function acceptOffer(_x19, _x20, _x21) {
        return _ref11.apply(this, arguments);
      }

      return acceptOffer;
    }()
  }, {
    key: 'finalizeOffer',
    value: function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(id, ipfsBytes, confirmationCallback) {
        var _parseOfferId5, adapter, listingIndex, offerIndex;

        return regeneratorRuntime.wrap(function _callee11$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _parseOfferId5 = this.parseOfferId(id), adapter = _parseOfferId5.adapter, listingIndex = _parseOfferId5.listingIndex, offerIndex = _parseOfferId5.offerIndex;
                _context12.next = 3;
                return adapter.finalizeOffer(listingIndex, offerIndex, ipfsBytes, confirmationCallback);

              case 3:
                return _context12.abrupt('return', _context12.sent);

              case 4:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee11, this);
      }));

      function finalizeOffer(_x22, _x23, _x24) {
        return _ref12.apply(this, arguments);
      }

      return finalizeOffer;
    }()
  }, {
    key: 'initiateDispute',
    value: function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(offerId, ipfsBytes, confirmationCallback) {
        var _parseOfferId6, adapter, listingIndex, offerIndex;

        return regeneratorRuntime.wrap(function _callee12$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _parseOfferId6 = this.parseOfferId(offerId), adapter = _parseOfferId6.adapter, listingIndex = _parseOfferId6.listingIndex, offerIndex = _parseOfferId6.offerIndex;
                _context13.next = 3;
                return adapter.initiateDispute(listingIndex, offerIndex, ipfsBytes, confirmationCallback);

              case 3:
                return _context13.abrupt('return', _context13.sent);

              case 4:
              case 'end':
                return _context13.stop();
            }
          }
        }, _callee12, this);
      }));

      function initiateDispute(_x25, _x26, _x27) {
        return _ref13.apply(this, arguments);
      }

      return initiateDispute;
    }()
  }, {
    key: 'resolveDispute',
    value: function () {
      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(offerId, ipfsBytes, ruling, refund, confirmationCallback) {
        var _parseOfferId7, adapter, listingIndex, offerIndex;

        return regeneratorRuntime.wrap(function _callee13$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _parseOfferId7 = this.parseOfferId(offerId), adapter = _parseOfferId7.adapter, listingIndex = _parseOfferId7.listingIndex, offerIndex = _parseOfferId7.offerIndex;
                _context14.next = 3;
                return adapter.resolveDispute(listingIndex, offerIndex, ipfsBytes, ruling, refund, confirmationCallback);

              case 3:
                return _context14.abrupt('return', _context14.sent);

              case 4:
              case 'end':
                return _context14.stop();
            }
          }
        }, _callee13, this);
      }));

      function resolveDispute(_x28, _x29, _x30, _x31, _x32) {
        return _ref14.apply(this, arguments);
      }

      return resolveDispute;
    }()
  }, {
    key: 'addData',
    value: function () {
      var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(listingId, offerId, ipfsBytes, confirmationCallback) {
        var _parseOfferId8, adapter, listingIndex, offerIndex, _parseListingId6, _adapter, _listingIndex;

        return regeneratorRuntime.wrap(function _callee14$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                if (!offerId) {
                  _context15.next = 7;
                  break;
                }

                _parseOfferId8 = this.parseOfferId(offerId), adapter = _parseOfferId8.adapter, listingIndex = _parseOfferId8.listingIndex, offerIndex = _parseOfferId8.offerIndex;
                _context15.next = 4;
                return adapter.addData(ipfsBytes, listingIndex, offerIndex, confirmationCallback);

              case 4:
                return _context15.abrupt('return', _context15.sent);

              case 7:
                if (!listingId) {
                  _context15.next = 14;
                  break;
                }

                _parseListingId6 = this.parseListingId(listingId), _adapter = _parseListingId6.adapter, _listingIndex = _parseListingId6.listingIndex;
                _context15.next = 11;
                return _adapter.addData(ipfsBytes, _listingIndex, null, confirmationCallback);

              case 11:
                return _context15.abrupt('return', _context15.sent);

              case 14:
                throw new Error('addData must be called with either a listing or offer id.');

              case 15:
              case 'end':
                return _context15.stop();
            }
          }
        }, _callee14, this);
      }));

      function addData(_x33, _x34, _x35, _x36) {
        return _ref15.apply(this, arguments);
      }

      return addData;
    }()
  }, {
    key: 'getListingReviews',
    value: function () {
      var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(listingId) {
        var _this2 = this;

        var _parseListingId7, adapter, listingIndex, version, network, listing, reviewEvents;

        return regeneratorRuntime.wrap(function _callee16$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _parseListingId7 = this.parseListingId(listingId), adapter = _parseListingId7.adapter, listingIndex = _parseListingId7.listingIndex, version = _parseListingId7.version, network = _parseListingId7.network;

                // Get all the OfferFinalized events for the listing.

                _context17.next = 3;
                return adapter.getListing(listingIndex);

              case 3:
                listing = _context17.sent;
                reviewEvents = listing.events.filter(function (e) {
                  return e.event === 'OfferFinalized' || e.event === 'OfferData';
                });
                return _context17.abrupt('return', Promise.all(reviewEvents.map(function () {
                  var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(event) {
                    var offerIndex, offerId, timestamp;
                    return regeneratorRuntime.wrap(function _callee15$(_context16) {
                      while (1) {
                        switch (_context16.prev = _context16.next) {
                          case 0:
                            offerIndex = event.returnValues.offerID;
                            offerId = (0, _id.generateOfferId)({
                              network: network,
                              version: version,
                              listingIndex: listingIndex,
                              offerIndex: offerIndex
                            });
                            // TODO(franck): Store the review timestamp in IPFS to avoid
                            //               a call to the blockchain to get the event's timestamp.

                            _context16.next = 4;
                            return _this2.contractService.getTimestamp(event);

                          case 4:
                            timestamp = _context16.sent;
                            return _context16.abrupt('return', Object.assign({ offerId: offerId, timestamp: timestamp }, event));

                          case 6:
                          case 'end':
                            return _context16.stop();
                        }
                      }
                    }, _callee15, _this2);
                  }));

                  return function (_x38) {
                    return _ref17.apply(this, arguments);
                  };
                }())));

              case 6:
              case 'end':
                return _context17.stop();
            }
          }
        }, _callee16, this);
      }));

      function getListingReviews(_x37) {
        return _ref16.apply(this, arguments);
      }

      return getListingReviews;
    }()
  }, {
    key: 'getNotifications',
    value: function () {
      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(party) {
        var network, notifications, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _version, rawNotifications, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, notification, timestamp, timestampInMilli, isWatched, notificationStatuses;

        return regeneratorRuntime.wrap(function _callee17$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return this.contractService.web3.eth.net.getId();

              case 2:
                network = _context18.sent;
                notifications = [];
                _iteratorNormalCompletion3 = true;
                _didIteratorError3 = false;
                _iteratorError3 = undefined;
                _context18.prev = 7;
                _iterator3 = this.versions[Symbol.iterator]();

              case 9:
                if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                  _context18.next = 52;
                  break;
                }

                _version = _step3.value;
                _context18.next = 13;
                return this.adapters[_version].getNotifications(party);

              case 13:
                rawNotifications = _context18.sent;
                _iteratorNormalCompletion4 = true;
                _didIteratorError4 = false;
                _iteratorError4 = undefined;
                _context18.prev = 17;
                _iterator4 = rawNotifications[Symbol.iterator]();

              case 19:
                if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {
                  _context18.next = 34;
                  break;
                }

                notification = _step4.value;

                notification.id = (0, _id.generateNotificationId)({
                  network: network,
                  version: _version,
                  transactionHash: notification.event.transactionHash
                });
                _context18.next = 24;
                return this.contractService.getTimestamp(notification.event);

              case 24:
                timestamp = _context18.sent;
                timestampInMilli = timestamp * 1000;
                isWatched = timestampInMilli > this.store.get(_notification.storeKeys.notificationSubscriptionStart);
                notificationStatuses = this.store.get(_notification.storeKeys.notificationStatuses);

                notification.status = isWatched && notificationStatuses[notification.id] !== _notification.readStatus ? _notification.unreadStatus : _notification.readStatus;
                notification.network = network;
                notification.version = _version;

              case 31:
                _iteratorNormalCompletion4 = true;
                _context18.next = 19;
                break;

              case 34:
                _context18.next = 40;
                break;

              case 36:
                _context18.prev = 36;
                _context18.t0 = _context18['catch'](17);
                _didIteratorError4 = true;
                _iteratorError4 = _context18.t0;

              case 40:
                _context18.prev = 40;
                _context18.prev = 41;

                if (!_iteratorNormalCompletion4 && _iterator4.return) {
                  _iterator4.return();
                }

              case 43:
                _context18.prev = 43;

                if (!_didIteratorError4) {
                  _context18.next = 46;
                  break;
                }

                throw _iteratorError4;

              case 46:
                return _context18.finish(43);

              case 47:
                return _context18.finish(40);

              case 48:

                notifications = notifications.concat(rawNotifications);

              case 49:
                _iteratorNormalCompletion3 = true;
                _context18.next = 9;
                break;

              case 52:
                _context18.next = 58;
                break;

              case 54:
                _context18.prev = 54;
                _context18.t1 = _context18['catch'](7);
                _didIteratorError3 = true;
                _iteratorError3 = _context18.t1;

              case 58:
                _context18.prev = 58;
                _context18.prev = 59;

                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                  _iterator3.return();
                }

              case 61:
                _context18.prev = 61;

                if (!_didIteratorError3) {
                  _context18.next = 64;
                  break;
                }

                throw _iteratorError3;

              case 64:
                return _context18.finish(61);

              case 65:
                return _context18.finish(58);

              case 66:
                return _context18.abrupt('return', notifications);

              case 67:
              case 'end':
                return _context18.stop();
            }
          }
        }, _callee17, this, [[7, 54, 58, 66], [17, 36, 40, 48], [41,, 43, 47], [59,, 61, 65]]);
      }));

      function getNotifications(_x39) {
        return _ref18.apply(this, arguments);
      }

      return getNotifications;
    }()
  }, {
    key: 'getTokenAddress',
    value: function () {
      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
        return regeneratorRuntime.wrap(function _callee18$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.currentAdapter.getTokenAddress();

              case 2:
                return _context19.abrupt('return', _context19.sent);

              case 3:
              case 'end':
                return _context19.stop();
            }
          }
        }, _callee18, this);
      }));

      function getTokenAddress() {
        return _ref19.apply(this, arguments);
      }

      return getTokenAddress;
    }()
  }, {
    key: 'parseListingId',
    value: function parseListingId(listingId) {
      var _parseListingId8 = (0, _id.parseListingId)(listingId),
          version = _parseListingId8.version,
          network = _parseListingId8.network,
          listingIndex = _parseListingId8.listingIndex;
      // use appropriate adapter for version


      var adapter = this.adapters[version];
      if (!adapter) {
        throw new Error('Adapter not found for version ' + version);
      }
      return { adapter: adapter, listingIndex: listingIndex, version: version, network: network };
    }
  }, {
    key: 'parseOfferId',
    value: function parseOfferId(offerId) {
      var _parseOfferId9 = (0, _id.parseOfferId)(offerId),
          version = _parseOfferId9.version,
          network = _parseOfferId9.network,
          listingIndex = _parseOfferId9.listingIndex,
          offerIndex = _parseOfferId9.offerIndex;
      // use appropriate adapter for version


      var adapter = this.adapters[version];
      if (!adapter) {
        throw new Error('Adapter not found for version ' + version);
      }
      return { adapter: adapter, listingIndex: listingIndex, offerIndex: offerIndex, version: version, network: network };
    }
  }]);

  return MarketplaceResolver;
}();

module.exports = MarketplaceResolver;

/***/ }),

/***/ "./src/contractInterface/marketplace/v00_adapter.js":
/*!**********************************************************!*\
  !*** ./src/contractInterface/marketplace/v00_adapter.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var OFFER_STATUS = ['error', 'created', 'accepted', 'disputed', 'finalized', 'sellerReviewed', 'withdrawn', 'ruling'];
var SUPPORTED_DEPOSIT_CURRENCIES = ['OGN'];
var emptyAddress = '0x0000000000000000000000000000000000000000';

var V00_MarkeplaceAdapter = function () {
  function V00_MarkeplaceAdapter(_ref) {
    var contractService = _ref.contractService,
        blockEpoch = _ref.blockEpoch;

    _classCallCheck(this, V00_MarkeplaceAdapter);

    this.web3 = contractService.web3;
    this.contractService = contractService;
    this.contractName = 'V00_Marketplace';
    this.tokenContractName = 'OriginToken';
    this.blockEpoch = blockEpoch || 0;
  }

  _createClass(V00_MarkeplaceAdapter, [{
    key: 'getContract',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.contract) {
                  _context.next = 4;
                  break;
                }

                _context.next = 3;
                return this.contractService.deployed(this.contractService.contracts[this.contractName]);

              case 3:
                this.contract = _context.sent;

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getContract() {
        return _ref2.apply(this, arguments);
      }

      return getContract;
    }()
  }, {
    key: 'call',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(methodName, args, opts) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.contractService.call(this.contractName, methodName, args, opts);

              case 2:
                return _context2.abrupt('return', _context2.sent);

              case 3:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function call(_x, _x2, _x3) {
        return _ref3.apply(this, arguments);
      }

      return call;
    }()
  }, {
    key: 'getListingsCount',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var total;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.call('totalListings');

              case 2:
                total = _context3.sent;
                return _context3.abrupt('return', Number(total));

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getListingsCount() {
        return _ref4.apply(this, arguments);
      }

      return getListingsCount;
    }()
  }, {
    key: 'createListing',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(ipfsBytes, _ref5, confirmationCallback) {
        var _ref5$deposit = _ref5.deposit,
            deposit = _ref5$deposit === undefined ? '0' : _ref5$deposit,
            arbitrator = _ref5.arbitrator,
            _ref5$commission = _ref5.commission,
            commission = _ref5$commission === undefined ? {} : _ref5$commission;

        var from, amount, currency, _ref7, market_address, selector, call_params, extra_estimated_gas, _ref8, transactionReceipt, timestamp, events, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, e, listingIndex, _ref9, _transactionReceipt, _timestamp, _listingIndex;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.contractService.currentAccount();

              case 2:
                from = _context4.sent;
                amount = commission.amount, currency = commission.currency;

                if (!(currency && !SUPPORTED_DEPOSIT_CURRENCIES.includes(currency))) {
                  _context4.next = 6;
                  break;
                }

                throw currency + ' is not a supported deposit currency';

              case 6:
                if (!(amount > 0)) {
                  _context4.next = 56;
                  break;
                }

                _context4.next = 9;
                return this.contractService.moneyToUnits(commission);

              case 9:
                deposit = _context4.sent;
                _context4.next = 12;
                return this._getTokenAndCallWithSenderParams('createListingWithSender', ipfsBytes, deposit, arbitrator || from);

              case 12:
                _ref7 = _context4.sent;
                market_address = _ref7.market_address;
                selector = _ref7.selector;
                call_params = _ref7.call_params;
                _context4.next = 18;
                return this.contract.methods['createListing'](ipfsBytes, 0, arbitrator || from).estimateGas({ from: from });

              case 18:
                extra_estimated_gas = _context4.sent;
                _context4.next = 21;
                return this.contractService.call(this.tokenContractName, 'approveAndCallWithSender', [market_address, deposit, selector, call_params], { from: from, confirmationCallback: confirmationCallback, additionalGas: extra_estimated_gas });

              case 21:
                _ref8 = _context4.sent;
                transactionReceipt = _ref8.transactionReceipt;
                timestamp = _ref8.timestamp;
                _context4.next = 26;
                return this.contract.getPastEvents('ListingCreated', {
                  fromBlock: transactionReceipt.blockNumber,
                  toBlock: transactionReceipt.blockNumber
                });

              case 26:
                events = _context4.sent;
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context4.prev = 30;
                _iterator = events[Symbol.iterator]();

              case 32:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context4.next = 40;
                  break;
                }

                e = _step.value;

                if (!(e.transactionHash == transactionReceipt.transactionHash)) {
                  _context4.next = 37;
                  break;
                }

                listingIndex = e.returnValues.listingID;
                return _context4.abrupt('return', Object.assign({ timestamp: timestamp, listingIndex: listingIndex }, transactionReceipt));

              case 37:
                _iteratorNormalCompletion = true;
                _context4.next = 32;
                break;

              case 40:
                _context4.next = 46;
                break;

              case 42:
                _context4.prev = 42;
                _context4.t0 = _context4['catch'](30);
                _didIteratorError = true;
                _iteratorError = _context4.t0;

              case 46:
                _context4.prev = 46;
                _context4.prev = 47;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 49:
                _context4.prev = 49;

                if (!_didIteratorError) {
                  _context4.next = 52;
                  break;
                }

                throw _iteratorError;

              case 52:
                return _context4.finish(49);

              case 53:
                return _context4.finish(46);

              case 54:
                _context4.next = 63;
                break;

              case 56:
                _context4.next = 58;
                return this.call('createListing', [ipfsBytes, deposit, arbitrator || from], { from: from, confirmationCallback: confirmationCallback });

              case 58:
                _ref9 = _context4.sent;
                _transactionReceipt = _ref9.transactionReceipt;
                _timestamp = _ref9.timestamp;
                _listingIndex = _transactionReceipt.events['ListingCreated'].returnValues.listingID;
                return _context4.abrupt('return', Object.assign({ timestamp: _timestamp, listingIndex: _listingIndex }, _transactionReceipt));

              case 63:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this, [[30, 42, 46, 54], [47,, 49, 53]]);
      }));

      function createListing(_x4, _x5, _x6) {
        return _ref6.apply(this, arguments);
      }

      return createListing;
    }()
  }, {
    key: 'withdrawListing',
    value: function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(listingId, ipfsBytes, confirmationCallback) {
        var from, _ref11, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.contractService.currentAccount();

              case 2:
                from = _context5.sent;
                _context5.next = 5;
                return this.call('withdrawListing', [listingId, from, ipfsBytes], { from: from, confirmationCallback: confirmationCallback });

              case 5:
                _ref11 = _context5.sent;
                transactionReceipt = _ref11.transactionReceipt;
                timestamp = _ref11.timestamp;
                return _context5.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 9:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function withdrawListing(_x7, _x8, _x9) {
        return _ref10.apply(this, arguments);
      }

      return withdrawListing;
    }()
  }, {
    key: 'makeOffer',
    value: function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(listingId, ipfsBytes, data, confirmationCallback) {
        var affiliate, arbitrator, commission, finalizes, _data$totalPrice, totalPrice, unitsPurchased, price, commissionUnits, currencies, args, opts, _ref13, transactionReceipt, timestamp, offerIndex;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                affiliate = data.affiliate, arbitrator = data.arbitrator, commission = data.commission, finalizes = data.finalizes, _data$totalPrice = data.totalPrice, totalPrice = _data$totalPrice === undefined ? {} : _data$totalPrice, unitsPurchased = data.unitsPurchased;
                // For V1, we only support quantity of 1.

                if (!(unitsPurchased != 1)) {
                  _context6.next = 3;
                  break;
                }

                throw new Error('Attempted to purchase ' + unitsPurchased + ' - only 1 allowed.');

              case 3:
                _context6.next = 5;
                return this.contractService.moneyToUnits(totalPrice);

              case 5:
                price = _context6.sent;
                _context6.next = 8;
                return this.contractService.moneyToUnits(commission);

              case 8:
                commissionUnits = _context6.sent;
                _context6.next = 11;
                return this.contractService.currencies();

              case 11:
                currencies = _context6.sent;
                args = [listingId, ipfsBytes, finalizes || 30 * 24 * 60 * 60, // 30 days from offer acceptance
                affiliate || emptyAddress, commissionUnits, price, currencies[totalPrice.currency].address, arbitrator || emptyAddress];
                opts = { confirmationCallback: confirmationCallback };


                if (totalPrice.currency === 'ETH') {
                  opts.value = price;
                }

                _context6.next = 17;
                return this.call('makeOffer', args, opts);

              case 17:
                _ref13 = _context6.sent;
                transactionReceipt = _ref13.transactionReceipt;
                timestamp = _ref13.timestamp;
                offerIndex = transactionReceipt.events['OfferCreated'].returnValues.offerID;
                return _context6.abrupt('return', Object.assign({ timestamp: timestamp, offerIndex: offerIndex }, transactionReceipt));

              case 22:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function makeOffer(_x10, _x11, _x12, _x13) {
        return _ref12.apply(this, arguments);
      }

      return makeOffer;
    }()
  }, {
    key: 'withdrawOffer',
    value: function () {
      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(listingIndex, offerIndex, ipfsBytes, confirmationCallback) {
        var _ref15, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.call('withdrawOffer', [listingIndex, offerIndex, ipfsBytes], { confirmationCallback: confirmationCallback });

              case 2:
                _ref15 = _context7.sent;
                transactionReceipt = _ref15.transactionReceipt;
                timestamp = _ref15.timestamp;
                return _context7.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 6:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function withdrawOffer(_x14, _x15, _x16, _x17) {
        return _ref14.apply(this, arguments);
      }

      return withdrawOffer;
    }()
  }, {
    key: 'acceptOffer',
    value: function () {
      var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(listingIndex, offerIndex, ipfsBytes, confirmationCallback) {
        var _ref17, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.call('acceptOffer', [listingIndex, offerIndex, ipfsBytes], { confirmationCallback: confirmationCallback });

              case 2:
                _ref17 = _context8.sent;
                transactionReceipt = _ref17.transactionReceipt;
                timestamp = _ref17.timestamp;
                return _context8.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 6:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function acceptOffer(_x18, _x19, _x20, _x21) {
        return _ref16.apply(this, arguments);
      }

      return acceptOffer;
    }()
  }, {
    key: 'finalizeOffer',
    value: function () {
      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(listingIndex, offerIndex, ipfsBytes, confirmationCallback) {
        var _ref19, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.call('finalize', [listingIndex, offerIndex, ipfsBytes], { confirmationCallback: confirmationCallback });

              case 2:
                _ref19 = _context9.sent;
                transactionReceipt = _ref19.transactionReceipt;
                timestamp = _ref19.timestamp;
                return _context9.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 6:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function finalizeOffer(_x22, _x23, _x24, _x25) {
        return _ref18.apply(this, arguments);
      }

      return finalizeOffer;
    }()
  }, {
    key: 'initiateDispute',
    value: function () {
      var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(listingIndex, offerIndex, ipfsBytes, confirmationCallback) {
        var _ref21, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.call('dispute', [listingIndex, offerIndex, ipfsBytes], { confirmationCallback: confirmationCallback });

              case 2:
                _ref21 = _context10.sent;
                transactionReceipt = _ref21.transactionReceipt;
                timestamp = _ref21.timestamp;
                return _context10.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 6:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function initiateDispute(_x26, _x27, _x28, _x29) {
        return _ref20.apply(this, arguments);
      }

      return initiateDispute;
    }()
  }, {
    key: 'resolveDispute',
    value: function () {
      var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(listingIndex, offerIndex, ipfsBytes, ruling, refund, confirmationCallback) {
        var _ref23, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.call('executeRuling', [listingIndex, offerIndex, ipfsBytes, ruling, refund], { confirmationCallback: confirmationCallback });

              case 2:
                _ref23 = _context11.sent;
                transactionReceipt = _ref23.transactionReceipt;
                timestamp = _ref23.timestamp;
                return _context11.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 6:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function resolveDispute(_x30, _x31, _x32, _x33, _x34, _x35) {
        return _ref22.apply(this, arguments);
      }

      return resolveDispute;
    }()
  }, {
    key: 'getListing',
    value: function () {
      var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(listingId) {
        var rawListing, listingTopic, events, status, ipfsHash, offers;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.getContract();

              case 2:
                _context12.next = 4;
                return this.call('listings', [listingId]);

              case 4:
                rawListing = _context12.sent;


                // Find all events related to this listing
                listingTopic = this.padTopic(listingId);
                _context12.next = 8;
                return this.contract.getPastEvents('allEvents', {
                  topics: [null, null, listingTopic],
                  fromBlock: this.blockEpoch
                });

              case 8:
                events = _context12.sent;
                status = 'active';

                // Loop through the events looking and update the IPFS hash and offers appropriately.

                ipfsHash = void 0;
                offers = {};

                events.forEach(function (event) {
                  if (event.event === 'ListingCreated') {
                    ipfsHash = event.returnValues.ipfsHash;
                  } else if (event.event === 'ListingUpdated') {
                    ipfsHash = event.returnValues.ipfsHash;
                  } else if (event.event === 'ListingWithdrawn') {
                    status = 'inactive';
                  } else if (event.event === 'OfferCreated') {
                    offers[event.returnValues.offerID] = { status: 'created', event: event };
                  } else if (event.event === 'OfferAccepted') {
                    offers[event.returnValues.offerID] = { status: 'accepted', event: event };
                  } else if (event.event === 'OfferDisputed') {
                    offers[event.returnValues.offerID] = { status: 'disputed', event: event };
                  } else if (event.event === 'OfferRuling') {
                    offers[event.returnValues.offerID] = { status: 'ruling', event: event };
                  } else if (event.event === 'OfferFinalized') {
                    offers[event.returnValues.offerID] = { status: 'finalized', event: event };
                  } else if (event.event === 'OfferData') {
                    offers[event.returnValues.offerID] = { status: 'sellerReviewed', event: event };
                  }
                });

                if (ipfsHash) {
                  _context12.next = 15;
                  break;
                }

                throw 'ipfsHash not found in events for listing ' + listingId;

              case 15:
                return _context12.abrupt('return', Object.assign({}, rawListing, { ipfsHash: ipfsHash, events: events, offers: offers, status: status }));

              case 16:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function getListing(_x36) {
        return _ref24.apply(this, arguments);
      }

      return getListing;
    }()

    // Logs a listing and its associated events and offers to the browser's JS
    // console. This is meant for live debugging of listings and should not be
    // used from other functions.

  }, {
    key: 'logListing',
    value: function () {
      var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(listingId) {
        var rawListing, filteredListing, listingTopic, events, filterObject, eventIndex, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, event, filteredEvent, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _step4$value, key, value, ipfsService, ipfsHash, ipfsObj;

        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                if (!(!window || !window.originTest)) {
                  _context13.next = 2;
                  break;
                }

                throw new Error('This can only be called from a browser JS console');

              case 2:
                _context13.next = 4;
                return this.getContract();

              case 4:
                _context13.next = 6;
                return this.call('listings', [listingId]);

              case 6:
                rawListing = _context13.sent;
                filteredListing = {
                  seller: rawListing.seller,
                  deposit: rawListing.deposit,
                  depositManager: rawListing.depositManager
                };

                console.log('Listing:');
                console.table(filteredListing);

                // Find all events related to this listing
                listingTopic = this.padTopic(listingId);
                _context13.next = 13;
                return this.contract.getPastEvents('allEvents', {
                  topics: [null, null, listingTopic],
                  fromBlock: this.blockEpoch
                });

              case 13:
                events = _context13.sent;

                console.log('Events:');

                // Objects returned from web3 often have redundant entries with numeric
                // keys, so we filter those out.

                filterObject = function filterObject(obj) {
                  var filteredObj = {};
                  var _iteratorNormalCompletion2 = true;
                  var _didIteratorError2 = false;
                  var _iteratorError2 = undefined;

                  try {
                    for (var _iterator2 = Object.entries(obj)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                      var _step2$value = _slicedToArray(_step2.value, 2),
                          key = _step2$value[0],
                          value = _step2$value[1];

                      if (isNaN(parseInt(key[0], 10))) {
                        filteredObj[key] = value;
                      }
                    }
                  } catch (err) {
                    _didIteratorError2 = true;
                    _iteratorError2 = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                      }
                    } finally {
                      if (_didIteratorError2) {
                        throw _iteratorError2;
                      }
                    }
                  }

                  return filteredObj;
                };

                // Log each event and its corresponding IPFS object, if available.


                eventIndex = 0;
                _iteratorNormalCompletion3 = true;
                _didIteratorError3 = false;
                _iteratorError3 = undefined;
                _context13.prev = 20;
                _iterator3 = events[Symbol.iterator]();

              case 22:
                if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                  _context13.next = 68;
                  break;
                }

                event = _step3.value;
                filteredEvent = Object.assign({ eventIndex: eventIndex, name: event.event }, filterObject(event.returnValues));
                // Only keep keys that don't start with a digit. The filtered keys are
                // redundant.

                _iteratorNormalCompletion4 = true;
                _didIteratorError4 = false;
                _iteratorError4 = undefined;
                _context13.prev = 28;
                for (_iterator4 = Object.entries(event.returnValues)[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                  _step4$value = _slicedToArray(_step4.value, 2), key = _step4$value[0], value = _step4$value[1];

                  if (isNaN(parseInt(key[0], 10))) {
                    filteredEvent[key] = value;
                  }
                }

                // Load the associated IPFS object.
                _context13.next = 36;
                break;

              case 32:
                _context13.prev = 32;
                _context13.t0 = _context13['catch'](28);
                _didIteratorError4 = true;
                _iteratorError4 = _context13.t0;

              case 36:
                _context13.prev = 36;
                _context13.prev = 37;

                if (!_iteratorNormalCompletion4 && _iterator4.return) {
                  _iterator4.return();
                }

              case 39:
                _context13.prev = 39;

                if (!_didIteratorError4) {
                  _context13.next = 42;
                  break;
                }

                throw _iteratorError4;

              case 42:
                return _context13.finish(39);

              case 43:
                return _context13.finish(36);

              case 44:
                ipfsService = window.originTest.marketplace.ipfsService;
                _context13.prev = 45;
                ipfsHash = this.contractService.getIpfsHashFromBytes32(event.returnValues.ipfsHash);

                if (!(ipfsHash && ipfsService)) {
                  _context13.next = 52;
                  break;
                }

                _context13.next = 50;
                return ipfsService.loadObjFromFile(ipfsHash);

              case 50:
                ipfsObj = _context13.sent;

                filteredEvent.ipfsData = ipfsObj;

              case 52:
                _context13.next = 57;
                break;

              case 54:
                _context13.prev = 54;
                _context13.t1 = _context13['catch'](45);

                filteredEvent.ipfsData = 'Could not load from IPFS';

              case 57:
                if (!(filteredEvent.offerID !== undefined)) {
                  _context13.next = 63;
                  break;
                }

                _context13.t2 = filterObject;
                _context13.next = 61;
                return this.call('offers', [listingId, filteredEvent.offerID]);

              case 61:
                _context13.t3 = _context13.sent;
                filteredEvent.offer = (0, _context13.t2)(_context13.t3);

              case 63:

                console.log(filteredEvent);
                eventIndex++;

              case 65:
                _iteratorNormalCompletion3 = true;
                _context13.next = 22;
                break;

              case 68:
                _context13.next = 74;
                break;

              case 70:
                _context13.prev = 70;
                _context13.t4 = _context13['catch'](20);
                _didIteratorError3 = true;
                _iteratorError3 = _context13.t4;

              case 74:
                _context13.prev = 74;
                _context13.prev = 75;

                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                  _iterator3.return();
                }

              case 77:
                _context13.prev = 77;

                if (!_didIteratorError3) {
                  _context13.next = 80;
                  break;
                }

                throw _iteratorError3;

              case 80:
                return _context13.finish(77);

              case 81:
                return _context13.finish(74);

              case 82:
              case 'end':
                return _context13.stop();
            }
          }
        }, _callee13, this, [[20, 70, 74, 82], [28, 32, 36, 44], [37,, 39, 43], [45, 54], [75,, 77, 81]]);
      }));

      function logListing(_x37) {
        return _ref25.apply(this, arguments);
      }

      return logListing;
    }()
  }, {
    key: 'getListings',
    value: function () {
      var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(opts) {
        var events, listingIds, _events, total;

        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.getContract();

              case 2:
                if (!opts.purchasesFor) {
                  _context14.next = 11;
                  break;
                }

                _context14.next = 5;
                return this.contract.getPastEvents('OfferCreated', {
                  filter: { party: opts.purchasesFor },
                  fromBlock: this.blockEpoch
                });

              case 5:
                events = _context14.sent;
                listingIds = [];

                events.forEach(function (e) {
                  var listingId = Number(e.returnValues.listingID);
                  if (listingIds.indexOf(listingId) < 0) {
                    listingIds.push(listingId);
                  }
                });
                return _context14.abrupt('return', listingIds);

              case 11:
                if (!opts.listingsFor) {
                  _context14.next = 18;
                  break;
                }

                _context14.next = 14;
                return this.contract.getPastEvents('ListingCreated', {
                  filter: { party: opts.listingsFor },
                  fromBlock: this.blockEpoch
                });

              case 14:
                _events = _context14.sent;
                return _context14.abrupt('return', _events.map(function (e) {
                  return Number(e.returnValues.listingID);
                }));

              case 18:
                _context14.next = 20;
                return this.call('totalListings');

              case 20:
                total = _context14.sent;
                return _context14.abrupt('return', [].concat(_toConsumableArray(Array(Number(total)).keys())));

              case 22:
              case 'end':
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function getListings(_x38) {
        return _ref26.apply(this, arguments);
      }

      return getListings;
    }()
  }, {
    key: 'getOffers',
    value: function () {
      var _ref27 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(listingIndex, opts) {
        var filter, events;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.getContract();

              case 2:
                filter = {};

                if (listingIndex) {
                  filter = Object.assign(filter, { listingID: listingIndex });
                }
                if (opts.for) {
                  filter = Object.assign(filter, { party: opts.for });
                }
                _context15.next = 7;
                return this.contract.getPastEvents('OfferCreated', {
                  filter: filter,
                  fromBlock: this.blockEpoch
                });

              case 7:
                events = _context15.sent;
                return _context15.abrupt('return', events.map(function (e) {
                  return Number(e.returnValues.offerID);
                }));

              case 9:
              case 'end':
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function getOffers(_x39, _x40) {
        return _ref27.apply(this, arguments);
      }

      return getOffers;
    }()
  }, {
    key: 'getOffer',
    value: function () {
      var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(listingIndex, offerIndex) {
        var rawOffer, listingTopic, offerTopic, events, buyer, ipfsHash, createdAt, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, e, timestamp;

        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return this.getContract();

              case 2:
                _context16.next = 4;
                return this.call('offers', [listingIndex, offerIndex]);

              case 4:
                rawOffer = _context16.sent;


                // Find all events related to this offer
                listingTopic = this.padTopic(listingIndex);
                offerTopic = this.padTopic(offerIndex);
                _context16.next = 9;
                return this.contract.getPastEvents('allEvents', {
                  topics: [null, null, listingTopic, offerTopic],
                  fromBlock: this.blockEpoch
                });

              case 9:
                events = _context16.sent;


                // Scan through the events to retrieve information of interest.
                buyer = void 0, ipfsHash = void 0, createdAt = void 0;
                _iteratorNormalCompletion5 = true;
                _didIteratorError5 = false;
                _iteratorError5 = undefined;
                _context16.prev = 14;
                _iterator5 = events[Symbol.iterator]();

              case 16:
                if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {
                  _context16.next = 41;
                  break;
                }

                e = _step5.value;
                _context16.next = 20;
                return this.contractService.getTimestamp(e);

              case 20:
                timestamp = _context16.sent;

                e.timestamp = timestamp;

                _context16.t0 = e.event;
                _context16.next = _context16.t0 === 'OfferCreated' ? 25 : _context16.t0 === 'OfferFinalized' ? 29 : _context16.t0 === 'OfferData' ? 31 : _context16.t0 === 'OfferWithdrawn' ? 33 : _context16.t0 === 'OfferRuling' ? 35 : 37;
                break;

              case 25:
                buyer = e.returnValues.party;
                ipfsHash = e.returnValues.ipfsHash;
                createdAt = timestamp;
                return _context16.abrupt('break', 37);

              case 29:
                rawOffer.status = 4;
                return _context16.abrupt('break', 37);

              case 31:
                rawOffer.status = 5;
                return _context16.abrupt('break', 37);

              case 33:
                rawOffer.status = 6;
                return _context16.abrupt('break', 37);

              case 35:
                rawOffer.status = 7;
                return _context16.abrupt('break', 37);

              case 37:

                e.timestamp = timestamp;

              case 38:
                _iteratorNormalCompletion5 = true;
                _context16.next = 16;
                break;

              case 41:
                _context16.next = 47;
                break;

              case 43:
                _context16.prev = 43;
                _context16.t1 = _context16['catch'](14);
                _didIteratorError5 = true;
                _iteratorError5 = _context16.t1;

              case 47:
                _context16.prev = 47;
                _context16.prev = 48;

                if (!_iteratorNormalCompletion5 && _iterator5.return) {
                  _iterator5.return();
                }

              case 50:
                _context16.prev = 50;

                if (!_didIteratorError5) {
                  _context16.next = 53;
                  break;
                }

                throw _iteratorError5;

              case 53:
                return _context16.finish(50);

              case 54:
                return _context16.finish(47);

              case 55:

                // Translate status number to string
                rawOffer.status = OFFER_STATUS[rawOffer.status];

                // Return the raw listing along with events and IPFS hash
                return _context16.abrupt('return', Object.assign({}, rawOffer, { buyer: buyer, ipfsHash: ipfsHash, events: events, createdAt: createdAt }));

              case 57:
              case 'end':
                return _context16.stop();
            }
          }
        }, _callee16, this, [[14, 43, 47, 55], [48,, 50, 54]]);
      }));

      function getOffer(_x41, _x42) {
        return _ref28.apply(this, arguments);
      }

      return getOffer;
    }()
  }, {
    key: 'addData',
    value: function () {
      var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(ipfsBytes, listingIndex, offerIndex, confirmationCallback) {
        var _ref30, transactionReceipt, timestamp;

        return regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _context17.next = 2;
                return this.call('addData', [listingIndex, offerIndex, ipfsBytes], { confirmationCallback: confirmationCallback });

              case 2:
                _ref30 = _context17.sent;
                transactionReceipt = _ref30.transactionReceipt;
                timestamp = _ref30.timestamp;
                return _context17.abrupt('return', Object.assign({ timestamp: timestamp }, transactionReceipt));

              case 6:
              case 'end':
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function addData(_x43, _x44, _x45, _x46) {
        return _ref29.apply(this, arguments);
      }

      return addData;
    }()
  }, {
    key: 'getNotifications',
    value: function () {
      var _ref31 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(party) {
        var notifications, partyListingIds, partyOfferIds, events, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, event, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, listingId, listing, offerId, offer, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, _step8$value, _listingId, _offerId, _listing, _offer;

        return regeneratorRuntime.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return this.getContract();

              case 2:
                notifications = [];
                partyListingIds = [];
                partyOfferIds = [];
                _context18.next = 7;
                return this.contract.getPastEvents('allEvents', {
                  topics: [null, this.padTopic(party)],
                  fromBlock: this.blockEpoch
                });

              case 7:
                events = _context18.sent;
                _iteratorNormalCompletion6 = true;
                _didIteratorError6 = false;
                _iteratorError6 = undefined;
                _context18.prev = 11;


                for (_iterator6 = events[Symbol.iterator](); !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
                  event = _step6.value;

                  if (event.event === 'ListingCreated') {
                    partyListingIds.push(event.returnValues.listingID);
                  }
                  if (event.event === 'OfferCreated') {
                    partyOfferIds.push([event.returnValues.listingID, event.returnValues.offerID]);
                  }
                }

                // Find pending offers and pending reviews
                _context18.next = 19;
                break;

              case 15:
                _context18.prev = 15;
                _context18.t0 = _context18['catch'](11);
                _didIteratorError6 = true;
                _iteratorError6 = _context18.t0;

              case 19:
                _context18.prev = 19;
                _context18.prev = 20;

                if (!_iteratorNormalCompletion6 && _iterator6.return) {
                  _iterator6.return();
                }

              case 22:
                _context18.prev = 22;

                if (!_didIteratorError6) {
                  _context18.next = 25;
                  break;
                }

                throw _iteratorError6;

              case 25:
                return _context18.finish(22);

              case 26:
                return _context18.finish(19);

              case 27:
                _iteratorNormalCompletion7 = true;
                _didIteratorError7 = false;
                _iteratorError7 = undefined;
                _context18.prev = 30;
                _iterator7 = partyListingIds[Symbol.iterator]();

              case 32:
                if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {
                  _context18.next = 41;
                  break;
                }

                listingId = _step7.value;
                _context18.next = 36;
                return this.getListing(listingId);

              case 36:
                listing = _context18.sent;

                for (offerId in listing.offers) {
                  offer = listing.offers[offerId];

                  if (offer.status === 'created') {
                    notifications.push({
                      event: offer.event,
                      type: 'seller_listing_purchased',
                      resources: { listingId: listingId, offerId: offerId }
                    });
                  }
                  if (offer.status === 'finalized') {
                    notifications.push({
                      event: offer.event,
                      type: 'seller_review_received',
                      resources: { listingId: listingId, offerId: offerId }
                    });
                  }
                }

              case 38:
                _iteratorNormalCompletion7 = true;
                _context18.next = 32;
                break;

              case 41:
                _context18.next = 47;
                break;

              case 43:
                _context18.prev = 43;
                _context18.t1 = _context18['catch'](30);
                _didIteratorError7 = true;
                _iteratorError7 = _context18.t1;

              case 47:
                _context18.prev = 47;
                _context18.prev = 48;

                if (!_iteratorNormalCompletion7 && _iterator7.return) {
                  _iterator7.return();
                }

              case 50:
                _context18.prev = 50;

                if (!_didIteratorError7) {
                  _context18.next = 53;
                  break;
                }

                throw _iteratorError7;

              case 53:
                return _context18.finish(50);

              case 54:
                return _context18.finish(47);

              case 55:
                // Find pending offers and pending reviews
                _iteratorNormalCompletion8 = true;
                _didIteratorError8 = false;
                _iteratorError8 = undefined;
                _context18.prev = 58;
                _iterator8 = partyOfferIds[Symbol.iterator]();

              case 60:
                if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {
                  _context18.next = 70;
                  break;
                }

                _step8$value = _slicedToArray(_step8.value, 2), _listingId = _step8$value[0], _offerId = _step8$value[1];
                _context18.next = 64;
                return this.getListing(_listingId);

              case 64:
                _listing = _context18.sent;
                _offer = _listing.offers[_offerId];

                if (_offer.status === 'accepted') {
                  notifications.push({
                    event: _offer.event,
                    type: 'buyer_listing_shipped',
                    resources: { listingId: _listingId, offerId: _offerId }
                  });
                }

              case 67:
                _iteratorNormalCompletion8 = true;
                _context18.next = 60;
                break;

              case 70:
                _context18.next = 76;
                break;

              case 72:
                _context18.prev = 72;
                _context18.t2 = _context18['catch'](58);
                _didIteratorError8 = true;
                _iteratorError8 = _context18.t2;

              case 76:
                _context18.prev = 76;
                _context18.prev = 77;

                if (!_iteratorNormalCompletion8 && _iterator8.return) {
                  _iterator8.return();
                }

              case 79:
                _context18.prev = 79;

                if (!_didIteratorError8) {
                  _context18.next = 82;
                  break;
                }

                throw _iteratorError8;

              case 82:
                return _context18.finish(79);

              case 83:
                return _context18.finish(76);

              case 84:
                return _context18.abrupt('return', notifications);

              case 85:
              case 'end':
                return _context18.stop();
            }
          }
        }, _callee18, this, [[11, 15, 19, 27], [20,, 22, 26], [30, 43, 47, 55], [48,, 50, 54], [58, 72, 76, 84], [77,, 79, 83]]);
      }));

      function getNotifications(_x47) {
        return _ref31.apply(this, arguments);
      }

      return getNotifications;
    }()
  }, {
    key: 'getTokenAddress',
    value: function () {
      var _ref32 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
        return regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.getContract();

              case 2:
                _context19.next = 4;
                return this.contract.methods.tokenAddr().call();

              case 4:
                return _context19.abrupt('return', _context19.sent);

              case 5:
              case 'end':
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function getTokenAddress() {
        return _ref32.apply(this, arguments);
      }

      return getTokenAddress;
    }()
  }, {
    key: 'padTopic',
    value: function padTopic(id) {
      return this.web3.utils.padLeft(this.web3.utils.numberToHex(id), 64);
    }
  }, {
    key: '_getTokenAndCallWithSenderParams',
    value: function () {
      var _ref33 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(call_name) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, call, market_address, input_types, call_params, selector;

        return regeneratorRuntime.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.next = 2;
                return this.getContract();

              case 2:
                _iteratorNormalCompletion9 = true;
                _didIteratorError9 = false;
                _iteratorError9 = undefined;
                _context20.prev = 5;
                _iterator9 = this.contract.options.jsonInterface[Symbol.iterator]();

              case 7:
                if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {
                  _context20.next = 20;
                  break;
                }

                call = _step9.value;

                if (!(call.name === call_name && call.type === 'function' && call.signature)) {
                  _context20.next = 17;
                  break;
                }

                market_address = this.contract.options.address;
                // take out the first parameter which is hopefully the seller address

                input_types = call.inputs.slice(1).map(function (e) {
                  return e.type;
                });

                if (!(input_types.length != args.length)) {
                  _context20.next = 14;
                  break;
                }

                throw 'The number of parameters passed does not match the contract parameters';

              case 14:
                call_params = this.web3.eth.abi.encodeParameters(input_types, args);
                selector = call.signature;
                return _context20.abrupt('return', { market_address: market_address, selector: selector, call_params: call_params });

              case 17:
                _iteratorNormalCompletion9 = true;
                _context20.next = 7;
                break;

              case 20:
                _context20.next = 26;
                break;

              case 22:
                _context20.prev = 22;
                _context20.t0 = _context20['catch'](5);
                _didIteratorError9 = true;
                _iteratorError9 = _context20.t0;

              case 26:
                _context20.prev = 26;
                _context20.prev = 27;

                if (!_iteratorNormalCompletion9 && _iterator9.return) {
                  _iterator9.return();
                }

              case 29:
                _context20.prev = 29;

                if (!_didIteratorError9) {
                  _context20.next = 32;
                  break;
                }

                throw _iteratorError9;

              case 32:
                return _context20.finish(29);

              case 33:
                return _context20.finish(26);

              case 34:
                throw 'Invalid Marketplace contract for getting create parameters';

              case 35:
              case 'end':
                return _context20.stop();
            }
          }
        }, _callee20, this, [[5, 22, 26, 34], [27,, 29, 33]]);
      }));

      function _getTokenAndCallWithSenderParams(_x48) {
        return _ref33.apply(this, arguments);
      }

      return _getTokenAndCallWithSenderParams;
    }()
  }]);

  return V00_MarkeplaceAdapter;
}();

exports.default = V00_MarkeplaceAdapter;

/***/ }),

/***/ "./src/contractInterface/users/resolver.js":
/*!*************************************************!*\
  !*** ./src/contractInterface/users/resolver.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _v00_adapter = __webpack_require__(/*! ./v00_adapter */ "./src/contractInterface/users/v00_adapter.js");

var _v00_adapter2 = _interopRequireDefault(_v00_adapter);

var _user = __webpack_require__(/*! ../../models/user */ "./src/models/user.js");

var _user2 = _interopRequireDefault(_user);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var UsersResolver = function () {
  function UsersResolver(_ref) {
    var contractService = _ref.contractService,
        ipfsService = _ref.ipfsService,
        blockEpoch = _ref.blockEpoch;

    _classCallCheck(this, UsersResolver);

    this.adapters = {
      '000': new _v00_adapter2.default({ contractService: contractService, ipfsService: ipfsService, blockEpoch: blockEpoch })
    };
    this.versions = ['000'];
    this.currentVersion = this.versions[this.versions.length - 1];
    this.currentAdapter = this.adapters[this.currentVersion];
  }

  _createClass(UsersResolver, [{
    key: 'set',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {
        var profile = _ref2.profile,
            _ref2$attestations = _ref2.attestations,
            attestations = _ref2$attestations === undefined ? [] : _ref2$attestations,
            _ref2$options = _ref2.options,
            options = _ref2$options === undefined ? {} : _ref2$options;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this.currentAdapter.set({ profile: profile, attestations: attestations, options: options }));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function set(_x) {
        return _ref3.apply(this, arguments);
      }

      return set;
    }()
  }, {
    key: 'get',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(address) {
        var result, i, version;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                result = false;
                i = this.versions.length - 1;

              case 2:
                if (!(i >= 0)) {
                  _context2.next = 11;
                  break;
                }

                if (result) {
                  _context2.next = 8;
                  break;
                }

                version = this.versions[i];
                _context2.next = 7;
                return this.adapters[version].get(address);

              case 7:
                result = _context2.sent;

              case 8:
                i--;
                _context2.next = 2;
                break;

              case 11:
                if (!result) {
                  _context2.next = 15;
                  break;
                }

                return _context2.abrupt('return', new _user2.default(result));

              case 15:
                return _context2.abrupt('return', new _user2.default({ address: address }));

              case 16:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x2) {
        return _ref4.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: 'identityAddress',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(wallet) {
        var result, i, version;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                result = false;
                i = this.versions.length - 1;

              case 2:
                if (!(i >= 0)) {
                  _context3.next = 11;
                  break;
                }

                if (result) {
                  _context3.next = 8;
                  break;
                }

                version = this.versions[i];
                _context3.next = 7;
                return this.adapters[version].identityAddress(wallet);

              case 7:
                result = _context3.sent;

              case 8:
                i--;
                _context3.next = 2;
                break;

              case 11:
                return _context3.abrupt('return', result);

              case 12:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function identityAddress(_x3) {
        return _ref5.apply(this, arguments);
      }

      return identityAddress;
    }()
  }]);

  return UsersResolver;
}();

module.exports = UsersResolver;

/***/ }),

/***/ "./src/contractInterface/users/v00_adapter.js":
/*!****************************************************!*\
  !*** ./src/contractInterface/users/v00_adapter.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _attestation = __webpack_require__(/*! ../../models/attestation */ "./src/models/attestation.js");

var _attestation2 = _interopRequireDefault(_attestation);

var _ethereumjsUtil = __webpack_require__(/*! ethereumjs-util */ "ethereumjs-util");

var _web = __webpack_require__(/*! web3 */ "web3");

var _web2 = _interopRequireDefault(_web);

var _store = __webpack_require__(/*! ../../ipfsInterface/store */ "./src/ipfsInterface/store.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var selfAttestationTopic = 13; // TODO: use the correct number here
var emptyAddress = '0x0000000000000000000000000000000000000000';

var V00_UsersAdapter = function () {
  function V00_UsersAdapter(_ref) {
    var contractService = _ref.contractService,
        ipfsService = _ref.ipfsService,
        blockEpoch = _ref.blockEpoch;

    _classCallCheck(this, V00_UsersAdapter);

    this.contractService = contractService;
    this.ipfsDataStore = new _store.IpfsDataStore(ipfsService);
    this.web3EthAccounts = this.contractService.web3.eth.accounts;
    this.contractName = 'V00_UserRegistry';
    this.blockEpoch = blockEpoch || 0;
  }

  _createClass(V00_UsersAdapter, [{
    key: 'set',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {
        var profile = _ref2.profile,
            _ref2$attestations = _ref2.attestations,
            attestations = _ref2$attestations === undefined ? [] : _ref2$attestations,
            _ref2$options = _ref2.options,
            options = _ref2$options === undefined ? {} : _ref2$options;
        var selfAttestation, newAttestations;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!profile) {
                  _context.next = 5;
                  break;
                }

                _context.next = 3;
                return this.profileAttestation(profile);

              case 3:
                selfAttestation = _context.sent;

                attestations.push(selfAttestation);

              case 5:
                _context.next = 7;
                return this.newAttestations(attestations);

              case 7:
                newAttestations = _context.sent;
                _context.next = 10;
                return this.addAttestations(newAttestations, options);

              case 10:
                return _context.abrupt('return', _context.sent);

              case 11:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function set(_x) {
        return _ref3.apply(this, arguments);
      }

      return set;
    }()
  }, {
    key: 'get',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(address) {
        var identityAddress, userData;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.identityAddress(address);

              case 2:
                identityAddress = _context2.sent;

                if (!identityAddress) {
                  _context2.next = 8;
                  break;
                }

                _context2.next = 6;
                return this.getClaims(identityAddress);

              case 6:
                userData = _context2.sent;
                return _context2.abrupt('return', Object.assign({}, userData, { address: address, identityAddress: identityAddress }));

              case 8:
                return _context2.abrupt('return', false);

              case 9:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x2) {
        return _ref4.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: 'identityAddress',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(address) {
        var account, userRegistry, result;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.contractService.currentAccount();

              case 2:
                account = _context3.sent;
                _context3.next = 5;
                return this.contractService.deployed(this.contractService.contracts[this.contractName]);

              case 5:
                userRegistry = _context3.sent;

                address = address || account;
                _context3.next = 9;
                return userRegistry.methods.users(address).call();

              case 9:
                result = _context3.sent;

                if (!(String(result) === emptyAddress)) {
                  _context3.next = 14;
                  break;
                }

                return _context3.abrupt('return', false);

              case 14:
                return _context3.abrupt('return', result);

              case 15:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function identityAddress(_x3) {
        return _ref5.apply(this, arguments);
      }

      return identityAddress;
    }()
  }, {
    key: 'profileAttestation',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(profile) {
        var ipfsHash, asBytes32;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.ipfsDataStore.save(_store.PROFILE_DATA_TYPE, profile);

              case 2:
                ipfsHash = _context4.sent;
                asBytes32 = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                // For now we'll ignore issuer & signature for self attestations
                // If it's a self-attestation, then no validation is necessary
                // A signature would be an extra UI step, so we don't want to add it if not necessary

                return _context4.abrupt('return', new _attestation2.default({
                  topic: selfAttestationTopic,
                  data: asBytes32,
                  issuer: emptyAddress,
                  signature: '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                }));

              case 5:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function profileAttestation(_x4) {
        return _ref6.apply(this, arguments);
      }

      return profileAttestation;
    }()
  }, {
    key: 'newAttestations',
    value: function () {
      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(attestations) {
        var identityAddress, existingAttestations, claims;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.identityAddress();

              case 2:
                identityAddress = _context5.sent;
                existingAttestations = [];

                if (!identityAddress) {
                  _context5.next = 9;
                  break;
                }

                _context5.next = 7;
                return this.getClaims(identityAddress);

              case 7:
                claims = _context5.sent;

                existingAttestations = claims.attestations;

              case 9:
                return _context5.abrupt('return', attestations.filter(function (attestation) {
                  var matchingAttestation = existingAttestations.filter(function (existingAttestation) {
                    var topicMatches = attestation.topic === existingAttestation.topic;
                    var dataMatches = attestation.data === existingAttestation.data;
                    var sigMatches = attestation.signature === existingAttestation.signature;
                    return topicMatches && dataMatches && sigMatches;
                  });
                  var isNew = matchingAttestation.length === 0;
                  return isNew;
                }));

              case 10:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function newAttestations(_x5) {
        return _ref7.apply(this, arguments);
      }

      return newAttestations;
    }()
  }, {
    key: 'addAttestations',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(attestations, options) {
        var account, userRegistry, identityAddress, topics, issuers, sigs, data, dataOffsets, gas, _gas;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.contractService.currentAccount();

              case 2:
                account = _context6.sent;
                _context6.next = 5;
                return this.contractService.deployed(this.contractService.contracts[this.contractName]);

              case 5:
                userRegistry = _context6.sent;
                _context6.next = 8;
                return this.identityAddress();

              case 8:
                identityAddress = _context6.sent;

                if (!attestations.length) {
                  _context6.next = 28;
                  break;
                }

                // format params for solidity methods to batch add claims
                topics = attestations.map(function (_ref9) {
                  var topic = _ref9.topic;
                  return topic;
                });
                issuers = attestations.map(function (_ref10) {
                  var issuer = _ref10.issuer;
                  return issuer || emptyAddress;
                });
                sigs = '0x' + attestations.map(function (_ref11) {
                  var signature = _ref11.signature;

                  return signature.substr(2);
                }).join('');
                data = '0x' + attestations.map(function (_ref12) {
                  var data = _ref12.data;

                  return data.substr(2);
                }).join('');
                dataOffsets = attestations.map(function () {
                  return 32;
                }); // all data hashes will be 32 bytes

                if (!identityAddress) {
                  _context6.next = 22;
                  break;
                }

                // batch add claims to existing identity
                gas = 170000 + attestations.length * 230000;
                _context6.next = 19;
                return this.contractService.call('ClaimHolderRegistered', 'addClaims', [topics, issuers, sigs, data, dataOffsets], _extends({}, options, { from: account, gas: gas, contractAddress: identityAddress }));

              case 19:
                return _context6.abrupt('return', _context6.sent);

              case 22:
                // create identity with presigned claims
                _gas = 1500000 + attestations.length * 230000;
                _context6.next = 25;
                return this.contractService.deploy(this.contractService.contracts.ClaimHolderPresigned, [userRegistry.options.address, topics, issuers, sigs, data, dataOffsets], { from: account, gas: _gas }, options);

              case 25:
                return _context6.abrupt('return', _context6.sent);

              case 26:
                _context6.next = 32;
                break;

              case 28:
                if (identityAddress) {
                  _context6.next = 32;
                  break;
                }

                _context6.next = 31;
                return this.contractService.deploy(this.contractService.contracts.ClaimHolderRegistered, [userRegistry.options.address], { from: account, gas: 1700000 });

              case 31:
                return _context6.abrupt('return', _context6.sent);

              case 32:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function addAttestations(_x6, _x7) {
        return _ref8.apply(this, arguments);
      }

      return addAttestations;
    }()
  }, {
    key: 'getClaims',
    value: function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(identityAddress) {
        var identity, claimAddedEvents, mapped, profileClaims, nonProfileClaims, profile, bytes32, ipfsHash, validAttestations, attestations;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.contractService.deployed(this.contractService.contracts.ClaimHolderRegistered, identityAddress);

              case 2:
                identity = _context7.sent;
                _context7.next = 5;
                return identity.getPastEvents('ClaimAdded', {
                  fromBlock: this.blockEpoch
                });

              case 5:
                claimAddedEvents = _context7.sent;
                mapped = claimAddedEvents.map(function (_ref14) {
                  var returnValues = _ref14.returnValues;

                  return {
                    claimId: returnValues.claimId,
                    topic: Number(returnValues.topic),
                    data: returnValues.data,
                    issuer: returnValues.issuer,
                    scheme: Number(returnValues.scheme),
                    signature: returnValues.signature,
                    uri: returnValues.uri
                  };
                });
                profileClaims = mapped.filter(function (_ref15) {
                  var topic = _ref15.topic;
                  return topic === selfAttestationTopic;
                });
                nonProfileClaims = mapped.filter(function (_ref16) {
                  var topic = _ref16.topic;
                  return topic !== selfAttestationTopic;
                });
                profile = {};

                if (!profileClaims.length) {
                  _context7.next = 16;
                  break;
                }

                bytes32 = profileClaims[profileClaims.length - 1].data;
                ipfsHash = this.contractService.getIpfsHashFromBytes32(bytes32);
                _context7.next = 15;
                return this.ipfsDataStore.load(_store.PROFILE_DATA_TYPE, ipfsHash);

              case 15:
                profile = _context7.sent;

              case 16:
                _context7.next = 18;
                return this.validAttestations(identityAddress, nonProfileClaims);

              case 18:
                validAttestations = _context7.sent;
                attestations = validAttestations.map(function (att) {
                  return new _attestation2.default(att);
                });
                return _context7.abrupt('return', { profile: profile, attestations: attestations });

              case 21:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function getClaims(_x8) {
        return _ref13.apply(this, arguments);
      }

      return getClaims;
    }()
  }, {
    key: 'isValidAttestation',
    value: function () {
      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref17, identityAddress) {
        var topic = _ref17.topic,
            data = _ref17.data,
            signature = _ref17.signature;
        var originIdentity, msg, prefixedMsg, dataBuf, sig, recovered, recoveredBuf, recoveredHex, hashedRecovered;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.prev = 0;
                _context8.next = 3;
                return this.contractService.deployed(this.contractService.contracts.OriginIdentity);

              case 3:
                originIdentity = _context8.sent;
                msg = _web2.default.utils.soliditySha3(identityAddress, topic, data);
                prefixedMsg = this.web3EthAccounts.hashMessage(msg);
                dataBuf = (0, _ethereumjsUtil.toBuffer)(prefixedMsg);
                sig = (0, _ethereumjsUtil.fromRpcSig)(signature);
                recovered = (0, _ethereumjsUtil.ecrecover)(dataBuf, sig.v, sig.r, sig.s);
                recoveredBuf = (0, _ethereumjsUtil.pubToAddress)(recovered);
                recoveredHex = (0, _ethereumjsUtil.bufferToHex)(recoveredBuf);
                hashedRecovered = _web2.default.utils.soliditySha3(recoveredHex);
                _context8.next = 14;
                return originIdentity.methods.keyHasPurpose(hashedRecovered, 3).call();

              case 14:
                return _context8.abrupt('return', _context8.sent);

              case 17:
                _context8.prev = 17;
                _context8.t0 = _context8['catch'](0);

                // validation should simply fail if there is an error
                console.error('Error during attestation validation:', _context8.t0);
                return _context8.abrupt('return', false);

              case 21:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this, [[0, 17]]);
      }));

      function isValidAttestation(_x9, _x10) {
        return _ref18.apply(this, arguments);
      }

      return isValidAttestation;
    }()
  }, {
    key: 'validAttestations',
    value: function () {
      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(identityAddress, attestations) {
        var _this = this;

        var promiseWithValidation, withValidation, filtered;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                promiseWithValidation = attestations.map(function () {
                  var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(attestation) {
                    var isValid;
                    return regeneratorRuntime.wrap(function _callee9$(_context9) {
                      while (1) {
                        switch (_context9.prev = _context9.next) {
                          case 0:
                            _context9.next = 2;
                            return _this.isValidAttestation(attestation, identityAddress);

                          case 2:
                            isValid = _context9.sent;
                            return _context9.abrupt('return', { isValid: isValid, attestation: attestation });

                          case 4:
                          case 'end':
                            return _context9.stop();
                        }
                      }
                    }, _callee9, _this);
                  }));

                  return function (_x13) {
                    return _ref20.apply(this, arguments);
                  };
                }());
                _context10.next = 3;
                return Promise.all(promiseWithValidation);

              case 3:
                withValidation = _context10.sent;
                filtered = withValidation.filter(function (_ref21) {
                  var isValid = _ref21.isValid;
                  return isValid;
                });
                return _context10.abrupt('return', filtered.map(function (_ref22) {
                  var attestation = _ref22.attestation;
                  return attestation;
                }));

              case 6:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function validAttestations(_x11, _x12) {
        return _ref19.apply(this, arguments);
      }

      return validAttestations;
    }()
  }]);

  return V00_UsersAdapter;
}();

module.exports = V00_UsersAdapter;

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _contractService = __webpack_require__(/*! ./services/contract-service */ "./src/services/contract-service.js");

var _contractService2 = _interopRequireDefault(_contractService);

var _ipfsService = __webpack_require__(/*! ./services/ipfs-service */ "./src/services/ipfs-service.js");

var _ipfsService2 = _interopRequireDefault(_ipfsService);

var _attestations = __webpack_require__(/*! ./resources/attestations */ "./src/resources/attestations.js");

var _marketplace = __webpack_require__(/*! ./resources/marketplace */ "./src/resources/marketplace.js");

var _marketplace2 = _interopRequireDefault(_marketplace);

var _discovery = __webpack_require__(/*! ./resources/discovery */ "./src/resources/discovery.js");

var _discovery2 = _interopRequireDefault(_discovery);

var _users = __webpack_require__(/*! ./resources/users */ "./src/resources/users.js");

var _users2 = _interopRequireDefault(_users);

var _messaging = __webpack_require__(/*! ./resources/messaging */ "./src/resources/messaging.js");

var _messaging2 = _interopRequireDefault(_messaging);

var _token = __webpack_require__(/*! ./resources/token */ "./src/resources/token.js");

var _token2 = _interopRequireDefault(_token);

var _crossFetch = __webpack_require__(/*! cross-fetch */ "cross-fetch");

var _crossFetch2 = _interopRequireDefault(_crossFetch);

var _store = __webpack_require__(/*! store */ "store");

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var defaultBridgeServer = 'https://bridge.originprotocol.com';
var defaultIpfsDomain = 'gateway.originprotocol.com';
var defaultDiscoveryServerUrl = 'https://discovery.originprotocol.com';
var defaultIpfsApiPort = '5002';
var defaultIpfsGatewayPort = '443';
var defaultIpfsGatewayProtocol = 'https';
var defaultAttestationServerUrl = defaultBridgeServer + '/api/attestations';
var VERSION = __webpack_require__(/*! .././package.json */ "./package.json").version;

var Origin = function Origin() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$ipfsDomain = _ref.ipfsDomain,
      ipfsDomain = _ref$ipfsDomain === undefined ? defaultIpfsDomain : _ref$ipfsDomain,
      _ref$ipfsApiPort = _ref.ipfsApiPort,
      ipfsApiPort = _ref$ipfsApiPort === undefined ? defaultIpfsApiPort : _ref$ipfsApiPort,
      _ref$ipfsGatewayPort = _ref.ipfsGatewayPort,
      ipfsGatewayPort = _ref$ipfsGatewayPort === undefined ? defaultIpfsGatewayPort : _ref$ipfsGatewayPort,
      _ref$ipfsGatewayProto = _ref.ipfsGatewayProtocol,
      ipfsGatewayProtocol = _ref$ipfsGatewayProto === undefined ? defaultIpfsGatewayProtocol : _ref$ipfsGatewayProto,
      _ref$attestationServe = _ref.attestationServerUrl,
      attestationServerUrl = _ref$attestationServe === undefined ? defaultAttestationServerUrl : _ref$attestationServe,
      _ref$discoveryServerU = _ref.discoveryServerUrl,
      discoveryServerUrl = _ref$discoveryServerU === undefined ? defaultDiscoveryServerUrl : _ref$discoveryServerU,
      affiliate = _ref.affiliate,
      arbitrator = _ref.arbitrator,
      contractAddresses = _ref.contractAddresses,
      web3 = _ref.web3,
      ipfsCreator = _ref.ipfsCreator,
      OrbitDB = _ref.OrbitDB,
      ecies = _ref.ecies,
      messagingNamespace = _ref.messagingNamespace,
      blockEpoch = _ref.blockEpoch;

  _classCallCheck(this, Origin);

  this.version = VERSION;

  this.contractService = new _contractService2.default({ contractAddresses: contractAddresses, web3: web3 });
  this.ipfsService = new _ipfsService2.default({
    ipfsDomain: ipfsDomain,
    ipfsApiPort: ipfsApiPort,
    ipfsGatewayPort: ipfsGatewayPort,
    ipfsGatewayProtocol: ipfsGatewayProtocol
  });

  this.attestations = new _attestations.Attestations({
    serverUrl: attestationServerUrl,
    contractService: this.contractService,
    fetch: _crossFetch2.default,
    blockEpoch: blockEpoch
  });

  this.marketplace = new _marketplace2.default({
    contractService: this.contractService,
    ipfsService: this.ipfsService,
    affiliate: affiliate,
    arbitrator: arbitrator,
    store: _store2.default,
    blockEpoch: blockEpoch
  });

  this.discovery = new _discovery2.default({
    discoveryServerUrl: discoveryServerUrl,
    fetch: _crossFetch2.default
  });

  this.users = new _users2.default({
    contractService: this.contractService,
    ipfsService: this.ipfsService,
    blockEpoch: blockEpoch
  });

  this.messaging = new _messaging2.default({
    contractService: this.contractService,
    ipfsCreator: ipfsCreator,
    OrbitDB: OrbitDB,
    ecies: ecies,
    messagingNamespace: messagingNamespace
  });

  this.token = new _token2.default({
    contractService: this.contractService,
    ipfsService: this.ipfsService,
    marketplace: this.marketplace
  });
};

module.exports = Origin;

/***/ }),

/***/ "./src/ipfsInterface/adapters/adapter-base.js":
/*!****************************************************!*\
  !*** ./src/ipfsInterface/adapters/adapter-base.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ajv = __webpack_require__(/*! ajv */ "ajv");

var _ajv2 = _interopRequireDefault(_ajv);

var _listing = __webpack_require__(/*! ../schemas/listing.json */ "./src/ipfsInterface/schemas/listing.json");

var _listing2 = _interopRequireDefault(_listing);

var _listingWithdraw = __webpack_require__(/*! ../schemas/listing-withdraw.json */ "./src/ipfsInterface/schemas/listing-withdraw.json");

var _listingWithdraw2 = _interopRequireDefault(_listingWithdraw);

var _offer = __webpack_require__(/*! ../schemas/offer.json */ "./src/ipfsInterface/schemas/offer.json");

var _offer2 = _interopRequireDefault(_offer);

var _offerWithdraw = __webpack_require__(/*! ../schemas/offer-withdraw.json */ "./src/ipfsInterface/schemas/offer-withdraw.json");

var _offerWithdraw2 = _interopRequireDefault(_offerWithdraw);

var _offerAccept = __webpack_require__(/*! ../schemas/offer-accept.json */ "./src/ipfsInterface/schemas/offer-accept.json");

var _offerAccept2 = _interopRequireDefault(_offerAccept);

var _dispute = __webpack_require__(/*! ../schemas/dispute.json */ "./src/ipfsInterface/schemas/dispute.json");

var _dispute2 = _interopRequireDefault(_dispute);

var _resolution = __webpack_require__(/*! ../schemas/resolution.json */ "./src/ipfsInterface/schemas/resolution.json");

var _resolution2 = _interopRequireDefault(_resolution);

var _profile = __webpack_require__(/*! ../schemas/profile.json */ "./src/ipfsInterface/schemas/profile.json");

var _profile2 = _interopRequireDefault(_profile);

var _review = __webpack_require__(/*! ../schemas/review.json */ "./src/ipfsInterface/schemas/review.json");

var _review2 = _interopRequireDefault(_review);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ajv = new _ajv2.default({ allErrors: true });
// To use the draft-06 JSON schema, we need to explicitly add it to ajv.
ajv.addMetaSchema(__webpack_require__(/*! ajv/lib/refs/json-schema-draft-06.json */ "ajv/lib/refs/json-schema-draft-06.json"));
ajv.addSchema([_listing2.default, _listingWithdraw2.default, _offer2.default, _offerWithdraw2.default, _offerAccept2.default, _dispute2.default, _resolution2.default, _profile2.default, _review2.default]);

var AdapterBase = function () {
  function AdapterBase(schemaId) {
    _classCallCheck(this, AdapterBase);

    this.schemaId = schemaId;
  }

  /**
   * Validates the data is compliant with Origin Protocol schema.
   * @throws {Error} If validation fails.
   */


  _createClass(AdapterBase, [{
    key: 'validate',
    value: function validate(data) {
      if (data.schemaId !== this.schemaId) {
        throw new Error('Unexpected schema version: ' + data.schemaId + ' != ' + this.schemaId);
      }

      var validator = ajv.getSchema(this.schemaId);
      if (!validator) {
        throw new Error('Failed loading schema validator for ' + this.schemaId);
      }
      if (!validator(data)) {
        throw new Error('Data failed schema validation.\n        Schema id: ' + this.schemaId + '\n        Data: ' + JSON.stringify(data) + '.\n        Errors: ' + JSON.stringify(validator.errors));
      }
    }

    /**
     * Encodes data before storage.
     * This default encode method assumes data is already in proper format and just validates it.
     * @param data
     * @return {object} - Data to be written in storage.
     */

  }, {
    key: 'encode',
    value: function encode(data) {
      this.validate(data);
      return data;
    }

    /**
     * Decodes data coming from storage.
     * In most cases derived class should override this default implementation which
     * validates the data against the schema and returns it without any alteration.
     * @param ipfsData
     */

  }, {
    key: 'decode',
    value: function decode(ipfsData) {
      this.validate(ipfsData);
      return Object.assign({}, ipfsData);
    }
  }]);

  return AdapterBase;
}();

exports.default = AdapterBase;

/***/ }),

/***/ "./src/ipfsInterface/adapters/adapter-factory.js":
/*!*******************************************************!*\
  !*** ./src/ipfsInterface/adapters/adapter-factory.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = adapterFactory;

var _v1DisputeAdapter = __webpack_require__(/*! ./dispute/v1-dispute-adapter */ "./src/ipfsInterface/adapters/dispute/v1-dispute-adapter.js");

var _v1DisputeAdapter2 = _interopRequireDefault(_v1DisputeAdapter);

var _v1ListingAdapter = __webpack_require__(/*! ./listing/v1-listing-adapter */ "./src/ipfsInterface/adapters/listing/v1-listing-adapter.js");

var _v1ListingAdapter2 = _interopRequireDefault(_v1ListingAdapter);

var _v1ListingWithdrawAdapter = __webpack_require__(/*! ./listing-withdraw/v1-listing-withdraw-adapter */ "./src/ipfsInterface/adapters/listing-withdraw/v1-listing-withdraw-adapter.js");

var _v1ListingWithdrawAdapter2 = _interopRequireDefault(_v1ListingWithdrawAdapter);

var _v1OfferAdapter = __webpack_require__(/*! ./offer/v1-offer-adapter */ "./src/ipfsInterface/adapters/offer/v1-offer-adapter.js");

var _v1OfferAdapter2 = _interopRequireDefault(_v1OfferAdapter);

var _v1OfferAcceptAdapter = __webpack_require__(/*! ./offer-accept/v1-offer-accept-adapter */ "./src/ipfsInterface/adapters/offer-accept/v1-offer-accept-adapter.js");

var _v1OfferAcceptAdapter2 = _interopRequireDefault(_v1OfferAcceptAdapter);

var _v1OfferWithdrawAdapter = __webpack_require__(/*! ./offer-withdraw/v1-offer-withdraw-adapter */ "./src/ipfsInterface/adapters/offer-withdraw/v1-offer-withdraw-adapter.js");

var _v1OfferWithdrawAdapter2 = _interopRequireDefault(_v1OfferWithdrawAdapter);

var _v1ProfileAdapter = __webpack_require__(/*! ./profile/v1-profile-adapter */ "./src/ipfsInterface/adapters/profile/v1-profile-adapter.js");

var _v1ProfileAdapter2 = _interopRequireDefault(_v1ProfileAdapter);

var _v1ResolutionAdapter = __webpack_require__(/*! ./resolution/v1-resolution-adapter */ "./src/ipfsInterface/adapters/resolution/v1-resolution-adapter.js");

var _v1ResolutionAdapter2 = _interopRequireDefault(_v1ResolutionAdapter);

var _v1ReviewAdapter = __webpack_require__(/*! ./review/v1-review-adapter */ "./src/ipfsInterface/adapters/review/v1-review-adapter.js");

var _v1ReviewAdapter2 = _interopRequireDefault(_v1ReviewAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var adapterConfig = {
  'listing': {
    '1.0.0': _v1ListingAdapter2.default
  },
  'listing-withdraw': {
    '1.0.0': _v1ListingWithdrawAdapter2.default
  },
  'offer': {
    '1.0.0': _v1OfferAdapter2.default
  },
  'offer-withdraw': {
    '1.0.0': _v1OfferWithdrawAdapter2.default
  },
  'offer-accept': {
    '1.0.0': _v1OfferAcceptAdapter2.default
  },
  'dispute': {
    '1.0.0': _v1DisputeAdapter2.default
  },
  'resolution': {
    '1.0.0': _v1ResolutionAdapter2.default
  },
  'profile': {
    '1.0.0': _v1ProfileAdapter2.default
  },
  'review': {
    '1.0.0': _v1ReviewAdapter2.default
  }

  /**
   * Returns an adapter based on a data type and version.
   * @param {string} schemaId - Unique ID of the schema to use.
   * @param {string} dataType - 'listing', 'offer', 'review', etc...
   * @param {string} schemaVersion - version of the schema to use.
   * @returns {SchemaAdapter}
   * @throws {Error}
   */
};function adapterFactory(schemaId, dataType, schemaVersion) {
  if (!adapterConfig[dataType]) {
    throw new Error('Unsupported data type: ' + dataType);
  }
  if (!adapterConfig[dataType][schemaVersion]) {
    throw new Error('Unsupported schema version ' + schemaVersion + ' for data type ' + dataType);
  }
  var adapter = adapterConfig[dataType][schemaVersion];
  return new adapter(schemaId);
}

/***/ }),

/***/ "./src/ipfsInterface/adapters/dispute/v1-dispute-adapter.js":
/*!******************************************************************!*\
  !*** ./src/ipfsInterface/adapters/dispute/v1-dispute-adapter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DisputeAdapterV1 = function (_AdapterBase) {
  _inherits(DisputeAdapterV1, _AdapterBase);

  function DisputeAdapterV1() {
    _classCallCheck(this, DisputeAdapterV1);

    return _possibleConstructorReturn(this, (DisputeAdapterV1.__proto__ || Object.getPrototypeOf(DisputeAdapterV1)).apply(this, arguments));
  }

  return DisputeAdapterV1;
}(_adapterBase2.default);

exports.default = DisputeAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/listing-withdraw/v1-listing-withdraw-adapter.js":
/*!************************************************************************************!*\
  !*** ./src/ipfsInterface/adapters/listing-withdraw/v1-listing-withdraw-adapter.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListingWithdrawAdapterV1 = function (_AdapterBase) {
  _inherits(ListingWithdrawAdapterV1, _AdapterBase);

  function ListingWithdrawAdapterV1() {
    _classCallCheck(this, ListingWithdrawAdapterV1);

    return _possibleConstructorReturn(this, (ListingWithdrawAdapterV1.__proto__ || Object.getPrototypeOf(ListingWithdrawAdapterV1)).apply(this, arguments));
  }

  return ListingWithdrawAdapterV1;
}(_adapterBase2.default);

exports.default = ListingWithdrawAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/listing/v1-listing-adapter.js":
/*!******************************************************************!*\
  !*** ./src/ipfsInterface/adapters/listing/v1-listing-adapter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

var _money = __webpack_require__(/*! ../../../models/money */ "./src/models/money.js");

var _money2 = _interopRequireDefault(_money);

var _urlParse = __webpack_require__(/*! url-parse */ "url-parse");

var _urlParse2 = _interopRequireDefault(_urlParse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListingAdapterV1 = function (_AdapterBase) {
  _inherits(ListingAdapterV1, _AdapterBase);

  function ListingAdapterV1() {
    _classCallCheck(this, ListingAdapterV1);

    return _possibleConstructorReturn(this, (ListingAdapterV1.__proto__ || Object.getPrototypeOf(ListingAdapterV1)).apply(this, arguments));
  }

  _createClass(ListingAdapterV1, [{
    key: 'postProcessor',

    /**
     * Rewrites IPFS media URLs to point to the configured IPFS gateway.
     * Applied after loading data from storage and decoding it.
     */
    value: function postProcessor(listing, ipfsService) {
      if (!listing.media) {
        return;
      }
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = listing.media[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var medium = _step.value;

          medium.url = ipfsService.rewriteUrl(medium.url);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }

    /**
     * Uploads to IPFS content passed in as data URL.
     * Applied before encoding data and writing it to storage.
     */

  }, {
    key: 'preProcessor',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(listing, ipfsService) {
        var _this2 = this;

        var uploads;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (listing.media) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt('return');

              case 2:

                // Only allow data:, dweb:, and ipfs: URLs
                listing.media = listing.media.filter(function (medium) {
                  if (medium.url) {
                    try {
                      return ['data:', 'dweb:', 'ipfs:'].includes(new _urlParse2.default(medium.url).protocol);
                    } catch (error) {
                      // Invalid URL, filter it out
                      return false;
                    }
                  } else {
                    // No url. Invalid entry.
                    return false;
                  }
                });

                // Upload any data URL content to IPFS.
                uploads = listing.media.map(function () {
                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(medium) {
                    var ipfsHash;
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            if (!medium.url.startsWith('data:')) {
                              _context.next = 5;
                              break;
                            }

                            _context.next = 3;
                            return ipfsService.saveDataURIAsFile(medium.url);

                          case 3:
                            ipfsHash = _context.sent;

                            medium.url = 'ipfs://' + ipfsHash;

                          case 5:
                          case 'end':
                            return _context.stop();
                        }
                      }
                    }, _callee, _this2);
                  }));

                  return function (_x3) {
                    return _ref2.apply(this, arguments);
                  };
                }());
                return _context2.abrupt('return', Promise.all(uploads));

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function preProcessor(_x, _x2) {
        return _ref.apply(this, arguments);
      }

      return preProcessor;
    }()

    /**
     * Populates an IpfsListing object based on listing data encoded with V1 schema.
     * @param {object} ipfsData - Listing data read from IPFS.
     * @returns {object} - Listing data.
     * @throws {Error}
     */

  }, {
    key: 'decode',
    value: function decode(ipfsData) {
      // Validate the data coming out of storage.
      this.validate(ipfsData);

      var listing = {
        schemaId: ipfsData.schemaId,
        type: ipfsData.listingType,
        category: ipfsData.category,
        subCategory: ipfsData.subCategory,
        language: ipfsData.language,
        title: ipfsData.title,
        description: ipfsData.description,
        media: ipfsData.media,
        expiry: ipfsData.expiry

        // Unit data.
      };if (listing.type === 'unit') {
        listing.unitsTotal = ipfsData.unitsTotal;
        listing.price = new _money2.default(ipfsData.price);
        listing.commission = ipfsData.commission ? new _money2.default(ipfsData.commission) : null;
      } else if (listing.type === 'fractional') {
        // TODO(franck): fill this in.
      } else {
        throw new Error('Unexpected listing type: ' + listing.type);
      }

      return listing;
    }
  }]);

  return ListingAdapterV1;
}(_adapterBase2.default);

exports.default = ListingAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/offer-accept/v1-offer-accept-adapter.js":
/*!****************************************************************************!*\
  !*** ./src/ipfsInterface/adapters/offer-accept/v1-offer-accept-adapter.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OfferAcceptAdapterV1 = function (_AdapterBase) {
  _inherits(OfferAcceptAdapterV1, _AdapterBase);

  function OfferAcceptAdapterV1() {
    _classCallCheck(this, OfferAcceptAdapterV1);

    return _possibleConstructorReturn(this, (OfferAcceptAdapterV1.__proto__ || Object.getPrototypeOf(OfferAcceptAdapterV1)).apply(this, arguments));
  }

  return OfferAcceptAdapterV1;
}(_adapterBase2.default);

exports.default = OfferAcceptAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/offer-withdraw/v1-offer-withdraw-adapter.js":
/*!********************************************************************************!*\
  !*** ./src/ipfsInterface/adapters/offer-withdraw/v1-offer-withdraw-adapter.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OfferWithdrawAdapterV1 = function (_AdapterBase) {
  _inherits(OfferWithdrawAdapterV1, _AdapterBase);

  function OfferWithdrawAdapterV1() {
    _classCallCheck(this, OfferWithdrawAdapterV1);

    return _possibleConstructorReturn(this, (OfferWithdrawAdapterV1.__proto__ || Object.getPrototypeOf(OfferWithdrawAdapterV1)).apply(this, arguments));
  }

  return OfferWithdrawAdapterV1;
}(_adapterBase2.default);

exports.default = OfferWithdrawAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/offer/v1-offer-adapter.js":
/*!**************************************************************!*\
  !*** ./src/ipfsInterface/adapters/offer/v1-offer-adapter.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

var _money = __webpack_require__(/*! ../../../models/money */ "./src/models/money.js");

var _money2 = _interopRequireDefault(_money);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OfferAdapterV1 = function (_AdapterBase) {
  _inherits(OfferAdapterV1, _AdapterBase);

  function OfferAdapterV1() {
    _classCallCheck(this, OfferAdapterV1);

    return _possibleConstructorReturn(this, (OfferAdapterV1.__proto__ || Object.getPrototypeOf(OfferAdapterV1)).apply(this, arguments));
  }

  _createClass(OfferAdapterV1, [{
    key: 'decode',

    /**
     * Populates an IpfsOffer object based on offer data encoded using V1 schema.
     * @param {object} data - Listing data, expected to use schema V1.
     * @returns {object} - Offer data
     * @throws {Error} In case data validation fails.
     */
    value: function decode(ipfsData) {
      // Validate the data coming out of storage.
      this.validate(ipfsData);

      var offer = {
        schemaId: ipfsData.schemaId,
        listingType: ipfsData.listingType

        // Unit data.
      };if (offer.listingType === 'unit') {
        offer.unitsPurchased = ipfsData.unitsPurchased;
        offer.totalPrice = new _money2.default(ipfsData.totalPrice);
      } else if (offer.listingType === 'fractional') {
        // TODO(franck): fill this in.
      } else {
        throw new Error('Unexpected listing type: ' + offer.listingType);
      }

      return offer;
    }
  }]);

  return OfferAdapterV1;
}(_adapterBase2.default);

exports.default = OfferAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/profile/v1-profile-adapter.js":
/*!******************************************************************!*\
  !*** ./src/ipfsInterface/adapters/profile/v1-profile-adapter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProfileAdapterV1 = function (_AdapterBase) {
  _inherits(ProfileAdapterV1, _AdapterBase);

  function ProfileAdapterV1() {
    _classCallCheck(this, ProfileAdapterV1);

    return _possibleConstructorReturn(this, (ProfileAdapterV1.__proto__ || Object.getPrototypeOf(ProfileAdapterV1)).apply(this, arguments));
  }

  return ProfileAdapterV1;
}(_adapterBase2.default);

exports.default = ProfileAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/resolution/v1-resolution-adapter.js":
/*!************************************************************************!*\
  !*** ./src/ipfsInterface/adapters/resolution/v1-resolution-adapter.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ResolutionAdapterV1 = function (_AdapterBase) {
  _inherits(ResolutionAdapterV1, _AdapterBase);

  function ResolutionAdapterV1() {
    _classCallCheck(this, ResolutionAdapterV1);

    return _possibleConstructorReturn(this, (ResolutionAdapterV1.__proto__ || Object.getPrototypeOf(ResolutionAdapterV1)).apply(this, arguments));
  }

  return ResolutionAdapterV1;
}(_adapterBase2.default);

exports.default = ResolutionAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/adapters/review/v1-review-adapter.js":
/*!****************************************************************!*\
  !*** ./src/ipfsInterface/adapters/review/v1-review-adapter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adapterBase = __webpack_require__(/*! ../adapter-base */ "./src/ipfsInterface/adapters/adapter-base.js");

var _adapterBase2 = _interopRequireDefault(_adapterBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReviewAdapterV1 = function (_AdapterBase) {
  _inherits(ReviewAdapterV1, _AdapterBase);

  function ReviewAdapterV1() {
    _classCallCheck(this, ReviewAdapterV1);

    return _possibleConstructorReturn(this, (ReviewAdapterV1.__proto__ || Object.getPrototypeOf(ReviewAdapterV1)).apply(this, arguments));
  }

  return ReviewAdapterV1;
}(_adapterBase2.default);

exports.default = ReviewAdapterV1;

/***/ }),

/***/ "./src/ipfsInterface/schemas/dispute.json":
/*!************************************************!*\
  !*** ./src/ipfsInterface/schemas/dispute.json ***!
  \************************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/dispute_v1.0.0","title":"Origin Protocol offer dispute schema","type":"object","properties":{"schemaId":{"type":"string"}},"required":["schemaId"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/listing-withdraw.json":
/*!*********************************************************!*\
  !*** ./src/ipfsInterface/schemas/listing-withdraw.json ***!
  \*********************************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/listing-withdraw_v1.0.0","title":"Origin Protocol listing withdrawal schema","type":"object","properties":{"schemaId":{"type":"string"}},"required":["schemaId"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/listing.json":
/*!************************************************!*\
  !*** ./src/ipfsInterface/schemas/listing.json ***!
  \************************************************/
/*! exports provided: $schema, $id, title, definitions, type, properties, listingType, oneOf, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/listing_v1.0.0","title":"Origin Protocol core listing schema","definitions":{"money":{"type":"object","title":"An amount of money in a specified currency","properties":{"currency":{"type":"string"},"amount":{"type":"string"}},"required":["currency","amount"]},"media":{"type":"object","title":"Representation of a media asset such as an image or a video","properties":{"url":{"type":"string"},"contentType":{"type":"string"},"description":{"type":"string"},"dimension":{"type":"object","properties":{"height":{"type":"integer"},"width":{"type":"integer"}},"required":["height","width"]}},"required":["url"]},"timeSlot":{"type":"object","required":["startDate","endDate","isAvailable","price"],"properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"isAvailable":{"type":"boolean"},"price":{"$ref":"#/definitions/money"}}},"unitListing":{"type":"object","properties":{"unitsTotal":{"type":"integer"},"price":{"$ref":"#/definitions/money"}},"required":["unitsTotal","price"]},"fractionalListing":{"type":"object","properties":{"timeIncrement":{"type":"string"},"calendarStep":{"type":"string"},"slots":{"type":"array","items":{"$ref":"#/definitions/timeSlot"}}},"required":["calendarStep","slots"]}},"type":"object","properties":{"schemaId":{"type":"string"},"category":{"type":"string"},"subCategory":{"type":"string"},"language":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"expiry":{"type":"string","format":"date-time"},"media":{"type":"array","items":{"$ref":"#/definitions/media"}},"commission":{"$ref":"#/definitions/money"}},"listingType":{"enum":["unit","fractional"]},"oneOf":[{"$ref":"#/definitions/unitListing"},{"$ref":"#/definitions/fractionalListing"}],"required":["schemaId","listingType","category","subCategory","language","title","description"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/offer-accept.json":
/*!*****************************************************!*\
  !*** ./src/ipfsInterface/schemas/offer-accept.json ***!
  \*****************************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/offer-accept_v1.0.0","title":"Origin Protocol offer acceptance schema","type":"object","properties":{"schemaId":{"type":"string"}},"required":["schemaId"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/offer-withdraw.json":
/*!*******************************************************!*\
  !*** ./src/ipfsInterface/schemas/offer-withdraw.json ***!
  \*******************************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/offer-withdraw_v1.0.0","title":"Origin Protocol offer withdrawal schema","type":"object","properties":{"schemaId":{"type":"string"}},"required":["schemaId"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/offer.json":
/*!**********************************************!*\
  !*** ./src/ipfsInterface/schemas/offer.json ***!
  \**********************************************/
/*! exports provided: $schema, $id, title, definitions, type, properties, oneOf, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/offer_v1.0.0","title":"Origin Protocol offer schema","definitions":{"money":{"type":"object","title":"An amount of money in a specified currency","properties":{"currency":{"type":"string"},"amount":{"type":"string"}},"required":["currency","amount"]},"timeSlot":{"type":"object","required":["startDate","endDate"],"properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"}}},"unitOffer":{"type":"object","properties":{"unitsPurchased":{"type":"integer"}},"required":["unitsPurchased"]},"fractionalOffer":{"type":"object","properties":{"slots":{"type":"array","items":{"$ref":"#/definitions/timeSlot"}}},"required":["slots"]}},"type":"object","properties":{"schemaId":{"type":"string"},"listingType":{"enum":["unit","fractional"]},"totalPrice":{"$ref":"#/definitions/money"},"commission":{"$ref":"#/definitions/money"}},"oneOf":[{"$ref":"#/definitions/unitOffer"},{"$ref":"#/definitions/fractionalOffer"}],"required":["schemaId","listingType","totalPrice","commission"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/profile.json":
/*!************************************************!*\
  !*** ./src/ipfsInterface/schemas/profile.json ***!
  \************************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/profile_v1.0.0","title":"Origin Protocol user profile schema","type":"object","properties":{"schemaId":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"description":{"type":"string"},"avatar":{"type":"string"}},"required":["schemaId","firstName","lastName"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/resolution.json":
/*!***************************************************!*\
  !*** ./src/ipfsInterface/schemas/resolution.json ***!
  \***************************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/resolution_v1.0.0","title":"Origin Protocol offer resolution schema","type":"object","properties":{"schemaId":{"type":"string"}},"required":["schemaId"]};

/***/ }),

/***/ "./src/ipfsInterface/schemas/review.json":
/*!***********************************************!*\
  !*** ./src/ipfsInterface/schemas/review.json ***!
  \***********************************************/
/*! exports provided: $schema, $id, title, type, properties, required, default */
/***/ (function(module) {

module.exports = {"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://schema.originprotocol.com/review_v1.0.0","title":"Origin Protocol review schema","type":"object","properties":{"schemaId":{"type":"string"},"rating":{"type":"number"},"text":{"type":"string"}},"required":["schemaId","rating","text"]};

/***/ }),

/***/ "./src/ipfsInterface/store.js":
/*!************************************!*\
  !*** ./src/ipfsInterface/store.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IpfsDataStore = exports.BASE_SCHEMA_ID = exports.REVIEW_DATA_TYPE = exports.PROFILE_DATA_TYPE = exports.RESOLUTION_DATA_TYPE = exports.DISPUTE_DATA_TYPE = exports.OFFER_ACCEPT_DATA_TYPE = exports.OFFER_WITHDRAW_DATA_TYPE = exports.OFFER_DATA_TYPE = exports.LISTING_WITHDRAW_DATA_TYPE = exports.LISTING_DATA_TYPE = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _adapterFactory = __webpack_require__(/*! ./adapters/adapter-factory */ "./src/ipfsInterface/adapters/adapter-factory.js");

var _adapterFactory2 = _interopRequireDefault(_adapterFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LISTING_DATA_TYPE = exports.LISTING_DATA_TYPE = 'listing';
var LISTING_WITHDRAW_DATA_TYPE = exports.LISTING_WITHDRAW_DATA_TYPE = 'listing-withdraw';
var OFFER_DATA_TYPE = exports.OFFER_DATA_TYPE = 'offer';
var OFFER_WITHDRAW_DATA_TYPE = exports.OFFER_WITHDRAW_DATA_TYPE = 'offer-withdraw';
var OFFER_ACCEPT_DATA_TYPE = exports.OFFER_ACCEPT_DATA_TYPE = 'offer-accept';
var DISPUTE_DATA_TYPE = exports.DISPUTE_DATA_TYPE = 'dispute';
var RESOLUTION_DATA_TYPE = exports.RESOLUTION_DATA_TYPE = 'resolution';
var PROFILE_DATA_TYPE = exports.PROFILE_DATA_TYPE = 'profile';
var REVIEW_DATA_TYPE = exports.REVIEW_DATA_TYPE = 'review';

var DATA_TYPES = [LISTING_DATA_TYPE, LISTING_WITHDRAW_DATA_TYPE, OFFER_DATA_TYPE, OFFER_WITHDRAW_DATA_TYPE, OFFER_ACCEPT_DATA_TYPE, DISPUTE_DATA_TYPE, RESOLUTION_DATA_TYPE, REVIEW_DATA_TYPE, PROFILE_DATA_TYPE];

var BASE_SCHEMA_ID = exports.BASE_SCHEMA_ID = 'http://schema.originprotocol.com/';

//
// JSON data store backed by IPFS.
//

var IpfsDataStore = exports.IpfsDataStore = function () {
  /**
   *
   * @param {IpfsService} ipfsService - IPFS service to use.
   */
  function IpfsDataStore(ipfsService) {
    _classCallCheck(this, IpfsDataStore);

    this.ipfsService = ipfsService;
  }

  /**
   * Formats of a schema ID is BASE_SCHEMA_ID/<dataType>_v<version>
   * Ex.: http://schema.originprotocol.com/listing_v1.0.0
   * @param (string} schemaId
   * @return {{dataType: string, schemaVersion: string}}
   */


  _createClass(IpfsDataStore, [{
    key: 'load',


    /**
     * Loads and validates data from IPFS.
     * @param {string} expectedDataType - Type of object to load.
     * @param {bytes} ipfsHash - Base58 encoded IPFS hash.
     * @returns {object} data
     * @throws {Error}
     */
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(expectedDataType, ipfsHash) {
        var ipfsData, _IpfsDataStore$parseS, dataType, schemaVersion, adapter, data;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (DATA_TYPES.includes(expectedDataType)) {
                  _context.next = 2;
                  break;
                }

                throw new Error('Unsupported data type: ${dataType}');

              case 2:
                _context.next = 4;
                return this.ipfsService.loadObjFromFile(ipfsHash);

              case 4:
                ipfsData = _context.sent;

                if (ipfsData.schemaId) {
                  _context.next = 7;
                  break;
                }

                throw new Error('Data missing schemaId: ' + JSON.stringify(ipfsData));

              case 7:
                _IpfsDataStore$parseS = IpfsDataStore.parseSchemaId(ipfsData.schemaId), dataType = _IpfsDataStore$parseS.dataType, schemaVersion = _IpfsDataStore$parseS.schemaVersion;

                if (!(dataType !== expectedDataType)) {
                  _context.next = 10;
                  break;
                }

                throw new Error('Expected ' + expectedDataType + ' vs ' + dataType + ' for IPFS Hash ' + ipfsHash);

              case 10:

                // Get an adapter to handle the data.
                adapter = (0, _adapterFactory2.default)(ipfsData.schemaId, dataType, schemaVersion);

                // Decode and validate the data.

                data = adapter.decode(ipfsData);

                // Apply any post-processing after loading data.

                if (adapter.postProcessor) adapter.postProcessor(data, this.ipfsService);

                // Add the IPFS hash and raw data to the object.
                data.ipfs = {
                  hash: ipfsHash,
                  data: ipfsData
                };

                return _context.abrupt('return', data);

              case 15:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function load(_x, _x2) {
        return _ref.apply(this, arguments);
      }

      return load;
    }()

    /**
     * Validates and saves data to IPFS.
     * @param {string} dataType - Type of object to store.
     * @param {object} data - Object compliant with Origin Protocol schema.
     * @returns {bytes} Base58 encoded IPFS Hash.
     * @throws {Error}
     */

  }, {
    key: 'save',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dataType, data) {
        var _IpfsDataStore$genera, schemaId, schemaVersion, adapter, ipfsData, ipfsHash;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (DATA_TYPES.includes(dataType)) {
                  _context2.next = 2;
                  break;
                }

                throw new Error('Unsupported data type: ${dataType}');

              case 2:

                // Get latest version of the schemaID to use for the data type.
                // Set that schemaID in the data.
                _IpfsDataStore$genera = IpfsDataStore.generateSchemaId(dataType), schemaId = _IpfsDataStore$genera.schemaId, schemaVersion = _IpfsDataStore$genera.schemaVersion;

                data.schemaId = schemaId;

                // Get an adapter to handle the data.
                adapter = (0, _adapterFactory2.default)(schemaId, dataType, schemaVersion);

                // Apply any pre-processing before storing data.

                if (!adapter.preProcessor) {
                  _context2.next = 8;
                  break;
                }

                _context2.next = 8;
                return adapter.preProcessor(data, this.ipfsService);

              case 8:

                // Validate and encode the input data.
                ipfsData = adapter.encode(data);

                // Write data to storage.

                _context2.next = 11;
                return this.ipfsService.saveObjAsFile(ipfsData);

              case 11:
                ipfsHash = _context2.sent;
                return _context2.abrupt('return', ipfsHash);

              case 13:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function save(_x3, _x4) {
        return _ref2.apply(this, arguments);
      }

      return save;
    }()
  }], [{
    key: 'parseSchemaId',
    value: function parseSchemaId(schemaId) {
      var str = schemaId.replace(BASE_SCHEMA_ID, '');
      var splits = str.split('_v');
      if (splits.length != 2) {
        throw new Error('Invalid schemaId: ' + schemaId);
      }
      return { dataType: splits[0], schemaVersion: splits[1] };
    }

    /**
     * Returns the most recent schemaId for a specific data type.
     * @param {string} dataType
     * @return {object} - Tuple schemaId, schemaVersion.
     */

  }, {
    key: 'generateSchemaId',
    value: function generateSchemaId(dataType) {
      // TODO: should lookup in a config to get most recent version to use.
      var schemaVersion = '1.0.0';
      var schemaId = '' + BASE_SCHEMA_ID + dataType + '_v' + schemaVersion;
      return { schemaId: schemaId, schemaVersion: schemaVersion };
    }
  }]);

  return IpfsDataStore;
}();

/***/ }),

/***/ "./src/models/attestation.js":
/*!***********************************!*\
  !*** ./src/models/attestation.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var topicMapping = {
  3: 'facebook',
  4: 'twitter',
  5: 'airbnb',
  10: 'phone',
  11: 'email'
};

var Attestation = function Attestation(_ref) {
  var topic = _ref.topic,
      data = _ref.data,
      signature = _ref.signature;

  _classCallCheck(this, Attestation);

  topic = Number(topic);
  this.topic = topic;
  this.service = topicMapping[topic];
  this.data = data;
  this.signature = signature;
};

exports.default = Attestation;

/***/ }),

/***/ "./src/models/listing.js":
/*!*******************************!*\
  !*** ./src/models/listing.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//
// Listing is the main object exposed by Origin Protocol to access listing data.
//
var Listing = exports.Listing = function () {
  /**
   * A Listing is constructed based on its on-chain and off-chain data.
   * @param {string} listingId - Unique listing ID.
   * @param {Object} chainListing - Listing data from the blockchain.
   * @param {Object} ipfsListing - Listing data from IPFS.
   */
  function Listing(listingId, chainListing, ipfsListing) {
    _classCallCheck(this, Listing);

    this.id = listingId;
    // FIXME(franck): Exposing directly the chain data will make it difficult
    // to support backward compatibility of the Listing interface in the future. We should
    // select and possibly abstract what data from the chain gets exposed.
    Object.assign(this, ipfsListing, chainListing);
  }

  _createClass(Listing, [{
    key: 'unitsSold',
    get: function get() {
      var _this = this;

      // Lazy caching.
      if (this._unitsSold !== undefined) {
        return this._unitsSold;
      }
      this._unitsSold = Object.keys(this.offers).reduce(function (acc, offerId) {
        if (_this.offers[offerId].status === 'created') {
          return acc + 1;
        }
        // TODO: we need to subtract 1 for every offer that is canceled
        return acc;
      }, 0);
      return this._unitsSold;
    }
  }, {
    key: 'unitsRemaining',
    get: function get() {
      // Should never be negative.
      return Math.max(this.unitsTotal - this.unitsSold, 0);
    }
  }]);

  return Listing;
}();

/***/ }),

/***/ "./src/models/money.js":
/*!*****************************!*\
  !*** ./src/models/money.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Helper class for handling money.
 * TODO(franck):
 *   1. Use BigNumber for handling amounts
 *   2. Implement operations such as mutiply, add, etc...
 */
var Money = function Money(_ref) {
  var amount = _ref.amount,
      currency = _ref.currency;

  _classCallCheck(this, Money);

  this.currency = currency;
  this.amount = String(amount);
};

exports.default = Money;

/***/ }),

/***/ "./src/models/notification.js":
/*!************************************!*\
  !*** ./src/models/notification.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var unreadStatus = 'unread';
var readStatus = 'read';
var notificationStatuses = [unreadStatus, readStatus];

var storeKeys = {
  notificationSubscriptionStart: 'notification_subscription_start',
  notificationStatuses: 'notification_statuses'
};

var Notification = function Notification() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      id = _ref.id,
      event = _ref.event,
      type = _ref.type,
      status = _ref.status,
      _ref$resources = _ref.resources,
      resources = _ref$resources === undefined ? {} : _ref$resources;

  _classCallCheck(this, Notification);

  this.id = id;
  this.event = event;
  this.type = type;
  this.status = status;
  this.resources = resources;
};

module.exports = {
  Notification: Notification,
  readStatus: readStatus,
  unreadStatus: unreadStatus,
  notificationStatuses: notificationStatuses,
  storeKeys: storeKeys
};

/***/ }),

/***/ "./src/models/offer.js":
/*!*****************************!*\
  !*** ./src/models/offer.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//
// Offer is the main object exposed by Origin Protocol to access offer data.
//
var Offer = exports.Offer = function () {
  /**
   * An Offer is constructed based on its on-chain and off-chain data.
   * @param {string} offerId - Unique offer ID.
   * @param {string} listingId - Unique listing ID.
   * @param {Object} chainOffer - Offer data from the blockchain.
   * @param {Object} ipfsOffer - Offer data from IPFS.
   */
  function Offer(offerId, listingId, chainOffer, ipfsOffer) {
    _classCallCheck(this, Offer);

    this.id = offerId;
    this.listingId = listingId;
    this.status = chainOffer.status; // 'created', 'accepted', 'disputed', 'finalized', 'sellerReviewed'
    this.createdAt = chainOffer.createdAt; // Time in seconds since epoch.
    this.buyer = chainOffer.buyer;
    this.events = chainOffer.events;
    this.refund = chainOffer.refund;

    // See src/schemas/offer.json for fields stored in IPFS offer data.
    Object.assign(this, ipfsOffer);
  }

  /**
   * Gets an event based on its name.
   * @param {string} name - Event name, as emitted by marketplace contract. Ex: 'OfferCreated'.
   * @return First event object found matching the name or undefined.
   */


  _createClass(Offer, [{
    key: "event",
    value: function event(name) {
      return this.events.find(function (l) {
        return l.event === name;
      });
    }
  }]);

  return Offer;
}();

/***/ }),

/***/ "./src/models/review.js":
/*!******************************!*\
  !*** ./src/models/review.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//
// Review is the main object exposed by Origin Protocol to access buyer's review data.
//
var Review =
/**
 * Constructs a review based on blockchain and IPFS data.
 * @param {string} listingId
 * @param {string} offerId
 * @param {object} event - Blockchain event emitted when offer finalized.
 * @param {object} ipfsReview - Review data stored in IPFS.
 */
exports.Review = function Review(listingId, offerId, event, ipfsReview) {
  _classCallCheck(this, Review);

  this.id = event.transactionHash;
  this.listingId = listingId;
  this.offerId = offerId;
  this.reviewer = event.returnValues.party; // Either buyer or seller.
  this.timestamp = event.timestamp; // Time in seconds since Epoch.
  this.rating = ipfsReview.rating; // Number between 1 and 5.
  this.text = ipfsReview.text;
};

/***/ }),

/***/ "./src/models/user.js":
/*!****************************!*\
  !*** ./src/models/user.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var User = function User() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      address = _ref.address,
      profile = _ref.profile,
      attestations = _ref.attestations,
      identityAddress = _ref.identityAddress;

  _classCallCheck(this, User);

  this.address = address;
  this.profile = profile;
  this.attestations = attestations;
  this.identityAddress = identityAddress;
};

exports.default = User;

/***/ }),

/***/ "./src/resources/attestations.js":
/*!***************************************!*\
  !*** ./src/resources/attestations.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _attestation = __webpack_require__(/*! ../models/attestation */ "./src/models/attestation.js");

var _attestation2 = _interopRequireDefault(_attestation);

var _rlp = __webpack_require__(/*! rlp */ "rlp");

var _rlp2 = _interopRequireDefault(_rlp);

var _resolver = __webpack_require__(/*! ../contractInterface/users/resolver */ "./src/contractInterface/users/resolver.js");

var _resolver2 = _interopRequireDefault(_resolver);

var _web = __webpack_require__(/*! web3 */ "web3");

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var appendSlash = function appendSlash(url) {
  return url.substr(-1) === '/' ? url : url + '/';
};

var responseToUrl = function responseToUrl() {
  var resp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return resp['url'];
};

var Attestations = function () {
  function Attestations(_ref) {
    var serverUrl = _ref.serverUrl,
        contractService = _ref.contractService,
        fetch = _ref.fetch,
        blockEpoch = _ref.blockEpoch;

    _classCallCheck(this, Attestations);

    this.serverUrl = serverUrl;
    this.contractService = contractService;
    this.fetch = fetch;
    this.usersResolver = new _resolver2.default({ contractService: contractService, blockEpoch: blockEpoch });

    this.responseToAttestation = function () {
      var resp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return new _attestation2.default({
        topic: resp['claim-type'],
        data: _web2.default.utils.soliditySha3(resp['data']),
        signature: resp['signature']
      });
    };
  }

  _createClass(Attestations, [{
    key: 'getIdentityAddress',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(wallet) {
        var currentAccount, identityAddress;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.contractService.currentAccount();

              case 2:
                currentAccount = _context.sent;

                wallet = wallet || currentAccount;
                _context.next = 6;
                return this.usersResolver.identityAddress(wallet);

              case 6:
                identityAddress = _context.sent;

                if (!identityAddress) {
                  _context.next = 11;
                  break;
                }

                return _context.abrupt('return', _web2.default.utils.toChecksumAddress(identityAddress));

              case 11:
                return _context.abrupt('return', this.predictIdentityAddress(wallet));

              case 12:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getIdentityAddress(_x3) {
        return _ref2.apply(this, arguments);
      }

      return getIdentityAddress;
    }()
  }, {
    key: 'phoneGenerateCode',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3) {
        var countryCallingCode = _ref3.countryCallingCode,
            phone = _ref3.phone,
            method = _ref3.method,
            locale = _ref3.locale;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.post('phone/generate-code', {
                  country_calling_code: countryCallingCode,
                  phone: phone,
                  method: method,
                  locale: locale
                });

              case 2:
                return _context2.abrupt('return', _context2.sent);

              case 3:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function phoneGenerateCode(_x4) {
        return _ref4.apply(this, arguments);
      }

      return phoneGenerateCode;
    }()
  }, {
    key: 'phoneVerify',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5) {
        var wallet = _ref5.wallet,
            countryCallingCode = _ref5.countryCallingCode,
            phone = _ref5.phone,
            code = _ref5.code;
        var identity;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.getIdentityAddress(wallet);

              case 2:
                identity = _context3.sent;
                _context3.next = 5;
                return this.post('phone/verify', {
                  identity: identity,
                  country_calling_code: countryCallingCode,
                  phone: phone,
                  code: code
                }, this.responseToAttestation);

              case 5:
                return _context3.abrupt('return', _context3.sent);

              case 6:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function phoneVerify(_x5) {
        return _ref6.apply(this, arguments);
      }

      return phoneVerify;
    }()
  }, {
    key: 'emailGenerateCode',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7) {
        var email = _ref7.email;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.post('email/generate-code', { email: email });

              case 2:
                return _context4.abrupt('return', _context4.sent);

              case 3:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function emailGenerateCode(_x6) {
        return _ref8.apply(this, arguments);
      }

      return emailGenerateCode;
    }()
  }, {
    key: 'emailVerify',
    value: function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9) {
        var wallet = _ref9.wallet,
            email = _ref9.email,
            code = _ref9.code;
        var identity;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.getIdentityAddress(wallet);

              case 2:
                identity = _context5.sent;
                _context5.next = 5;
                return this.post('email/verify', {
                  identity: identity,
                  email: email,
                  code: code
                }, this.responseToAttestation);

              case 5:
                return _context5.abrupt('return', _context5.sent);

              case 6:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function emailVerify(_x7) {
        return _ref10.apply(this, arguments);
      }

      return emailVerify;
    }()
  }, {
    key: 'facebookAuthUrl',
    value: function () {
      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.get('facebook/auth-url', {}, responseToUrl);

              case 2:
                return _context6.abrupt('return', _context6.sent);

              case 3:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function facebookAuthUrl() {
        return _ref11.apply(this, arguments);
      }

      return facebookAuthUrl;
    }()
  }, {
    key: 'facebookVerify',
    value: function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref12) {
        var wallet = _ref12.wallet,
            code = _ref12.code;
        var identity;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.getIdentityAddress(wallet);

              case 2:
                identity = _context7.sent;
                _context7.next = 5;
                return this.post('facebook/verify', {
                  identity: identity,
                  code: code
                }, this.responseToAttestation);

              case 5:
                return _context7.abrupt('return', _context7.sent);

              case 6:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function facebookVerify(_x8) {
        return _ref13.apply(this, arguments);
      }

      return facebookVerify;
    }()
  }, {
    key: 'twitterAuthUrl',
    value: function () {
      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.get('twitter/auth-url', {}, responseToUrl);

              case 2:
                return _context8.abrupt('return', _context8.sent);

              case 3:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function twitterAuthUrl() {
        return _ref14.apply(this, arguments);
      }

      return twitterAuthUrl;
    }()
  }, {
    key: 'twitterVerify',
    value: function () {
      var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref15) {
        var wallet = _ref15.wallet,
            code = _ref15.code;
        var identity;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.getIdentityAddress(wallet);

              case 2:
                identity = _context9.sent;
                _context9.next = 5;
                return this.post('twitter/verify', {
                  identity: identity,
                  'oauth-verifier': code
                }, this.responseToAttestation);

              case 5:
                return _context9.abrupt('return', _context9.sent);

              case 6:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function twitterVerify(_x9) {
        return _ref16.apply(this, arguments);
      }

      return twitterVerify;
    }()
  }, {
    key: 'airbnbGenerateCode',
    value: function () {
      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(_ref17) {
        var wallet = _ref17.wallet,
            airbnbUserId = _ref17.airbnbUserId;
        var identity;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.getIdentityAddress(wallet);

              case 2:
                identity = _context10.sent;
                _context10.next = 5;
                return this.get('airbnb/generate-code', {
                  identity: identity,
                  airbnbUserId: airbnbUserId
                });

              case 5:
                return _context10.abrupt('return', _context10.sent);

              case 6:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function airbnbGenerateCode(_x10) {
        return _ref18.apply(this, arguments);
      }

      return airbnbGenerateCode;
    }()
  }, {
    key: 'airbnbVerify',
    value: function () {
      var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref19) {
        var wallet = _ref19.wallet,
            airbnbUserId = _ref19.airbnbUserId;
        var identity;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.getIdentityAddress(wallet);

              case 2:
                identity = _context11.sent;
                _context11.next = 5;
                return this.post('airbnb/verify', {
                  identity: identity,
                  airbnbUserId: airbnbUserId
                }, this.responseToAttestation);

              case 5:
                return _context11.abrupt('return', _context11.sent);

              case 6:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function airbnbVerify(_x11) {
        return _ref20.apply(this, arguments);
      }

      return airbnbVerify;
    }()
  }, {
    key: 'http',
    value: function () {
      var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(baseUrl, url, body, successFn, method) {
        var response, json;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.fetch(appendSlash(baseUrl) + url, {
                  method: method,
                  body: body ? JSON.stringify(body) : undefined,
                  headers: { 'content-type': 'application/json' },
                  credentials: 'include'
                });

              case 2:
                response = _context12.sent;
                _context12.next = 5;
                return response.json();

              case 5:
                json = _context12.sent;

                if (!response.ok) {
                  _context12.next = 8;
                  break;
                }

                return _context12.abrupt('return', successFn ? successFn(json) : json);

              case 8:
                return _context12.abrupt('return', Promise.reject(JSON.stringify(json)));

              case 9:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function http(_x12, _x13, _x14, _x15, _x16) {
        return _ref21.apply(this, arguments);
      }

      return http;
    }()
  }, {
    key: 'post',
    value: function () {
      var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(url, body, successFn) {
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return this.http(this.serverUrl, url, body, successFn, 'POST');

              case 2:
                return _context13.abrupt('return', _context13.sent);

              case 3:
              case 'end':
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function post(_x17, _x18, _x19) {
        return _ref22.apply(this, arguments);
      }

      return post;
    }()
  }, {
    key: 'get',
    value: function () {
      var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(url, parameters, successFn) {
        var objectKeys, stringParams;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                objectKeys = Object.keys(parameters);
                stringParams = objectKeys.map(function (key) {
                  return key + '=' + parameters[key];
                }).join('&');

                stringParams = (objectKeys.length === 0 ? '' : '?') + stringParams;

                _context14.next = 5;
                return this.http(this.serverUrl, url + stringParams, undefined, successFn, 'GET');

              case 5:
                return _context14.abrupt('return', _context14.sent);

              case 6:
              case 'end':
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function get(_x20, _x21, _x22) {
        return _ref23.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: 'predictIdentityAddress',
    value: function () {
      var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(wallet) {
        var web3, nonce, address;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                web3 = this.contractService.web3;
                _context15.next = 3;
                return new Promise(function (resolve) {
                  web3.eth.getTransactionCount(wallet, function (err, count) {
                    resolve(count);
                  });
                });

              case 3:
                nonce = _context15.sent;
                address = '0x' + _web2.default.utils.sha3(_rlp2.default.encode([wallet, nonce])).substring(26, 66);
                return _context15.abrupt('return', _web2.default.utils.toChecksumAddress(address));

              case 6:
              case 'end':
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function predictIdentityAddress(_x23) {
        return _ref24.apply(this, arguments);
      }

      return predictIdentityAddress;
    }()
  }]);

  return Attestations;
}();

module.exports = {
  AttestationObject: _attestation2.default,
  Attestations: Attestations
};

/***/ }),

/***/ "./src/resources/discovery.js":
/*!************************************!*\
  !*** ./src/resources/discovery.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Discovery = function () {
  function Discovery(_ref) {
    var discoveryServerUrl = _ref.discoveryServerUrl,
        fetch = _ref.fetch;

    _classCallCheck(this, Discovery);

    this.discoveryServerUrl = discoveryServerUrl;
    this.fetch = fetch;
  }

  _createClass(Discovery, [{
    key: 'query',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(graphQlQuery) {
        var url, resp;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                url = this.discoveryServerUrl;
                _context.next = 3;
                return this.fetch(url, {
                  method: 'POST',
                  body: JSON.stringify({
                    query: graphQlQuery
                  }),
                  headers: {
                    'Content-Type': 'application/json'
                  }
                }, function (error) {
                  if (error !== undefined) throw Error('An error occured when reaching discovery server: ' + error);
                });

              case 3:
                resp = _context.sent;

                if (!(resp.status !== 200)) {
                  _context.next = 6;
                  break;
                }

                throw Error('Discovery server retuned unexpected status code ' + resp.status + ' with error ');

              case 6:
                _context.next = 8;
                return resp.json();

              case 8:
                return _context.abrupt('return', _context.sent);

              case 9:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function query(_x) {
        return _ref2.apply(this, arguments);
      }

      return query;
    }()

    /**
     * Issues a search request to the indexing server which returns Listings result as a promise.
     * This way the caller of the function can implement error checks when results is something
     * unexpected. To get JSON result caller should call `await searchResponse.json()` to get the
     * actual JSON.
     * @param searchQuery {string} general search query
     * @param filters {object} object with properties: name, value, valueType, operator
     * @returns {Promise<HTTP_Response>}
     */

  }, {
    key: 'search',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(searchQuery, numberOfItems, offset) {
        var filters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
        var query;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                // from page should be bigger than 0
                offset = Math.max(offset, 0);
                // clamp numberOfItems between 1 and 12
                numberOfItems = Math.min(Math.max(numberOfItems, 1), 100);
                query = '\n    {\n      listings (\n        searchQuery: "' + searchQuery + '"\n        filters: [' + filters.map(function (filter) {
                  return '\n    {\n      name: "' + filter.name + '"\n      value: "' + String(filter.value) + '"\n      valueType: ' + filter.valueType + '\n      operator: ' + filter.operator + '\n    }\n    ';
                }).join(',') + ']\n        page:{\n          offset: ' + offset + '\n          numberOfItems: ' + numberOfItems + '\n        }\n      ) {\n        nodes {\n          id\n        }\n        offset\n        numberOfItems\n        totalNumberOfItems\n        stats {\n          maxPrice\n          minPrice\n        }\n      }\n    }';
                return _context2.abrupt('return', this.query(query));

              case 4:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function search(_x3, _x4, _x5) {
        return _ref3.apply(this, arguments);
      }

      return search;
    }()
  }]);

  return Discovery;
}();

module.exports = Discovery;

/***/ }),

/***/ "./src/resources/marketplace.js":
/*!**************************************!*\
  !*** ./src/resources/marketplace.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _listing = __webpack_require__(/*! ../models/listing */ "./src/models/listing.js");

var _offer = __webpack_require__(/*! ../models/offer */ "./src/models/offer.js");

var _review = __webpack_require__(/*! ../models/review */ "./src/models/review.js");

var _notification = __webpack_require__(/*! ../models/notification */ "./src/models/notification.js");

var _id = __webpack_require__(/*! ../utils/id */ "./src/utils/id.js");

var _store = __webpack_require__(/*! ../ipfsInterface/store */ "./src/ipfsInterface/store.js");

var _resolver = __webpack_require__(/*! ../contractInterface/marketplace/resolver */ "./src/contractInterface/marketplace/resolver.js");

var _resolver2 = _interopRequireDefault(_resolver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Marketplace = function () {
  function Marketplace(_ref) {
    var contractService = _ref.contractService,
        ipfsService = _ref.ipfsService,
        store = _ref.store,
        affiliate = _ref.affiliate,
        arbitrator = _ref.arbitrator;

    _classCallCheck(this, Marketplace);

    this.contractService = contractService;
    this.ipfsService = ipfsService;
    this.affiliate = affiliate;
    this.arbitrator = arbitrator;
    this.ipfsDataStore = new _store.IpfsDataStore(this.ipfsService);
    this.resolver = new (Function.prototype.bind.apply(_resolver2.default, [null].concat(Array.prototype.slice.call(arguments))))();

    // initialize notifications
    if (!store.get(_notification.storeKeys.notificationSubscriptionStart)) {
      store.set(_notification.storeKeys.notificationSubscriptionStart, Date.now());
    }
    if (!store.get(_notification.storeKeys.notificationStatuses)) {
      store.set(_notification.storeKeys.notificationStatuses, {});
    }
    this.store = store;
  }

  _createClass(Marketplace, [{
    key: 'getListingsCount',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.resolver.getListingsCount();

              case 2:
                return _context.abrupt('return', _context.sent);

              case 3:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getListingsCount() {
        return _ref2.apply(this, arguments);
      }

      return getListingsCount;
    }()
  }, {
    key: 'getListings',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var _this = this;

        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var listingIds;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.resolver.getListingIds(opts);

              case 2:
                listingIds = _context3.sent;

                if (!opts.idsOnly) {
                  _context3.next = 5;
                  break;
                }

                return _context3.abrupt('return', listingIds);

              case 5:
                return _context3.abrupt('return', Promise.all(listingIds.map(function () {
                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(listingId) {
                    return regeneratorRuntime.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.next = 2;
                            return _this.getListing(listingId);

                          case 2:
                            return _context2.abrupt('return', _context2.sent);

                          case 3:
                          case 'end':
                            return _context2.stop();
                        }
                      }
                    }, _callee2, _this);
                  }));

                  return function (_x2) {
                    return _ref4.apply(this, arguments);
                  };
                }())));

              case 6:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getListings() {
        return _ref3.apply(this, arguments);
      }

      return getListings;
    }()

    /**
     * Returns a Listing object based in its id.
     * @param listingId
     * @returns {Promise<Listing>}
     * @throws {Error}
     */

  }, {
    key: 'getListing',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(listingId) {
        var chainListing, ipfsHash, ipfsListing;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.resolver.getListing(listingId);

              case 2:
                chainListing = _context4.sent;


                // Get the off-chain listing data from IPFS.
                ipfsHash = this.contractService.getIpfsHashFromBytes32(chainListing.ipfsHash);
                _context4.next = 6;
                return this.ipfsDataStore.load(_store.LISTING_DATA_TYPE, ipfsHash);

              case 6:
                ipfsListing = _context4.sent;
                return _context4.abrupt('return', new _listing.Listing(listingId, chainListing, ipfsListing));

              case 8:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getListing(_x3) {
        return _ref5.apply(this, arguments);
      }

      return getListing;
    }()

    // async getOffersCount(listingId) {}

  }, {
    key: 'getOffers',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(listingId) {
        var _this2 = this;

        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var offerIds, allOffers;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.resolver.getOfferIds(listingId, opts);

              case 2:
                offerIds = _context6.sent;

                if (!opts.idsOnly) {
                  _context6.next = 7;
                  break;
                }

                return _context6.abrupt('return', offerIds);

              case 7:
                _context6.next = 9;
                return Promise.all(offerIds.map(function () {
                  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(offerId) {
                    return regeneratorRuntime.wrap(function _callee5$(_context5) {
                      while (1) {
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.prev = 0;
                            _context5.next = 3;
                            return _this2.getOffer(offerId);

                          case 3:
                            return _context5.abrupt('return', _context5.sent);

                          case 6:
                            _context5.prev = 6;
                            _context5.t0 = _context5['catch'](0);
                            return _context5.abrupt('return', null);

                          case 9:
                          case 'end':
                            return _context5.stop();
                        }
                      }
                    }, _callee5, _this2, [[0, 6]]);
                  }));

                  return function (_x6) {
                    return _ref7.apply(this, arguments);
                  };
                }()));

              case 9:
                allOffers = _context6.sent;
                return _context6.abrupt('return', allOffers.filter(function (offer) {
                  return Boolean(offer);
                }));

              case 11:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function getOffers(_x5) {
        return _ref6.apply(this, arguments);
      }

      return getOffers;
    }()

    /**
     * Returns an offer based on its id.
     * @param {string}offerId - Unique offer Id.
     * @return {Promise<Offer>} - models/Offer object
     */

  }, {
    key: 'getOffer',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(offerId) {
        var _ref9, chainOffer, listingId, ipfsHash, ipfsOffer, listing, listingCurrency, listingPrice, listingCommision, currencies, currency, currencyAddress;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.resolver.getOffer(offerId);

              case 2:
                _ref9 = _context7.sent;
                chainOffer = _ref9.chainOffer;
                listingId = _ref9.listingId;


                // Load ipfs data.
                ipfsHash = this.contractService.getIpfsHashFromBytes32(chainOffer.ipfsHash);
                _context7.next = 8;
                return this.ipfsDataStore.load(_store.OFFER_DATA_TYPE, ipfsHash);

              case 8:
                ipfsOffer = _context7.sent;

                if (!(chainOffer.status === 'created')) {
                  _context7.next = 35;
                  break;
                }

                _context7.next = 12;
                return this.getListing(listingId);

              case 12:
                listing = _context7.sent;
                listingCurrency = listing.price && listing.price.currency;
                _context7.next = 16;
                return this.contractService.moneyToUnits(listing.price);

              case 16:
                listingPrice = _context7.sent;
                _context7.next = 19;
                return this.contractService.moneyToUnits(listing.commission);

              case 19:
                listingCommision = _context7.sent;
                _context7.next = 22;
                return this.contractService.currencies();

              case 22:
                currencies = _context7.sent;
                currency = currencies[listingCurrency];
                currencyAddress = currency && currency.address;

                if (!(currencyAddress !== chainOffer.currency)) {
                  _context7.next = 27;
                  break;
                }

                throw new Error('Invalid offer: currency does not match listing');

              case 27:
                if (!(listingPrice > chainOffer.value)) {
                  _context7.next = 29;
                  break;
                }

                throw new Error('Invalid offer: insufficient offer amount for listing');

              case 29:
                if (!(listingCommision > chainOffer.commission)) {
                  _context7.next = 31;
                  break;
                }

                throw new Error('Invalid offer: insufficient commission amount for listing');

              case 31:
                if (!(chainOffer.arbitrator.toLowerCase() !== this.arbitrator.toLowerCase())) {
                  _context7.next = 33;
                  break;
                }

                throw new Error('Invalid offer: arbitrator is invalid');

              case 33:
                if (!(chainOffer.affiliate.toLowerCase() !== this.affiliate.toLowerCase())) {
                  _context7.next = 35;
                  break;
                }

                throw new Error('Invalid offer: affiliate is invalid');

              case 35:
                return _context7.abrupt('return', new _offer.Offer(offerId, listingId, chainOffer, ipfsOffer));

              case 36:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function getOffer(_x7) {
        return _ref8.apply(this, arguments);
      }

      return getOffer;
    }()

    /**
     * Creates a new listing in the system. Data is recorded both on-chain and off-chain in IPFS.
     * @param {object} data - Listing data to store in IPFS
     * @param {func(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{listingId, ...transactionReceipt}>}
     */

  }, {
    key: 'createListing',
    value: function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(ipfsData, confirmationCallback) {
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.ipfsDataStore.save(_store.LISTING_DATA_TYPE, ipfsData);

              case 2:
                ipfsHash = _context8.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context8.next = 6;
                return this.resolver.createListing(ipfsBytes, ipfsData, confirmationCallback);

              case 6:
                return _context8.abrupt('return', _context8.sent);

              case 7:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function createListing(_x8, _x9) {
        return _ref10.apply(this, arguments);
      }

      return createListing;
    }()

    // updateListing(listingId, data) {}

    /**
     * Closes a listing.
     * @param listingId
     * @param ipfsData - Data to store in IPFS. For future use, currently empty.
     * @param {func(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'withdrawListing',
    value: function () {
      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(listingId) {
        var ipfsData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var confirmationCallback = arguments[2];
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.ipfsDataStore.save(_store.LISTING_WITHDRAW_DATA_TYPE, ipfsData);

              case 2:
                ipfsHash = _context9.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context9.next = 6;
                return this.resolver.withdrawListing(listingId, ipfsBytes, confirmationCallback);

              case 6:
                return _context9.abrupt('return', _context9.sent);

              case 7:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function withdrawListing(_x11) {
        return _ref11.apply(this, arguments);
      }

      return withdrawListing;
    }()

    /**
     * Adds an offer for a listing.
     * @param {string} listingId
     * @param {object} offerData - Offer data, expected in V1 schema format.
     * @param {function(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{listingId, offerId, ...transactionReceipt}>}
     */

  }, {
    key: 'makeOffer',
    value: function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(listingId) {
        var offerData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var confirmationCallback = arguments[2];
        var ipfsHash, ipfsBytes, affiliate, arbitrator;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.ipfsDataStore.save(_store.OFFER_DATA_TYPE, offerData);

              case 2:
                ipfsHash = _context10.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                affiliate = this.affiliate;
                arbitrator = this.arbitrator;
                _context10.next = 8;
                return this.resolver.makeOffer(listingId, ipfsBytes, Object.assign({ affiliate: affiliate, arbitrator: arbitrator }, offerData), confirmationCallback);

              case 8:
                return _context10.abrupt('return', _context10.sent);

              case 9:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function makeOffer(_x13) {
        return _ref12.apply(this, arguments);
      }

      return makeOffer;
    }()

    // updateOffer(listingId, offerId, data) {}

    /**
     * Withdraws an offer.
     * @param {string} id - Offer unique ID.
     * @param ipfsData - Data to store in IPFS. For future use, currently empty.
     * @param {func(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'withdrawOffer',
    value: function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(id) {
        var ipfsData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var confirmationCallback = arguments[2];
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.ipfsDataStore.save(_store.OFFER_WITHDRAW_DATA_TYPE, ipfsData);

              case 2:
                ipfsHash = _context11.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context11.next = 6;
                return this.resolver.withdrawOffer(id, ipfsBytes, confirmationCallback);

              case 6:
                return _context11.abrupt('return', _context11.sent);

              case 7:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function withdrawOffer(_x15) {
        return _ref13.apply(this, arguments);
      }

      return withdrawOffer;
    }()

    /**
     * Accepts an offer.
     * @param {string} id - Offer unique ID.
     * @param ipfsData - Data to store in IPFS. For future use, currently empty.
     * @param {function(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'acceptOffer',
    value: function () {
      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(id) {
        var ipfsData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var confirmationCallback = arguments[2];
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.ipfsDataStore.save(_store.OFFER_ACCEPT_DATA_TYPE, ipfsData);

              case 2:
                ipfsHash = _context12.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context12.next = 6;
                return this.resolver.acceptOffer(id, ipfsBytes, confirmationCallback);

              case 6:
                return _context12.abrupt('return', _context12.sent);

              case 7:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function acceptOffer(_x17) {
        return _ref14.apply(this, arguments);
      }

      return acceptOffer;
    }()

    /**
     * Finalizes an offer. Store review data in IPFS.
     * @param {string} id - Offer unique ID.
     * @param {object} reviewData - Buyer's review. Data expected in schema version 1.0 format.
     * @param {function(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'finalizeOffer',
    value: function () {
      var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(id, reviewData, confirmationCallback) {
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return this.ipfsDataStore.save(_store.REVIEW_DATA_TYPE, reviewData);

              case 2:
                ipfsHash = _context13.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context13.next = 6;
                return this.resolver.finalizeOffer(id, ipfsBytes, confirmationCallback);

              case 6:
                return _context13.abrupt('return', _context13.sent);

              case 7:
              case 'end':
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function finalizeOffer(_x18, _x19, _x20) {
        return _ref15.apply(this, arguments);
      }

      return finalizeOffer;
    }()

    // setOfferRefund(listingId, offerId, data) {}
    // manageListingDeposit(listingId, data) {}

    /**
     * Initiate a dispute regarding an offer. Puts the offer into "Disputed" status.
     * @param {string} offerId - Offer ID
     * @param {object} disputeData - Data describing this dispute - stored in IPFS
     * @param {function(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'initiateDispute',
    value: function () {
      var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(offerId) {
        var disputeData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var confirmationCallback = arguments[2];
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.ipfsDataStore.save(_store.DISPUTE_DATA_TYPE, disputeData);

              case 2:
                ipfsHash = _context14.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context14.next = 6;
                return this.resolver.initiateDispute(offerId, ipfsBytes, confirmationCallback);

              case 6:
                return _context14.abrupt('return', _context14.sent);

              case 7:
              case 'end':
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function initiateDispute(_x22) {
        return _ref16.apply(this, arguments);
      }

      return initiateDispute;
    }()

    /**
     * Resolve a dispute by executing a ruling - either refund to buyer or payment to seller
     * @param {string} listingId - Listing ID
     * @param {string} offerId - Offer ID
     * @param {object} resolutionData - Data describing this resolution - stored in IPFS
     * @param {number} ruling - 0: Seller, 1: Buyer, 2: Com + Seller, 3: Com + Buyer
     * @param {number} refund - Amount (in wei) to be refunded to buyer
     * @param {function(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'resolveDispute',
    value: function () {
      var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(offerId) {
        var resolutionData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var ruling = arguments[2];
        var refund = arguments[3];
        var confirmationCallback = arguments[4];
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.ipfsDataStore.save(_store.RESOLUTION_DATA_TYPE, resolutionData);

              case 2:
                ipfsHash = _context15.sent;
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context15.next = 6;
                return this.resolver.resolveDispute(offerId, ipfsBytes, ruling, refund, confirmationCallback);

              case 6:
                return _context15.abrupt('return', _context15.sent);

              case 7:
              case 'end':
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function resolveDispute(_x24) {
        return _ref17.apply(this, arguments);
      }

      return resolveDispute;
    }()

    /**
     * Adds data to either a listing or an offer.
     * Use cases:
     *  - offer: allows seller to add review data.
     *  - listing: for future use.
     * @param listingId
     * @param offerId
     * @param {object} data - In case of an offer, Seller review data in schema 1.0 format.
     * @param {function(confirmationCount, transactionReceipt)} confirmationCallback
     * @return {Promise<{timestamp, ...transactionReceipt}>}
     */

  }, {
    key: 'addData',
    value: function () {
      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(listingId, offerId, data, confirmationCallback) {
        var ipfsHash, ipfsBytes;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                ipfsHash = void 0;

                if (!offerId) {
                  _context16.next = 7;
                  break;
                }

                _context16.next = 4;
                return this.ipfsDataStore.save(_store.REVIEW_DATA_TYPE, data);

              case 4:
                ipfsHash = _context16.sent;
                _context16.next = 9;
                break;

              case 7:
                if (!listingId) {
                  _context16.next = 9;
                  break;
                }

                throw new Error('Code path not implemented yet');

              case 9:
                ipfsBytes = this.contractService.getBytes32FromIpfsHash(ipfsHash);
                _context16.next = 12;
                return this.resolver.addData(listingId, offerId, ipfsBytes, confirmationCallback);

              case 12:
                return _context16.abrupt('return', _context16.sent);

              case 13:
              case 'end':
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function addData(_x25, _x26, _x27, _x28) {
        return _ref18.apply(this, arguments);
      }

      return addData;
    }()

    // Convenience methods

    /**
     * Pulls all the Buyer side reviews for a listing.
     * @param {string} listingId
     * @return {Promise<Array[Review]>}
     */

  }, {
    key: 'getListingReviews',
    value: function () {
      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(listingId) {
        var reviewEvents, reviews, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, event, ipfsHash, ipfsReview, review;

        return regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _context17.next = 2;
                return this.resolver.getListingReviews(listingId);

              case 2:
                reviewEvents = _context17.sent;
                reviews = [];
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context17.prev = 7;
                _iterator = reviewEvents[Symbol.iterator]();

              case 9:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context17.next = 20;
                  break;
                }

                event = _step.value;

                // Load review data from IPFS.
                ipfsHash = this.contractService.getIpfsHashFromBytes32(event.returnValues.ipfsHash);
                _context17.next = 14;
                return this.ipfsDataStore.load(_store.REVIEW_DATA_TYPE, ipfsHash);

              case 14:
                ipfsReview = _context17.sent;


                // Create a Review object based on IPFS and event data.
                review = new _review.Review(listingId, event.offerId, event, ipfsReview);

                reviews.push(review);

              case 17:
                _iteratorNormalCompletion = true;
                _context17.next = 9;
                break;

              case 20:
                _context17.next = 26;
                break;

              case 22:
                _context17.prev = 22;
                _context17.t0 = _context17['catch'](7);
                _didIteratorError = true;
                _iteratorError = _context17.t0;

              case 26:
                _context17.prev = 26;
                _context17.prev = 27;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 29:
                _context17.prev = 29;

                if (!_didIteratorError) {
                  _context17.next = 32;
                  break;
                }

                throw _iteratorError;

              case 32:
                return _context17.finish(29);

              case 33:
                return _context17.finish(26);

              case 34:
                return _context17.abrupt('return', reviews);

              case 35:
              case 'end':
                return _context17.stop();
            }
          }
        }, _callee17, this, [[7, 22, 26, 34], [27,, 29, 33]]);
      }));

      function getListingReviews(_x29) {
        return _ref19.apply(this, arguments);
      }

      return getListingReviews;
    }()
  }, {
    key: 'getNotifications',
    value: function () {
      var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
        var _this3 = this;

        var party, notifications, isValid, withResources;
        return regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.contractService.currentAccount();

              case 2:
                party = _context19.sent;
                _context19.next = 5;
                return this.resolver.getNotifications(party);

              case 5:
                notifications = _context19.sent;
                isValid = true;
                _context19.next = 9;
                return Promise.all(notifications.map(function () {
                  var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(notification) {
                    var offer;
                    return regeneratorRuntime.wrap(function _callee18$(_context18) {
                      while (1) {
                        switch (_context18.prev = _context18.next) {
                          case 0:
                            if (!notification.resources.listingId) {
                              _context18.next = 4;
                              break;
                            }

                            _context18.next = 3;
                            return _this3.getListing((0, _id.generateListingId)({
                              version: notification.version,
                              network: notification.network,
                              listingIndex: notification.resources.listingId
                            }));

                          case 3:
                            notification.resources.listing = _context18.sent;

                          case 4:
                            if (!notification.resources.offerId) {
                              _context18.next = 16;
                              break;
                            }

                            offer = void 0;
                            _context18.prev = 6;
                            _context18.next = 9;
                            return _this3.getOffer((0, _id.generateOfferId)({
                              version: notification.version,
                              network: notification.network,
                              listingIndex: notification.resources.listingId,
                              offerIndex: notification.resources.offerId
                            }));

                          case 9:
                            offer = _context18.sent;
                            _context18.next = 15;
                            break;

                          case 12:
                            _context18.prev = 12;
                            _context18.t0 = _context18['catch'](6);

                            isValid = false;

                          case 15:
                            notification.resources.purchase = offer;

                          case 16:
                            return _context18.abrupt('return', isValid ? new _notification.Notification(notification) : null);

                          case 17:
                          case 'end':
                            return _context18.stop();
                        }
                      }
                    }, _callee18, _this3, [[6, 12]]);
                  }));

                  return function (_x30) {
                    return _ref21.apply(this, arguments);
                  };
                }()));

              case 9:
                withResources = _context19.sent;
                return _context19.abrupt('return', withResources.filter(function (notification) {
                  return notification !== null;
                }));

              case 11:
              case 'end':
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function getNotifications() {
        return _ref20.apply(this, arguments);
      }

      return getNotifications;
    }()
  }, {
    key: 'setNotification',
    value: function () {
      var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(_ref22) {
        var id = _ref22.id,
            status = _ref22.status;
        var notifications;
        return regeneratorRuntime.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                if (_notification.notificationStatuses.includes(status)) {
                  _context20.next = 2;
                  break;
                }

                throw new Error('invalid notification status: ' + status);

              case 2:
                notifications = this.store.get(_notification.storeKeys.notificationStatuses);

                notifications[id] = status;
                this.store.set(_notification.storeKeys.notificationStatuses, notifications);

              case 5:
              case 'end':
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function setNotification(_x31) {
        return _ref23.apply(this, arguments);
      }

      return setNotification;
    }()
  }, {
    key: 'getTokenAddress',
    value: function () {
      var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
        return regeneratorRuntime.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _context21.next = 2;
                return this.resolver.getTokenAddress();

              case 2:
                return _context21.abrupt('return', _context21.sent);

              case 3:
              case 'end':
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));

      function getTokenAddress() {
        return _ref24.apply(this, arguments);
      }

      return getTokenAddress;
    }()
  }]);

  return Marketplace;
}();

module.exports = Marketplace;

/***/ }),

/***/ "./src/resources/messaging.js":
/*!************************************!*\
  !*** ./src/resources/messaging.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _secp256k = __webpack_require__(/*! secp256k1 */ "secp256k1");

var _secp256k2 = _interopRequireDefault(_secp256k);

var _cryptoJs = __webpack_require__(/*! crypto-js */ "crypto-js");

var _cryptoJs2 = _interopRequireDefault(_cryptoJs);

var _cryptoRandomString = __webpack_require__(/*! crypto-random-string */ "crypto-random-string");

var _cryptoRandomString2 = _interopRequireDefault(_cryptoRandomString);

var _events = __webpack_require__(/*! events */ "events");

var _events2 = _interopRequireDefault(_events);

var _ajv = __webpack_require__(/*! ajv */ "ajv");

var _ajv2 = _interopRequireDefault(_ajv);

var _cookieStorage = __webpack_require__(/*! ../utils/cookieStorage */ "./src/utils/cookieStorage.js");

var _cookieStorage2 = _interopRequireDefault(_cookieStorage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PROMPT_MESSAGE = 'I am ready to start messaging on Origin.';
var PROMPT_PUB_KEY = 'My public messaging key is: ';
var MESSAGING_KEY = 'MK_';
var MESSAGING_PHRASE = 'MP_';
var PUB_MESSAGING_SIG = 'PMS_';
var PUB_MESSAGING = 'KEY_';
var PRE_GLOBAL_KEYS = ':global';
var PRE_CONV_INIT_PREFIX = ':convo-init-';
var PRE_CONV = ':conv';
var UNREAD_STATUS = 'unread';
var READ_STATUS = 'read';

var storeKeys = {
  messageSubscriptionStart: 'message_subscription_start',
  messageStatuses: 'message_statuses'
};

var MESSAGE_FORMAT = {
  type: 'object',
  required: ['created'],
  properties: {
    content: { type: 'string' },
    created: { type: 'number' },
    decryption: {
      type: 'object',
      required: ['keys', 'roomId'],
      properties: {
        keys: {
          type: 'array',
          items: { type: 'string' }
        },
        roomId: { type: 'string' }
      }
    }
  }
};
var validator = new _ajv2.default();
var validateMessage = validator.compile(MESSAGE_FORMAT);

var DEFAULT_ORBIT_OPTIONS = { referenceCount: 0 };

var InsertOnlyKeystore = function () {
  function InsertOnlyKeystore(pubKey, privKey) {
    _classCallCheck(this, InsertOnlyKeystore);

    this._signVerifyRegistry = {};
    this._pubKey = pubKey;
    this._privKey = privKey;
  }

  _createClass(InsertOnlyKeystore, [{
    key: 'registerSignVerify',
    value: function registerSignVerify(db_id, signFunc, verifyFunc, postFunc) {
      this._signVerifyRegistry[db_id] = { signFunc: signFunc, verifyFunc: verifyFunc, postFunc: postFunc };
    }
  }, {
    key: 'getSignVerify',
    value: function getSignVerify(id) {
      var parts = id.split('/');
      var end = parts[parts.length - 1];

      var obj = this._signVerifyRegistry[end];
      if (obj) return obj;

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = Object.keys(this._signVerifyRegistry)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var k = _step.value;

          if (k.endsWith('-') && end.startsWith(k)) {
            return this._signVerifyRegistry[k];
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: 'getKey',
    value: function getKey() {
      var _this = this;

      // for some reason Orbit requires a key for verify to be triggered
      return {
        getPublic: function getPublic() {
          return _this._pubKey;
        }
      };
    }
  }, {
    key: 'exportPublicKey',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this._pubKey);

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function exportPublicKey() {
        return _ref.apply(this, arguments);
      }

      return exportPublicKey;
    }()
  }, {
    key: 'exportPrivateKey',
    value: function exportPrivateKey() {
      // This function should never be called
    }
  }, {
    key: 'importPublicKey',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(key) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt('return', key);

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function importPublicKey(_x) {
        return _ref2.apply(this, arguments);
      }

      return importPublicKey;
    }()
  }, {
    key: 'importPrivateKey',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt('return', this._privKey);

              case 1:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function importPrivateKey() {
        return _ref3.apply(this, arguments);
      }

      return importPrivateKey;
    }()
  }, {
    key: 'sign',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(key, data) {
        var message, obj;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                message = JSON.parse(data);
                obj = this.getSignVerify(message.id);

                if (!(obj && obj.signFunc)) {
                  _context4.next = 4;
                  break;
                }

                return _context4.abrupt('return', obj.signFunc(key, data));

              case 4:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function sign(_x2, _x3) {
        return _ref4.apply(this, arguments);
      }

      return sign;
    }()
  }, {
    key: 'verify',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(signature, key, data) {
        var message, obj;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.prev = 0;
                message = JSON.parse(data);
                obj = this.getSignVerify(message.id);

                if (!(obj && obj.verifyFunc)) {
                  _context5.next = 10;
                  break;
                }

                if (!(message.payload.op == 'PUT' || message.payload.op == 'ADD')) {
                  _context5.next = 10;
                  break;
                }

                _context5.next = 7;
                return obj.verifyFunc(signature, key, message, data);

              case 7:
                if (!_context5.sent) {
                  _context5.next = 10;
                  break;
                }

                if (obj.postFunc) {
                  obj.postFunc(message);
                }
                return _context5.abrupt('return', true);

              case 10:
                _context5.next = 15;
                break;

              case 12:
                _context5.prev = 12;
                _context5.t0 = _context5['catch'](0);

                console.error(_context5.t0);

              case 15:
                throw new Error('Cannot verify signature');

              case 16:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this, [[0, 12]]);
      }));

      function verify(_x4, _x5, _x6) {
        return _ref5.apply(this, arguments);
      }

      return verify;
    }()
  }]);

  return InsertOnlyKeystore;
}();

var Messaging = function () {
  function Messaging(_ref6) {
    var contractService = _ref6.contractService,
        ipfsCreator = _ref6.ipfsCreator,
        OrbitDB = _ref6.OrbitDB,
        ecies = _ref6.ecies,
        messagingNamespace = _ref6.messagingNamespace;

    _classCallCheck(this, Messaging);

    this.contractService = contractService;
    this.web3 = this.contractService.web3;
    this.ipfsCreator = ipfsCreator;
    this.OrbitDB = OrbitDB;
    this.sharedRooms = {};
    this.convs = {};
    this.ecies = ecies;
    this.events = new _events2.default();
    this.GLOBAL_KEYS = messagingNamespace + PRE_GLOBAL_KEYS;
    this.CONV = messagingNamespace + PRE_CONV;
    this.CONV_INIT_PREFIX = messagingNamespace + PRE_CONV_INIT_PREFIX;
    this.cookieStorage = new _cookieStorage2.default({ path: (typeof location === 'undefined' ? 'undefined' : _typeof(location)) === 'object' && location.pathname ? location.pathname : '/' });
  }

  _createClass(Messaging, [{
    key: 'onAccount',
    value: function onAccount(account_key) {
      if (account_key && !this.account_key || account_key != this.account_key) {
        this.init(account_key);
      }
    }
  }, {
    key: 'setKeyItem',
    value: function setKeyItem(key, value) {
      this.cookieStorage.setItem(key, value);
    }
  }, {
    key: 'getKeyItem',
    value: function getKeyItem(key) {
      return this.cookieStorage.getItem(key);
    }
  }, {
    key: 'getMessagingKey',
    value: function getMessagingKey() {
      return this.getKeyItem(MESSAGING_KEY + ':' + this.account_key);
    }
  }, {
    key: 'getMessagingPhrase',
    value: function getMessagingPhrase() {
      return this.getKeyItem(MESSAGING_PHRASE + ':' + this.account_key);
    }
  }, {
    key: 'initKeys',
    value: function initKeys() {
      var sig_key = this.getMessagingKey();
      var sig_phrase = this.getMessagingPhrase();
      // lock in the message to the hardcoded one
      if (sig_key && sig_phrase == PROMPT_MESSAGE) {
        this.setAccount(sig_key, sig_phrase);
      } else {
        this.promptInit();
      }
    }
  }, {
    key: 'startConversing',
    value: function startConversing() {
      if (this.ipfs_bound_account == this.account_key && !this.account) {
        // remote has been initialized
        this.initKeys();
      } else {
        this.convs_enabled = true;
      }
    }
  }, {
    key: 'init',
    value: function () {
      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(key) {
        var scopedSubStartKeyName, scopedStatusesKeyName;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.account_key = key;
                this.account = undefined;
                this.events.emit('new', this.account_key);
                // just start it up here
                _context6.next = 5;
                return this.initRemote();

              case 5:
                if (!_context6.sent) {
                  _context6.next = 11;
                  break;
                }

                this.pub_sig = this.getKeyItem(PUB_MESSAGING_SIG + ':' + this.account_key);
                this.pub_msg = this.getKeyItem(PUB_MESSAGING + ':' + this.account_key);

                this.initConvs();
                this.events.emit('initialized', this.account_key);
                if (this.convs_enabled || this.getMessagingKey()) {
                  this.initKeys();
                }

              case 11:
                // bootstrap read status
                scopedSubStartKeyName = storeKeys.messageSubscriptionStart + ':' + this.account_key;

                if (!localStorage.getItem(scopedSubStartKeyName)) {
                  localStorage.setItem(scopedSubStartKeyName, JSON.stringify(Date.now()));
                }
                scopedStatusesKeyName = storeKeys.messageStatuses + ':' + this.account_key;

                if (!localStorage.getItem(scopedStatusesKeyName)) {
                  localStorage.setItem(scopedStatusesKeyName, JSON.stringify({}));
                }

              case 15:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function init(_x7) {
        return _ref7.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: 'refreshPeerList',
    value: function refreshPeerList() {
      var _this2 = this;

      this.ipfs.swarm.peers().then(function (peers) {
        var peer_ids = peers.map(function (x) {
          return x.peer._idB58String;
        });
        if (peer_ids && !_this2.last_peers || peer_ids && peer_ids.sort().join() !== _this2.last_peers.sort().join()) {
          _this2.last_peers = peer_ids;
          console.log('New peers:', _this2.last_peers);
        }
        //let's do a 15 second reconnect policy
        if (_this2.ipfs.__reconnect_peers && Date.now() - _this2.last_connect_time > 20000 && _this2.last_peers) {
          _this2.last_connect_time = Date.now();
          //every 20 seconds either connect or ping
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = Object.keys(_this2.ipfs.__reconnect_peers)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var peer = _step2.value;

              if (!_this2.last_peers.includes(peer)) {
                var peer_address = _this2.ipfs.__reconnect_peers[peer];
                console.log('Reconnecting:', peer_address);
                _this2.ipfs.swarm.connect(peer_address);
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
        }
      });
    }
  }, {
    key: 'initConvs',
    value: function initConvs() {
      var _this3 = this;

      this.main_orbit.keystore.registerSignVerify(this.CONV_INIT_PREFIX, this.signInitPair.bind(this), this.verifyConversationSignature.bind(this), function (message) {
        var eth_address = message.id.substr(-42); // hopefully the last 42 is the eth address
        if (eth_address == _this3.account_key) {
          _this3.events.emit('pending_conv', message.payload.key);
          var remote_address = message.payload.key;
          _this3.initRoom(remote_address);
          // may be overkill but may help prevent https://github.com/OriginProtocol/origin-js/issues/559
          _this3.getConvo(remote_address);
        }
      });
      this.main_orbit.keystore.registerSignVerify(this.CONV, this.signInitPair.bind(this), this.verifyMessageSignature.bind(this));

      this.watchMyConv();
    }
  }, {
    key: 'orbitStoreOptions',
    value: function orbitStoreOptions(options) {
      return Object.assign(Object.assign({}, DEFAULT_ORBIT_OPTIONS), options);
    }
  }, {
    key: 'initRemote',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
        var _this4 = this;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this.ipfs = this.ipfsCreator(this.account_key);

                return _context8.abrupt('return', new Promise(function (resolve, reject) {
                  _this4.ipfs.on('ready', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
                    var main_keystore;
                    return regeneratorRuntime.wrap(function _callee7$(_context7) {
                      while (1) {
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            if (_this4.refreshIntervalId) {
                              clearInterval(_this4.refreshIntervalId);
                            }

                            _this4.last_connect_time = Date.now();
                            _this4.refreshIntervalId = setInterval(_this4.refreshPeerList.bind(_this4), 5000);

                            main_keystore = new InsertOnlyKeystore(_this4.account_key, '-');

                            _this4.main_orbit = new _this4.OrbitDB(_this4.ipfs, 'main_orbit' + _this4.account_key, { keystore: main_keystore });

                            main_keystore.registerSignVerify(_this4.GLOBAL_KEYS, _this4.signRegistry.bind(_this4), _this4.verifyRegistrySignature.bind(_this4), _this4.postVerifyRegistry.bind(_this4));

                            // took a hint from peerpad
                            _context7.next = 8;
                            return _this4.main_orbit.kvstore(_this4.GLOBAL_KEYS, _this4.orbitStoreOptions({ write: ['*'] }));

                          case 8:
                            _this4.global_keys = _context7.sent;
                            _context7.prev = 9;
                            _context7.next = 12;
                            return _this4.global_keys.load();

                          case 12:
                            _context7.next = 17;
                            break;

                          case 14:
                            _context7.prev = 14;
                            _context7.t0 = _context7['catch'](9);

                            console.error(_context7.t0);

                          case 17:

                            _this4.ipfs_bound_account = _this4.account_key;
                            resolve(_this4.global_keys);

                          case 19:
                          case 'end':
                            return _context7.stop();
                        }
                      }
                    }, _callee7, _this4, [[9, 14]]);
                  }))).on('error', reject);
                }));

              case 2:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function initRemote() {
        return _ref8.apply(this, arguments);
      }

      return initRemote;
    }()
  }, {
    key: 'signRegistry',
    value: function signRegistry() {
      return this.pub_sig;
    }
  }, {
    key: 'signMessaging',
    value: function signMessaging(key, data) {
      return this.account.sign(data).signature;
    }
  }, {
    key: 'signInitPair',
    value: function signInitPair(key, data) {
      return this.account.sign(data).signature;
    }
  }, {
    key: 'verifySignature',
    value: function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt('return', function () /* signature, key, data */{
                  // pass through for now
                  return true;
                });

              case 1:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function verifySignature() {
        return _ref10.apply(this, arguments);
      }

      return verifySignature;
    }()
  }, {
    key: 'postVerifyRegistry',
    value: function postVerifyRegistry(message) {
      var set_key = message.payload.key;
      this.events.emit('registered-' + set_key, message.payload.value);
    }
  }, {
    key: 'getRegisteredKey',
    value: function () {
      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(key) {
        var _this5 = this;

        var entry;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                entry = this.global_keys.get(key);

                if (!entry) {
                  _context10.next = 5;
                  break;
                }

                return _context10.abrupt('return', entry);

              case 5:
                return _context10.abrupt('return', new Promise(function (resolve) {
                  //resolve to nothing after a second
                  setTimeout(resolve, 5000);
                  _this5.events.on('registered-' + key, function (entry) {
                    resolve(entry);
                  });
                }));

              case 6:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function getRegisteredKey(_x8) {
        return _ref11.apply(this, arguments);
      }

      return getRegisteredKey;
    }()
  }, {
    key: 'verifyRegistrySignature',
    value: function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(signature, key, message) {
        var value, set_key, verify_address, extracted_address, verify_ph_address;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                value = message.payload.value;
                set_key = message.payload.key;
                verify_address = web3.eth.accounts.recover(value.msg, signature);

                if (!(verify_address == set_key && value.msg.includes(value.address))) {
                  _context11.next = 8;
                  break;
                }

                extracted_address = '0x' + web3.utils.sha3(value.pub_key).substr(-40);

                if (!(extracted_address == value.address.toLowerCase())) {
                  _context11.next = 8;
                  break;
                }

                verify_ph_address = web3.eth.accounts.recover(value.ph, value.phs);
                return _context11.abrupt('return', verify_ph_address == value.address);

              case 8:
                return _context11.abrupt('return', false);

              case 9:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function verifyRegistrySignature(_x9, _x10, _x11) {
        return _ref12.apply(this, arguments);
      }

      return verifyRegistrySignature;
    }()
  }, {
    key: 'verifyMessageSignature',
    value: function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(signature, key, message, buffer) {
        var verify_address, entry;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                verify_address = web3.eth.accounts.recover(buffer.toString('utf8'), signature);
                _context12.next = 3;
                return this.getRegisteredKey(key);

              case 3:
                entry = _context12.sent;

                if (!(entry && entry.address == verify_address)) {
                  _context12.next = 6;
                  break;
                }

                return _context12.abrupt('return', true);

              case 6:
                return _context12.abrupt('return', false);

              case 7:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function verifyMessageSignature(_x12, _x13, _x14, _x15) {
        return _ref13.apply(this, arguments);
      }

      return verifyMessageSignature;
    }()
  }, {
    key: 'verifyConversationSignature',
    value: function () {
      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(signature, key, message, buffer) {
        var verify_address, eth_address, entry;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                verify_address = web3.eth.accounts.recover(buffer.toString('utf8'), signature);
                eth_address = message.id.substr(-42); //hopefully the last 42 is the eth address

                if (!(key == message.payload.key || key == eth_address)) {
                  _context13.next = 8;
                  break;
                }

                _context13.next = 5;
                return this.getRegisteredKey(key);

              case 5:
                entry = _context13.sent;

                if (!(entry && entry.address == verify_address)) {
                  _context13.next = 8;
                  break;
                }

                return _context13.abrupt('return', true);

              case 8:
                return _context13.abrupt('return', false);

              case 9:
              case 'end':
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function verifyConversationSignature(_x16, _x17, _x18, _x19) {
        return _ref14.apply(this, arguments);
      }

      return verifyConversationSignature;
    }()
  }, {
    key: 'initMessaging',
    value: function () {
      var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var entry, account_match;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                entry = this.getRemoteMessagingSig();
                account_match = entry && entry.address == this.account.address;

                if (this.pub_sig && this.pub_msg) {
                  _context14.next = 12;
                  break;
                }

                if (!account_match) {
                  _context14.next = 8;
                  break;
                }

                this.pub_sig = entry.sig;
                this.pub_msg = entry.msg;
                _context14.next = 10;
                break;

              case 8:
                _context14.next = 10;
                return this.promptForSignature();

              case 10:
                _context14.next = 13;
                break;

              case 12:
                if (!account_match) {
                  this.setRemoteMessagingSig();
                }

              case 13:
                this.events.emit('ready', this.account_key);
                this.loadMyConvs();

              case 15:
              case 'end':
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function initMessaging() {
        return _ref15.apply(this, arguments);
      }

      return initMessaging;
    }()
  }, {
    key: 'getRemoteMessagingSig',
    value: function getRemoteMessagingSig() {
      var entry = this.global_keys.get(this.account_key);
      if (entry && entry.address == this.account.address) {
        return entry;
      }
    }
  }, {
    key: 'setRemoteMessagingSig',
    value: function setRemoteMessagingSig() {
      var msg = this.getMessagingPhrase();
      this.global_keys.set(this.account_key, {
        address: this.account.address,
        msg: this.pub_msg,
        pub_key: this.account.publicKey,
        ph: msg,
        phs: this.account.sign(msg).signature
      });
    }
  }, {
    key: 'setAccount',
    value: function setAccount(key_str, phrase_str) {
      this.account = this.web3.eth.accounts.privateKeyToAccount(key_str);
      this.account.publicKey = '0x' + _secp256k2.default.publicKeyCreate(new Buffer(key_str.substring(2), 'hex'), false).slice(1).toString('hex');
      // send it to local storage
      var scopedMessagingKeyName = MESSAGING_KEY + ':' + this.account_key;
      this.setKeyItem(scopedMessagingKeyName, key_str);
      //set phrase in the cookie
      var scopedMessagingPhraseName = MESSAGING_PHRASE + ':' + this.account_key;
      this.setKeyItem(scopedMessagingPhraseName, phrase_str);
      this.initMessaging();
    }
  }, {
    key: 'promptInit',
    value: function () {
      var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var sig_phrase, signature, sig_key;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                sig_phrase = PROMPT_MESSAGE;
                _context15.next = 3;
                return this.web3.eth.personal.sign(sig_phrase, this.account_key);

              case 3:
                signature = _context15.sent;


                // 32 bytes in hex + 0x
                sig_key = signature.substring(0, 66);


                this.setAccount(sig_key, sig_phrase);

              case 6:
              case 'end':
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function promptInit() {
        return _ref16.apply(this, arguments);
      }

      return promptInit;
    }()
  }, {
    key: 'promptForSignature',
    value: function () {
      var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var scopedPubSigKeyName, scopedPubMessagingKeyName;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                this.pub_msg = PROMPT_PUB_KEY + this.account.address;
                _context16.next = 3;
                return this.web3.eth.personal.sign(this.pub_msg, this.account_key);

              case 3:
                this.pub_sig = _context16.sent;
                scopedPubSigKeyName = PUB_MESSAGING_SIG + ':' + this.account_key;

                this.setKeyItem(scopedPubSigKeyName, this.pub_sig);
                scopedPubMessagingKeyName = PUB_MESSAGING + ':' + this.account_key;

                this.setKeyItem(scopedPubMessagingKeyName, this.pub_msg);
                this.setRemoteMessagingSig();

              case 9:
              case 'end':
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function promptForSignature() {
        return _ref17.apply(this, arguments);
      }

      return promptForSignature;
    }()
  }, {
    key: 'getShareRoom',
    value: function () {
      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(room_id, db_type, writers, onShare) {
        var _this6 = this;

        var key, r;
        return regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                key = room_id;

                if (writers.length != 1 || writers[0] != '*') {
                  key = room_id + '-' + writers.join('-');
                }

                if (!this.sharedRooms[key]) {
                  _context17.next = 10;
                  break;
                }

                if (!(this.sharedRooms[key] == 'wait')) {
                  _context17.next = 7;
                  break;
                }

                return _context17.abrupt('return', new Promise(function (resolve) {
                  _this6.events.on('SharedRoom.' + key, function (room) {
                    console.log('Returning shared room:', key);
                    resolve(room);
                  });
                }));

              case 7:
                return _context17.abrupt('return', this.sharedRooms[key]);

              case 8:
                _context17.next = 20;
                break;

              case 10:
                this.sharedRooms[key] = 'wait';
                _context17.next = 13;
                return this.main_orbit[db_type](room_id, this.orbitStoreOptions({ write: writers }));

              case 13:
                r = _context17.sent;

                this.sharedRooms[key] = r;
                this.events.emit('SharedRoom.' + key, r);
                if (onShare) {
                  onShare(r);
                }
                _context17.next = 19;
                return r.load();

              case 19:
                return _context17.abrupt('return', r);

              case 20:
              case 'end':
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function getShareRoom(_x20, _x21, _x22, _x23) {
        return _ref18.apply(this, arguments);
      }

      return getShareRoom;
    }()
  }, {
    key: 'generateRoomId',
    value: function generateRoomId(converser1, converser2) {
      var keys = [converser1, converser2];
      keys.sort();

      return keys.join('-');
    }
  }, {
    key: 'isRoomId',
    value: function isRoomId(str) {
      return str.includes('-');
    }
  }, {
    key: 'getRecipients',
    value: function getRecipients(key) {
      return key.split('-');
    }
  }, {
    key: 'getSharedKeys',
    value: function getSharedKeys(room_id) {
      var room = this.convs[room_id];

      return room ? room.keys || [] : [];
    }
  }, {
    key: 'getConvo',
    value: function getConvo(eth_address) {
      var room = this.CONV_INIT_PREFIX + eth_address;
      return this.getShareRoom(room, 'kvstore', ['*']);
    }
  }, {
    key: 'hasConversedWith',
    value: function hasConversedWith(eth_address) {
      var room_id = this.generateRoomId(this.account_key, eth_address);

      return this.convs[room_id];
    }
  }, {
    key: 'decryptMsg',
    value: function decryptMsg(iv_str, msg, key) {
      var buffer = _cryptoJs2.default.AES.decrypt(msg, key, {
        iv: _cryptoJs2.default.enc.Base64.parse(iv_str)
      });
      var out_text = void 0;
      try {
        out_text = buffer.toString(_cryptoJs2.default.enc.Utf8);
      } catch (error) {
        return;
      }

      if (out_text && out_text.length > 6) {
        var verify_text = out_text.slice(0, -6);
        var sha_check = out_text.substr(-6);
        if (sha_check == _cryptoJs2.default.enc.Base64.stringify(_cryptoJs2.default.SHA1(verify_text)).substr(0, 6)) {
          return verify_text;
        }
      }
    }
  }, {
    key: 'processEntry',
    value: function processEntry(entry, conv_obj, onMessage, onEncrypted) {
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = entry.payload.value[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var v = _step3.value;

          if (v.type == 'key') {
            if (v.address == this.account_key) {
              var key = this.ec_decrypt(v.ekey);
              if (key && !conv_obj.keys.includes(key)) {
                conv_obj.keys.push(key);
              }
            }
          } else if (v.type == 'msg') {
            var decrypted = false;
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
              for (var _iterator4 = conv_obj.keys[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                var _key = _step4.value;

                var buffer = this.decryptMsg(v.i, v.emsg, _key);
                if (buffer != undefined) {
                  var obj = buffer;
                  try {
                    obj = JSON.parse(buffer);
                  } catch (error) {
                    // pass
                  }
                  if (!validateMessage(obj)) {
                    // force it to be an object
                    continue;
                  }
                  onMessage(obj, v.address);
                  decrypted = true;
                  break;
                }
              }
            } catch (err) {
              _didIteratorError4 = true;
              _iteratorError4 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion4 && _iterator4.return) {
                  _iterator4.return();
                }
              } finally {
                if (_didIteratorError4) {
                  throw _iteratorError4;
                }
              }
            }

            if (!decrypted && onEncrypted) {
              onEncrypted(v.emsg, v.address);
            }
          }
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    }
  }, {
    key: 'processMessage',
    value: function processMessage(room_id, room, ignore_current_hash) {
      var _this7 = this;

      if (!this.convs[room_id]) {
        this.convs[room_id] = { keys: [] };
      }
      var conv_obj = this.convs[room_id];
      var last_hashes = ignore_current_hash ? [] : conv_obj.last_hashes || [];
      var ops = room._index.get();
      var hashes = ops.map(function (e) {
        return e.hash;
      });
      var recipients = this.getRecipients(room_id);
      var messageStatuses = JSON.parse(localStorage.getItem(storeKeys.messageStatuses + ':' + this.account_key));
      // convert stored timestamp string to date
      var subscriptionStart = new Date(+localStorage.getItem(storeKeys.messageSubscriptionStart + ':' + this.account_key));

      ops.forEach(function (entry, index) {
        if (index == last_hashes.indexOf(entry.hash)) {
          // we seen this already
          return;
        }

        var withStatus = function withStatus(obj, senderAddress) {
          var isWatched = obj.created > subscriptionStart;
          var status = isWatched && messageStatuses[entry.hash] !== READ_STATUS ? UNREAD_STATUS : READ_STATUS;

          return Object.assign({}, obj, {
            hash: entry.hash,
            roomId: room_id,
            index: index,
            recipients: recipients,
            senderAddress: senderAddress,
            status: status
          });
        };

        _this7.processEntry(entry, conv_obj, function (message, address) {
          _this7.events.emit('msg', withStatus(message, address));
        }, function (emessage, address) {
          _this7.events.emit('emsg', withStatus(emessage, address));
        });
      });

      conv_obj.last_hashes = hashes;
      conv_obj.last_hash = hashes[hashes.length - 1];
    }
  }, {
    key: 'getAllMessages',
    value: function getAllMessages(remote_eth_address) {
      var _this8 = this;

      var room_id = this.generateRoomId(this.account_key, remote_eth_address);
      var conv_obj = this.convs[room_id];

      if (conv_obj) {
        var room = this.sharedRooms[this.CONV + '-' + room_id];
        var ops = room._index.get();
        var messages = [];
        ops.forEach(function (entry, index) {
          _this8.processEntry(entry, conv_obj, function (message, address) {
            messages.push({ msg: message, index: index, address: address, hash: entry.hash });
          });
        });
        return messages;
      }
    }
  }, {
    key: 'getAllRawMessages',
    value: function getAllRawMessages(remote_eth_address) {
      var room_id = this.generateRoomId(this.account_key, remote_eth_address);
      var conv_obj = this.convs[room_id];

      if (conv_obj) {
        var room = this.sharedRooms[this.CONV + '-' + room_id];
        var ops = room._index.get();
        var messages = [];
        ops.forEach(function (entry) {
          var _iteratorNormalCompletion5 = true;
          var _didIteratorError5 = false;
          var _iteratorError5 = undefined;

          try {
            for (var _iterator5 = entry.payload.value[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
              var v = _step5.value;

              messages.push(v);
            }
          } catch (err) {
            _didIteratorError5 = true;
            _iteratorError5 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion5 && _iterator5.return) {
                _iterator5.return();
              }
            } finally {
              if (_didIteratorError5) {
                throw _iteratorError5;
              }
            }
          }
        });
        return messages;
      }
    }
  }, {
    key: 'getMessagesCount',
    value: function getMessagesCount(remote_eth_address) {
      var room_id = this.generateRoomId(this.account_key, remote_eth_address);
      var conv_obj = this.convs[room_id];

      if (conv_obj) {
        var room = this.sharedRooms[this.CONV + '-' + room_id];
        var ops = room._index.get();
        var messages_count = 0;
        ops.forEach(function (entry) {
          var _iteratorNormalCompletion6 = true;
          var _didIteratorError6 = false;
          var _iteratorError6 = undefined;

          try {
            for (var _iterator6 = entry.payload.value[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
              var v = _step6.value;

              if (v.type == 'msg') {
                messages_count += 1;
              }
            }
          } catch (err) {
            _didIteratorError6 = true;
            _iteratorError6 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion6 && _iterator6.return) {
                _iterator6.return();
              }
            } finally {
              if (_didIteratorError6) {
                throw _iteratorError6;
              }
            }
          }
        });
        return messages_count;
      }
    }
  }, {
    key: 'initRoom',
    value: function () {
      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(room_id_or_address) {
        var _this9 = this;

        var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var room_id, writers, room;
        return regeneratorRuntime.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                room_id = void 0, writers = void 0;
                // called by an arbitrator who has key(s)

                if (this.isRoomId(room_id_or_address)) {
                  room_id = room_id_or_address;
                  writers = this.getRecipients(room_id_or_address).sort();

                  this.convs[room_id_or_address] = { keys: keys
                    // called by a participant in the conversation
                  };
                } else {
                  writers = [this.account_key, room_id_or_address].sort();
                  room_id = this.generateRoomId.apply(this, _toConsumableArray(writers));
                }

                _context18.next = 4;
                return this.getShareRoom(this.CONV, 'eventlog', writers, function (room) {
                  room.events.on('write', function () /* dbname, entry, items */{
                    _this9.processMessage(room_id, room);
                  });
                  room.events.on('ready', function () /* dbname, entry, items */{
                    _this9.processMessage(room_id, room);
                  });
                  room.events.on('replicated', function () /* dbname */{
                    console.log('process Message from replicated');
                    _this9.processMessage(room_id, room);
                  });
                });

              case 4:
                room = _context18.sent;
                return _context18.abrupt('return', room);

              case 6:
              case 'end':
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));

      function initRoom(_x25) {
        return _ref19.apply(this, arguments);
      }

      return initRoom;
    }()
  }, {
    key: 'watchMyConv',
    value: function () {
      var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
        return regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.getConvo(this.account_key);

              case 2:
              case 'end':
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function watchMyConv() {
        return _ref20.apply(this, arguments);
      }

      return watchMyConv;
    }()
  }, {
    key: 'getMyConvs',
    value: function () {
      var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {
        var watchConv;
        return regeneratorRuntime.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.next = 2;
                return this.getConvo(this.account_key);

              case 2:
                watchConv = _context20.sent;
                return _context20.abrupt('return', watchConv.all());

              case 4:
              case 'end':
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function getMyConvs() {
        return _ref21.apply(this, arguments);
      }

      return getMyConvs;
    }()
  }, {
    key: 'loadMyConvs',
    value: function () {
      var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
        var _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, k;

        return regeneratorRuntime.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _iteratorNormalCompletion7 = true;
                _didIteratorError7 = false;
                _iteratorError7 = undefined;
                _context21.prev = 3;
                _context21.t0 = Object;
                _context21.next = 7;
                return this.getMyConvs();

              case 7:
                _context21.t1 = _context21.sent;
                _context21.t2 = Symbol.iterator;
                _iterator7 = _context21.t0.keys.call(_context21.t0, _context21.t1)[_context21.t2]();

              case 10:
                if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {
                  _context21.next = 16;
                  break;
                }

                k = _step7.value;

                this.initRoom(k);

              case 13:
                _iteratorNormalCompletion7 = true;
                _context21.next = 10;
                break;

              case 16:
                _context21.next = 22;
                break;

              case 18:
                _context21.prev = 18;
                _context21.t3 = _context21['catch'](3);
                _didIteratorError7 = true;
                _iteratorError7 = _context21.t3;

              case 22:
                _context21.prev = 22;
                _context21.prev = 23;

                if (!_iteratorNormalCompletion7 && _iterator7.return) {
                  _iterator7.return();
                }

              case 25:
                _context21.prev = 25;

                if (!_didIteratorError7) {
                  _context21.next = 28;
                  break;
                }

                throw _iteratorError7;

              case 28:
                return _context21.finish(25);

              case 29:
                return _context21.finish(22);

              case 30:
              case 'end':
                return _context21.stop();
            }
          }
        }, _callee21, this, [[3, 18, 22, 30], [23,, 25, 29]]);
      }));

      function loadMyConvs() {
        return _ref22.apply(this, arguments);
      }

      return loadMyConvs;
    }()
  }, {
    key: 'ec_encrypt',
    value: function ec_encrypt(text, pub_key) {
      var plaintext = new Buffer(text);
      if (!pub_key) {
        pub_key = this.account.publicKey;
      }
      return this.ecies.encrypt(new Buffer(pub_key.substring(2), 'hex'), plaintext).toString('hex');
    }
  }, {
    key: 'ec_decrypt',
    value: function ec_decrypt(buffer) {
      if (this.account) {
        return this.ecies.decrypt(new Buffer(this.account.privateKey.substring(2), 'hex'), new Buffer(buffer, 'hex')).toString('utf8');
      }
    }
  }, {
    key: 'canConverseWith',
    value: function canConverseWith(remote_eth_address) {
      var account_key = this.account_key,
          global_keys = this.global_keys;


      return this.canSendMessages() && account_key !== remote_eth_address && global_keys && global_keys.get(remote_eth_address);
    }
  }, {
    key: 'canReceiveMessages',
    value: function canReceiveMessages(remote_eth_address) {
      var global_keys = this.global_keys;


      return global_keys && global_keys.get(remote_eth_address);
    }
  }, {
    key: 'canSendMessages',
    value: function canSendMessages() {
      var account = this.account,
          account_key = this.account_key;


      return account && account_key;
    }
  }, {
    key: 'startConv',
    value: function () {
      var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(remote_eth_address) {
        var entry, self_init_conv, remote_init_conv, ts, room, encrypt_key;
        return regeneratorRuntime.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                entry = this.global_keys.get(remote_eth_address);

                // remote account does not have messaging enabled

                if (entry) {
                  _context22.next = 3;
                  break;
                }

                return _context22.abrupt('return');

              case 3:
                _context22.next = 5;
                return this.getConvo(this.account_key);

              case 5:
                self_init_conv = _context22.sent;
                _context22.next = 8;
                return this.getConvo(remote_eth_address);

              case 8:
                remote_init_conv = _context22.sent;
                ts = Date.now();


                remote_init_conv.set(this.account_key, ts);
                self_init_conv.set(remote_eth_address, ts);

                _context22.next = 14;
                return this.initRoom(remote_eth_address);

              case 14:
                room = _context22.sent;

                if (!(room.iterator({ limit: 2 }).collect().length < 2)) {
                  _context22.next = 19;
                  break;
                }

                encrypt_key = (0, _cryptoRandomString2.default)(32).toString('hex');
                _context22.next = 19;
                return room.add([{
                  type: 'key',
                  ekey: this.ec_encrypt(encrypt_key),
                  maddress: this.account.address,
                  address: this.account_key
                }, {
                  type: 'key',
                  ekey: this.ec_encrypt(encrypt_key, entry.pub_key),
                  maddress: entry.address,
                  address: remote_eth_address
                }]);

              case 19:
                return _context22.abrupt('return', room);

              case 20:
              case 'end':
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));

      function startConv(_x26) {
        return _ref23.apply(this, arguments);
      }

      return startConv;
    }()
  }, {
    key: 'sendConvMessage',
    value: function () {
      var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(room_id_or_address, message_obj) {
        var _this10 = this;

        var remote_eth_address, room_id, room, message, key, iv, message_str, sha_sub, encmsg, iv_str;
        return regeneratorRuntime.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                if (!this._sending_message) {
                  _context23.next = 2;
                  break;
                }

                return _context23.abrupt('return', false);

              case 2:
                remote_eth_address = void 0, room_id = void 0;

                if (this.isRoomId(room_id_or_address)) {
                  room_id = room_id_or_address;
                  remote_eth_address = this.getRecipients(room_id).find(function (addr) {
                    return addr !== _this10.account_key;
                  });
                } else {
                  remote_eth_address = room_id_or_address;
                  room_id = this.generateRoomId(this.account_key, remote_eth_address);
                }
                room = void 0;

                if (!(this.convs[room_id] && this.convs[room_id].keys.length)) {
                  _context23.next = 11;
                  break;
                }

                _context23.next = 8;
                return this.initRoom(remote_eth_address);

              case 8:
                room = _context23.sent;
                _context23.next = 14;
                break;

              case 11:
                _context23.next = 13;
                return this.startConv(remote_eth_address);

              case 13:
                room = _context23.sent;

              case 14:
                if (room) {
                  _context23.next = 16;
                  break;
                }

                return _context23.abrupt('return');

              case 16:
                if (typeof message_obj == 'string') {
                  message_obj = { content: message_obj };
                }
                message = Object.assign({}, message_obj);
                // set timestamp

                message.created = Date.now();

                if (validateMessage(message)) {
                  _context23.next = 21;
                  break;
                }

                return _context23.abrupt('return', false);

              case 21:
                key = this.convs[room_id].keys[0];
                iv = _cryptoJs2.default.lib.WordArray.random(16);
                message_str = JSON.stringify(message);
                sha_sub = _cryptoJs2.default.enc.Base64.stringify(_cryptoJs2.default.SHA1(message_str)).substr(0, 6);
                encmsg = _cryptoJs2.default.AES.encrypt(message_str + sha_sub, key, {
                  iv: iv
                }).toString();
                iv_str = _cryptoJs2.default.enc.Base64.stringify(iv);

                this._sending_message = true;
                // include a random iv str so that people can't match strings of the same message
                _context23.next = 30;
                return room.add([{ type: 'msg', emsg: encmsg, i: iv_str, address: this.account_key }]);

              case 30:
                this._sending_message = false;
                return _context23.abrupt('return', room_id);

              case 32:
              case 'end':
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));

      function sendConvMessage(_x27, _x28) {
        return _ref24.apply(this, arguments);
      }

      return sendConvMessage;
    }()

    // messages supplied by the 'msg' event have status included
    // this is a convenience method for tracking status on spoofed messages

  }, {
    key: 'getStatus',
    value: function getStatus(_ref25) {
      var hash = _ref25.hash;

      var messageStatuses = JSON.parse(localStorage.getItem(storeKeys.messageStatuses + ':' + this.account_key));
      var status = messageStatuses && messageStatuses[hash] === READ_STATUS ? READ_STATUS : UNREAD_STATUS;
      return status;
    }

    // we allow the entire message to be passed in (for consistency with other resources + convenience)
    // however all we are updating is the status

  }, {
    key: 'set',
    value: function set(_ref26) {
      var hash = _ref26.hash,
          status = _ref26.status;

      var scopedStatusesKeyName = storeKeys.messageStatuses + ':' + this.account_key;
      var messageStatuses = JSON.parse(localStorage.getItem(scopedStatusesKeyName));
      messageStatuses[hash] = status;
      localStorage.setItem(scopedStatusesKeyName, JSON.stringify(messageStatuses));
    }
  }]);

  return Messaging;
}();

exports.default = Messaging;

/***/ }),

/***/ "./src/resources/token.js":
/*!********************************!*\
  !*** ./src/resources/token.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _OriginToken = __webpack_require__(/*! ./../../contracts/build/contracts/OriginToken.json */ "./contracts/build/contracts/OriginToken.json");

var _OriginToken2 = _interopRequireDefault(_OriginToken);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Token is a light wrapper around the OriginToken contract.
var Token = function () {
  /**
   * @constructor
   * @param {ContractService} contractService - Contract service
   * @param {Marketplace} marketplace - Marketplace (to get token address)
   */
  function Token(_ref) {
    var contractService = _ref.contractService,
        marketplace = _ref.marketplace;

    _classCallCheck(this, Token);

    this.contractService = contractService;
    // In getContract(), we will retrieve the address of the Origin token
    // contract from the marketplace contract.
    this.getTokenAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return marketplace.getTokenAddress();

            case 2:
              return _context.abrupt('return', _context.sent);

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));
  }

  /**
   * Returns Origin token contract, loading it from the address stored in the
   * Marketplace contract. This *may* return an OriginToken contract whose
   * implementation is newer than the Marketplace contract. This ensures that
   * Origin.js has forward compatibility with token contracts, as long as we
   * don't change or remove existing token features.
   * @returns OriginToken contract
   */


  _createClass(Token, [{
    key: 'getContract',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var web3;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.contract) {
                  _context2.next = 9;
                  break;
                }

                _context2.next = 3;
                return this.getTokenAddress();

              case 3:
                this.contractAddress = _context2.sent;
                web3 = this.contractService.web3;

                this.contract = new web3.eth.Contract(_OriginToken2.default.abi, this.contractAddress);
                _context2.next = 8;
                return this.contract.methods.decimals().call();

              case 8:
                this.decimals = _context2.sent;

              case 9:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getContract() {
        return _ref3.apply(this, arguments);
      }

      return getContract;
    }()

    /**
     * Returns a balance for an address.
     */

  }, {
    key: 'balanceOf',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(address) {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.getContract();

              case 2:
                _context3.next = 4;
                return this.contract.methods.balanceOf(address).call();

              case 4:
                return _context3.abrupt('return', _context3.sent);

              case 5:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function balanceOf(_x) {
        return _ref4.apply(this, arguments);
      }

      return balanceOf;
    }()

    /**
     * Returns true if transfers and approvals of tokens are paused at the
     * contract level, false if not.
     */

  }, {
    key: 'isPaused',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.getContract();

              case 2:
                _context4.next = 4;
                return this.contract.methods.paused().call();

              case 4:
                return _context4.abrupt('return', _context4.sent);

              case 5:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function isPaused() {
        return _ref5.apply(this, arguments);
      }

      return isPaused;
    }()
  }]);

  return Token;
}();

exports.default = Token;

/***/ }),

/***/ "./src/resources/users.js":
/*!********************************!*\
  !*** ./src/resources/users.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _resolver = __webpack_require__(/*! ../contractInterface/users/resolver */ "./src/contractInterface/users/resolver.js");

var _resolver2 = _interopRequireDefault(_resolver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Users = function () {
  function Users(_ref) {
    var contractService = _ref.contractService,
        ipfsService = _ref.ipfsService,
        blockEpoch = _ref.blockEpoch;

    _classCallCheck(this, Users);

    this.resolver = new _resolver2.default({ contractService: contractService, ipfsService: ipfsService, blockEpoch: blockEpoch });
  }

  /* possible options values:
   * - confirmationCallback(confirmationCount, transactionReceipt) -> called repeatedly after a transaction is mined
   * - transactionHashCallback(hash) -> called immediately when the transaction hash is received
   */


  _createClass(Users, [{
    key: 'set',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {
        var profile = _ref2.profile,
            _ref2$attestations = _ref2.attestations,
            attestations = _ref2$attestations === undefined ? [] : _ref2$attestations,
            _ref2$options = _ref2.options,
            options = _ref2$options === undefined ? {} : _ref2$options;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this.resolver.set({ profile: profile, attestations: attestations, options: options }));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function set(_x) {
        return _ref3.apply(this, arguments);
      }

      return set;
    }()
  }, {
    key: 'get',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(address) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt('return', this.resolver.get(address));

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x2) {
        return _ref4.apply(this, arguments);
      }

      return get;
    }()
  }]);

  return Users;
}();

module.exports = Users;

/***/ }),

/***/ "./src/services/contract-service.js":
/*!******************************************!*\
  !*** ./src/services/contract-service.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ClaimHolderRegistered = __webpack_require__(/*! ./../../contracts/build/contracts/ClaimHolderRegistered.json */ "./contracts/build/contracts/ClaimHolderRegistered.json");

var _ClaimHolderRegistered2 = _interopRequireDefault(_ClaimHolderRegistered);

var _ClaimHolderPresigned = __webpack_require__(/*! ./../../contracts/build/contracts/ClaimHolderPresigned.json */ "./contracts/build/contracts/ClaimHolderPresigned.json");

var _ClaimHolderPresigned2 = _interopRequireDefault(_ClaimHolderPresigned);

var _ClaimHolderLibrary = __webpack_require__(/*! ./../../contracts/build/contracts/ClaimHolderLibrary.json */ "./contracts/build/contracts/ClaimHolderLibrary.json");

var _ClaimHolderLibrary2 = _interopRequireDefault(_ClaimHolderLibrary);

var _KeyHolderLibrary = __webpack_require__(/*! ./../../contracts/build/contracts/KeyHolderLibrary.json */ "./contracts/build/contracts/KeyHolderLibrary.json");

var _KeyHolderLibrary2 = _interopRequireDefault(_KeyHolderLibrary);

var _V00_UserRegistry = __webpack_require__(/*! ./../../contracts/build/contracts/V00_UserRegistry.json */ "./contracts/build/contracts/V00_UserRegistry.json");

var _V00_UserRegistry2 = _interopRequireDefault(_V00_UserRegistry);

var _OriginIdentity = __webpack_require__(/*! ./../../contracts/build/contracts/OriginIdentity.json */ "./contracts/build/contracts/OriginIdentity.json");

var _OriginIdentity2 = _interopRequireDefault(_OriginIdentity);

var _OriginToken = __webpack_require__(/*! ./../../contracts/build/contracts/OriginToken.json */ "./contracts/build/contracts/OriginToken.json");

var _OriginToken2 = _interopRequireDefault(_OriginToken);

var _V00_Marketplace = __webpack_require__(/*! ./../../contracts/build/contracts/V00_Marketplace.json */ "./contracts/build/contracts/V00_Marketplace.json");

var _V00_Marketplace2 = _interopRequireDefault(_V00_Marketplace);

var _bignumber = __webpack_require__(/*! bignumber.js */ "bignumber.js");

var _bignumber2 = _interopRequireDefault(_bignumber);

var _bs = __webpack_require__(/*! bs58 */ "bs58");

var _bs2 = _interopRequireDefault(_bs);

var _web = __webpack_require__(/*! web3 */ "web3");

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var emptyAddress = '0x0000000000000000000000000000000000000000';
var NUMBER_CONFIRMATIONS_TO_REPORT = 20;
var SUPPORTED_ERC20 = [{ symbol: 'OGN', decimals: 18, contractName: 'OriginToken' }];

var ContractService = function () {
  function ContractService() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        web3 = _ref.web3,
        contractAddresses = _ref.contractAddresses;

    _classCallCheck(this, ContractService);

    var externalWeb3 = web3 || window.web3;
    if (!externalWeb3) {
      throw new Error('web3 is required for Origin.js. Please pass in web3 as a config option.');
    }
    this.web3 = new _web2.default(externalWeb3.currentProvider);

    this.marketplaceContracts = { V00_Marketplace: _V00_Marketplace2.default };

    var contracts = Object.assign({
      V00_UserRegistry: _V00_UserRegistry2.default,
      ClaimHolderRegistered: _ClaimHolderRegistered2.default,
      ClaimHolderPresigned: _ClaimHolderPresigned2.default,
      OriginIdentity: _OriginIdentity2.default,
      OriginToken: _OriginToken2.default
    }, this.marketplaceContracts);

    this.libraries = {};
    this.libraries.ClaimHolderLibrary = _ClaimHolderLibrary2.default;
    this.libraries.KeyHolderLibrary = _KeyHolderLibrary2.default;
    this.contracts = {};
    for (var name in contracts) {
      this.contracts[name] = contracts[name];
      try {
        this.contracts[name].networks = Object.assign({}, this.contracts[name].networks, contractAddresses[name]);
      } catch (e) {
        /* Ignore */
      }
    }
  }

  _createClass(ContractService, [{
    key: 'currencies',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var _this = this;

        var currenciesList, currenciesObj;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this._currencies) {
                  _context2.next = 6;
                  break;
                }

                _context2.next = 3;
                return Promise.all(SUPPORTED_ERC20.map(function () {
                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(token) {
                    var deployed, address, obj;
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.deployed(_this.contracts[token.contractName]);

                          case 2:
                            deployed = _context.sent;
                            address = deployed.options.address;
                            obj = {};

                            obj[token.symbol] = {
                              address: address,
                              decimals: token.decimals
                            };
                            return _context.abrupt('return', obj);

                          case 7:
                          case 'end':
                            return _context.stop();
                        }
                      }
                    }, _callee, _this);
                  }));

                  return function (_x2) {
                    return _ref3.apply(this, arguments);
                  };
                }()));

              case 3:
                currenciesList = _context2.sent;
                currenciesObj = currenciesList.reduce(function (acc, cur) {
                  return Object.assign(acc, cur);
                }, {});

                this._currencies = Object.assign({ ETH: { address: emptyAddress } }, currenciesObj);

              case 6:
                return _context2.abrupt('return', this._currencies);

              case 7:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function currencies() {
        return _ref2.apply(this, arguments);
      }

      return currencies;
    }()

    // Returns an object that describes how many marketplace
    // contracts are available.

  }, {
    key: 'marketplaceContractsFound',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var _this2 = this;

        var networkId, contractCount, contractsFound;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return web3.eth.net.getId();

              case 2:
                networkId = _context3.sent;
                contractCount = Object.keys(this.marketplaceContracts).length;
                contractsFound = Object.keys(this.marketplaceContracts).filter(function (contractName) {
                  return _this2.marketplaceContracts[contractName].networks[networkId];
                }).length;
                return _context3.abrupt('return', {
                  allContractsPresent: contractCount === contractsFound,
                  someContractsPresent: contractsFound > 0
                });

              case 6:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function marketplaceContractsFound() {
        return _ref4.apply(this, arguments);
      }

      return marketplaceContractsFound;
    }()

    // Return bytes32 hex string from base58 encoded ipfs hash,
    // stripping leading 2 bytes from 34 byte IPFS hash
    // Assume IPFS defaults: function:0x12=sha2, size:0x20=256 bits
    // E.g. "QmNSUYVKDSvPUnRLKmuxk9diJ6yS96r1TrAXzjTiBcCLAL" -->
    // "0x017dfd85d4f6cb4dcd715a88101f7b1f06cd1e009b2327a0809d01eb9c91f231"

  }, {
    key: 'getBytes32FromIpfsHash',
    value: function getBytes32FromIpfsHash(ipfsListing) {
      return '0x' + _bs2.default.decode(ipfsListing).slice(2).toString('hex');
    }

    // Return base58 encoded ipfs hash from bytes32 hex string,
    // E.g. "0x017dfd85d4f6cb4dcd715a88101f7b1f06cd1e009b2327a0809d01eb9c91f231"
    // --> "QmNSUYVKDSvPUnRLKmuxk9diJ6yS96r1TrAXzjTiBcCLAL"

  }, {
    key: 'getIpfsHashFromBytes32',
    value: function getIpfsHashFromBytes32(bytes32Hex) {
      // Add our default ipfs values for first 2 bytes:
      // function:0x12=sha2, size:0x20=256 bits
      // and cut off leading "0x"
      var hashHex = '1220' + bytes32Hex.slice(2);
      var hashBytes = Buffer.from(hashHex, 'hex');
      var hashStr = _bs2.default.encode(hashBytes);
      return hashStr;
    }

    // Returns the first account listed, unless a default account has been set
    // explicitly

  }, {
    key: 'currentAccount',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var defaultAccount, accounts;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                defaultAccount = this.web3.eth.defaultAccount;

                if (!defaultAccount) {
                  _context4.next = 5;
                  break;
                }

                return _context4.abrupt('return', defaultAccount);

              case 5:
                _context4.next = 7;
                return this.web3.eth.getAccounts();

              case 7:
                accounts = _context4.sent;
                return _context4.abrupt('return', accounts[0]);

              case 9:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function currentAccount() {
        return _ref5.apply(this, arguments);
      }

      return currentAccount;
    }()

    // async convenience method for getting block details

  }, {
    key: 'getBlock',
    value: function getBlock(blockHash) {
      var _this3 = this;

      return new Promise(function (resolve, reject) {
        _this3.web3.eth.getBlock(blockHash, function (error, data) {
          if (error) {
            reject(error);
          } else {
            resolve(data);
          }
        });
      });
    }
  }, {
    key: 'getTimestamp',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(event) {
        var _ref7, timestamp;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.getBlock(event.blockHash);

              case 2:
                _ref7 = _context5.sent;
                timestamp = _ref7.timestamp;
                return _context5.abrupt('return', timestamp);

              case 5:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getTimestamp(_x3) {
        return _ref6.apply(this, arguments);
      }

      return getTimestamp;
    }()

    // async convenience method for getting transaction details

  }, {
    key: 'getTransaction',
    value: function getTransaction(transactionHash) {
      var _this4 = this;

      return new Promise(function (resolve, reject) {
        _this4.web3.eth.getTransaction(transactionHash, function (error, data) {
          if (error) {
            reject(error);
          } else {
            resolve(data);
          }
        });
      });
    }
  }, {
    key: 'deployed',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(contract, addrs) {
        var net, storedAddress;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.web3.eth.net.getId();

              case 2:
                net = _context6.sent;
                storedAddress = contract.networks[net] && contract.networks[net].address;

                addrs = addrs || storedAddress || null;
                return _context6.abrupt('return', new this.web3.eth.Contract(contract.abi, addrs));

              case 6:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function deployed(_x4, _x5) {
        return _ref8.apply(this, arguments);
      }

      return deployed;
    }()
  }, {
    key: 'getBytecode',
    value: function () {
      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(contract) {
        var _this5 = this;

        var net, bytecode, withLibraryAddresses;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.web3.eth.net.getId();

              case 2:
                net = _context7.sent;
                bytecode = contract.bytecode;
                withLibraryAddresses = bytecode.replace(/__[^_]+_+/g, function (matchedStr) {
                  var libraryName = matchedStr.replace(/_/g, '');
                  var library = _this5.libraries[libraryName];
                  var libraryAddress = library.networks[net] && library.networks[net].address;
                  var withoutPrefix = libraryAddress.slice(2);
                  return withoutPrefix;
                });
                return _context7.abrupt('return', withLibraryAddresses);

              case 6:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function getBytecode(_x6) {
        return _ref9.apply(this, arguments);
      }

      return getBytecode;
    }()
  }, {
    key: 'deploy',
    value: function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(contract, args, options) {
        var _this6 = this;

        var _ref11 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
            confirmationCallback = _ref11.confirmationCallback,
            transactionHashCallback = _ref11.transactionHashCallback;

        var bytecode, deployed, txReceipt;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.getBytecode(contract);

              case 2:
                bytecode = _context8.sent;
                _context8.next = 5;
                return this.deployed(contract);

              case 5:
                deployed = _context8.sent;
                _context8.next = 8;
                return new Promise(function (resolve, reject) {
                  deployed.deploy({
                    data: bytecode,
                    arguments: args
                  }).send(options).on('receipt', function (receipt) {
                    resolve(receipt);
                  })
                  //.on('confirmation', confirmationCallback)
                  //.on('transactionHash', transactionHashCallback)
                  // Workaround for "confirmationCallback" not being triggered with web3 version:1.0.0-beta.34
                  .on('transactionHash', function (hash) {
                    if (transactionHashCallback) transactionHashCallback(hash);
                    if (confirmationCallback) _this6.checkForDeploymentCompletion(hash, confirmationCallback);
                  }).on('error', function (err) {
                    return reject(err);
                  });
                });

              case 8:
                txReceipt = _context8.sent;
                return _context8.abrupt('return', txReceipt);

              case 10:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function deploy(_x8, _x9, _x10) {
        return _ref10.apply(this, arguments);
      }

      return deploy;
    }()

    /* confirmation callback does not get triggered in current version of web3 version:1.0.0-beta.34
     * so this function perpetually (until 20 confirmations) checks for presence of deployed contract.
     *
     * This could also be a problem in Ethereum node: https://github.com/ethereum/web3.js/issues/1255
     */

  }, {
    key: 'checkForDeploymentCompletion',
    value: function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(hash, confirmationCallback) {
        var _this7 = this;

        var transactionInfo, currentBlockNumber, confirmations;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.web3.eth.getTransaction(hash);

              case 2:
                transactionInfo = _context9.sent;

                if (!(transactionInfo === null || transactionInfo.blockNumber === null)) {
                  _context9.next = 7;
                  break;
                }

                setTimeout(function () {
                  _this7.checkForDeploymentCompletion(hash, confirmationCallback);
                }, 1500);
                _context9.next = 13;
                break;

              case 7:
                _context9.next = 9;
                return this.web3.eth.getBlockNumber();

              case 9:
                currentBlockNumber = _context9.sent;
                confirmations = currentBlockNumber - transactionInfo.blockNumber;

                confirmationCallback(confirmations, {
                  transactionHash: transactionInfo.hash
                });
                // do checks until NUMBER_CONFIRMATIONS_TO_REPORT block confirmations
                if (confirmations < NUMBER_CONFIRMATIONS_TO_REPORT) {
                  setTimeout(function () {
                    _this7.checkForDeploymentCompletion(hash, confirmationCallback);
                  }, 1500);
                }

              case 13:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function checkForDeploymentCompletion(_x11, _x12) {
        return _ref12.apply(this, arguments);
      }

      return checkForDeploymentCompletion;
    }()
  }, {
    key: 'call',
    value: function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(contractName, functionName) {
        var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

        var _ref14 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
            contractAddress = _ref14.contractAddress,
            from = _ref14.from,
            gas = _ref14.gas,
            value = _ref14.value,
            confirmationCallback = _ref14.confirmationCallback,
            transactionHashCallback = _ref14.transactionHashCallback,
            _ref14$additionalGas = _ref14.additionalGas,
            additionalGas = _ref14$additionalGas === undefined ? 0 : _ref14$additionalGas;

        var contractDefinition, opts, contract, method, transactionReceipt, block;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                contractDefinition = this.contracts[contractName];

                if (!(typeof contractDefinition === 'undefined')) {
                  _context10.next = 3;
                  break;
                }

                throw new Error('Contract not defined on contract service: ' + contractName);

              case 3:
                // Setup options
                opts = { from: from, gas: gas, value: value };
                _context10.t0 = opts.from;

                if (_context10.t0) {
                  _context10.next = 9;
                  break;
                }

                _context10.next = 8;
                return this.currentAccount();

              case 8:
                _context10.t0 = _context10.sent;

              case 9:
                opts.from = _context10.t0;
                _context10.next = 12;
                return this.deployed(contractDefinition);

              case 12:
                contract = _context10.sent;

                contract.options.address = contractAddress || contract.options.address;
                method = contract.methods[functionName].apply(contract, args);

                if (!method._method.constant) {
                  _context10.next = 19;
                  break;
                }

                _context10.next = 18;
                return method.call(opts);

              case 18:
                return _context10.abrupt('return', _context10.sent);

              case 19:
                _context10.t1 = opts.gas;

                if (_context10.t1) {
                  _context10.next = 24;
                  break;
                }

                _context10.next = 23;
                return method.estimateGas(opts);

              case 23:
                _context10.t1 = _context10.sent;

              case 24:
                _context10.t2 = _context10.t1;
                _context10.t3 = additionalGas;
                opts.gas = _context10.t2 + _context10.t3;
                _context10.next = 29;
                return new Promise(function (resolve, reject) {
                  method.send(opts).on('receipt', resolve).on('confirmation', confirmationCallback).on('transactionHash', transactionHashCallback).on('error', reject);
                });

              case 29:
                transactionReceipt = _context10.sent;
                _context10.next = 32;
                return this.web3.eth.getBlock(transactionReceipt.blockNumber);

              case 32:
                block = _context10.sent;
                return _context10.abrupt('return', {
                  // return current time in seconds if block is not found
                  timestamp: block ? block.timestamp : Math.floor(Date.now() / 1000),
                  transactionReceipt: transactionReceipt
                });

              case 34:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function call(_x15, _x16) {
        return _ref13.apply(this, arguments);
      }

      return call;
    }()

    // Convert money object to correct units for blockchain

  }, {
    key: 'moneyToUnits',
    value: function () {
      var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(money) {
        var currencies, currency, currencyDecimals, scaling;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!(money.currency === 'ETH')) {
                  _context11.next = 4;
                  break;
                }

                return _context11.abrupt('return', _web2.default.utils.toWei(money.amount, 'ether'));

              case 4:
                _context11.next = 6;
                return this.currencies();

              case 6:
                currencies = _context11.sent;
                currency = currencies[money.currency];
                // handle ERC20
                // TODO consider using ERCStandardDetailed.decimals() (for tokens that support this) so that we don't have to track decimals ourselves
                // https://github.com/OpenZeppelin/openzeppelin-solidity/blob/6c4c8989b399510a66d8b98ad75a0979482436d2/contracts/token/ERC20/ERC20Detailed.sol

                currencyDecimals = currency && currency.decimals;

                if (!currencyDecimals) {
                  _context11.next = 14;
                  break;
                }

                scaling = (0, _bignumber2.default)(10).exponentiatedBy(currencyDecimals);
                return _context11.abrupt('return', (0, _bignumber2.default)(money.amount).multipliedBy(scaling).toString());

              case 14:
                return _context11.abrupt('return', money.amount);

              case 15:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function moneyToUnits(_x17) {
        return _ref15.apply(this, arguments);
      }

      return moneyToUnits;
    }()
  }]);

  return ContractService;
}();

exports.default = ContractService;

/***/ }),

/***/ "./src/services/ipfs-service.js":
/*!**************************************!*\
  !*** ./src/services/ipfs-service.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * IPFS interface
 */

var MapCache = __webpack_require__(/*! map-cache */ "map-cache");
var fetch = __webpack_require__(/*! cross-fetch */ "cross-fetch");
var FormData = __webpack_require__(/*! form-data */ "form-data");

var Ports = {
  http: '80',
  https: '443'
};

var IpfsService = function () {
  function IpfsService() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        ipfsGatewayProtocol = _ref.ipfsGatewayProtocol,
        ipfsDomain = _ref.ipfsDomain,
        ipfsGatewayPort = _ref.ipfsGatewayPort,
        ipfsApiPort = _ref.ipfsApiPort;

    _classCallCheck(this, IpfsService);

    this.gateway = ipfsGatewayProtocol + '://' + ipfsDomain;
    this.api = ipfsGatewayProtocol + '://' + ipfsDomain;

    if (ipfsGatewayPort && Ports[ipfsGatewayProtocol] !== ipfsGatewayPort) {
      this.gateway += ':' + ipfsGatewayPort;
    }
    if (ipfsApiPort && Ports[ipfsGatewayProtocol] !== ipfsApiPort) {
      this.api += ':' + ipfsApiPort;
    }

    this.mapCache = new MapCache();
  }

  /**
   * Convert an object to a JSON blob and submit it to IPFS.
   *
   * obj {string} - object to save as file
   */


  _createClass(IpfsService, [{
    key: 'saveObjAsFile',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(obj) {
        var file, ipfsHash;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                file = void 0;

                if (typeof Blob === 'undefined') {
                  file = Buffer.from(JSON.stringify(obj));
                } else {
                  file = new Blob([JSON.stringify(obj)]);
                }

                _context.next = 4;
                return this.saveFile(file);

              case 4:
                ipfsHash = _context.sent;

                // Cache the object
                this.mapCache.set(ipfsHash, obj);
                return _context.abrupt('return', ipfsHash);

              case 7:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function saveObjAsFile(_x2) {
        return _ref2.apply(this, arguments);
      }

      return saveObjAsFile;
    }()

    /**
     * Convert a data URI into a blob and submit it to IPFS.
     *
     * dataUri {string} - data uri to convert
     */

  }, {
    key: 'saveDataURIAsFile',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dataURI) {
        var mimeString, binary, buffer, i, file;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                // Extract the mime type
                mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
                // Decode b64 encoded component

                binary = new Buffer(dataURI.split(',')[1], 'base64').toString('binary');
                buffer = new Uint8Array(binary.length);

                for (i = 0; i < binary.length; i++) {
                  buffer[i] = binary.charCodeAt(i);
                }

                file = void 0;

                if (typeof Blob === 'undefined') {
                  file = Buffer.from([buffer]);
                } else {
                  file = new Blob([buffer], { type: mimeString });
                }

                _context2.next = 8;
                return this.saveFile(file);

              case 8:
                return _context2.abrupt('return', _context2.sent);

              case 9:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function saveDataURIAsFile(_x3) {
        return _ref3.apply(this, arguments);
      }

      return saveDataURIAsFile;
    }()
  }, {
    key: 'saveFile',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(file) {
        var formData, rawRes, result;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                formData = new FormData();

                formData.append('file', file);
                _context3.next = 5;
                return fetch(this.api + '/api/v0/add', {
                  method: 'POST',
                  body: formData
                });

              case 5:
                rawRes = _context3.sent;
                _context3.next = 8;
                return rawRes.json();

              case 8:
                result = _context3.sent;
                return _context3.abrupt('return', result.Hash);

              case 12:
                _context3.prev = 12;
                _context3.t0 = _context3['catch'](0);
                throw new Error('Failure to submit file to IPFS', _context3.t0);

              case 15:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 12]]);
      }));

      function saveFile(_x4) {
        return _ref4.apply(this, arguments);
      }

      return saveFile;
    }()

    /**
     * Load a file from IPFS and parse the contents into an object.
     *
     * Used in conjuction with saveObjAsFile to save and retrieve objects into IPFS.
     *
     * ipfsHash {string} - hash of the ipfs file containing the object to load
     */

  }, {
    key: 'loadObjFromFile',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(ipfsHash) {
        var response, obj;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!this.mapCache.has(ipfsHash)) {
                  _context4.next = 2;
                  break;
                }

                return _context4.abrupt('return', this.mapCache.get(ipfsHash));

              case 2:
                _context4.next = 4;
                return this.loadFile(ipfsHash);

              case 4:
                response = _context4.sent;
                obj = response.json();

                this.mapCache.set(ipfsHash, obj);
                return _context4.abrupt('return', obj);

              case 8:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function loadObjFromFile(_x5) {
        return _ref5.apply(this, arguments);
      }

      return loadObjFromFile;
    }()
  }, {
    key: 'loadFile',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(ipfsHash) {
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.prev = 0;
                _context5.next = 3;
                return fetch(this.gatewayUrlForHash(ipfsHash));

              case 3:
                return _context5.abrupt('return', _context5.sent);

              case 6:
                _context5.prev = 6;
                _context5.t0 = _context5['catch'](0);
                throw new Error('Failure to get IPFS file', _context5.t0);

              case 9:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this, [[0, 6]]);
      }));

      function loadFile(_x6) {
        return _ref6.apply(this, arguments);
      }

      return loadFile;
    }()
  }, {
    key: 'gatewayUrlForHash',
    value: function gatewayUrlForHash(ipfsHashStr) {
      return this.gateway + '/ipfs/' + ipfsHashStr;
    }

    /**
     * Rewrites a URL to use the configured IPFS gateway.
     *
     * @param {array} url - the url to be rewritten
     */

  }, {
    key: 'rewriteUrl',
    value: function rewriteUrl(url) {
      if (url.startsWith('ipfs://')) {
        // Rewrite ipfs: URLs
        var ipfsHash = url.replace('ipfs://', '');
        return this.gatewayUrlForHash(ipfsHash);
      } else if (url.startsWith('dweb://ipfs/')) {
        // Rewrite dweb://ipfs URLs
        var _ipfsHash = url.replace('dweb://ipfs/', '');
        return this.gatewayUrlForHash(_ipfsHash);
      }
      // Leave data: URLs untouched
      return url;
    }
  }]);

  return IpfsService;
}();

exports.default = IpfsService;

/***/ }),

/***/ "./src/utils/cookieStorage.js":
/*!************************************!*\
  !*** ./src/utils/cookieStorage.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// implementation is a modification of cookied localstorage from: https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage

var DEFAULT_SECONDS_TIMEOUT = 3600 * 24 * 90; // expire key in three months per Josh

var cookieStorage = function () {
  function cookieStorage(_ref) {
    var path = _ref.path,
        _ref$expireSeconds = _ref.expireSeconds,
        expireSeconds = _ref$expireSeconds === undefined ? DEFAULT_SECONDS_TIMEOUT : _ref$expireSeconds;

    _classCallCheck(this, cookieStorage);

    this.path = path;
    this.expireSeconds = expireSeconds;
    var cookies = (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object' && document.cookie && document.cookie.match(/=/g);
    this.length = cookies ? cookies.length : 0;
  }

  _createClass(cookieStorage, [{
    key: 'getItem',
    value: function getItem(sKey) {
      if (!sKey || !this.hasOwnProperty(sKey)) {
        return null;
      }
      return unescape(document.cookie.replace(new RegExp('(?:^|.*;\\s*)' + escape(sKey).replace(/[-.+*]/g, '\\$&') + '\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*'), '$1'));
    }
  }, {
    key: 'key',
    value: function key(nKeyId) {
      return unescape(document.cookie.replace(/\s*=(?:.(?!;))*$/, '').split(/\s*=(?:[^;](?!;))*[^;]?;\s*/)[nKeyId]);
    }
  }, {
    key: 'setItem',
    value: function setItem(sKey, sValue) {
      if (!sKey) {
        return;
      }
      var expires = new Date();
      expires.setTime(expires.getTime() + 1000 * this.expireSeconds);
      document.cookie = escape(sKey) + '=' + escape(sValue) + '; expires=' + expires.toGMTString() + '; path=' + this.path;
      this.length = document.cookie.match(/=/g).length;
    }
  }, {
    key: 'removeItem',
    value: function removeItem(sKey) {
      if (!sKey || !this.hasOwnProperty(sKey)) {
        return;
      }
      document.cookie = escape(sKey) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';
      this.length--;
    }
  }, {
    key: 'hasOwnProperty',
    value: function hasOwnProperty(sKey) {
      return new RegExp('(?:^|;\\s*)' + escape(sKey).replace(/[-.+*]/g, '\\$&') + '\\s*\\=').test(document.cookie);
    }
  }]);

  return cookieStorage;
}();

exports.default = cookieStorage;

/***/ }),

/***/ "./src/utils/id.js":
/*!*************************!*\
  !*** ./src/utils/id.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var separator = '-';

function parseListingId(listingId) {
  if (typeof listingId !== 'string') {
    throw new Error('Listing id ' + listingId + ' must be a string');
  }
  var exploded = listingId.split(separator);
  if (exploded.length < 3) {
    throw new Error('Invalid listing id: ' + listingId);
  }

  var _exploded = _slicedToArray(exploded, 3),
      network = _exploded[0],
      version = _exploded[1],
      listingIndex = _exploded[2];

  return { network: network, version: version, listingIndex: listingIndex };
}

function generateListingId(_ref) {
  var version = _ref.version,
      network = _ref.network,
      listingIndex = _ref.listingIndex;

  return [network, version, listingIndex].join(separator);
}

function parseOfferId(offerId) {
  if (typeof offerId !== 'string') {
    throw new Error('Offer id ' + offerId + ' must be a string');
  }
  var exploded = offerId.split(separator);
  if (exploded.length < 4) {
    throw new Error('Invalid offer id: ' + offerId);
  }

  var _exploded2 = _slicedToArray(exploded, 4),
      network = _exploded2[0],
      version = _exploded2[1],
      listingIndex = _exploded2[2],
      offerIndex = _exploded2[3];

  return { network: network, version: version, listingIndex: listingIndex, offerIndex: offerIndex };
}

function generateOfferId(_ref2) {
  var version = _ref2.version,
      network = _ref2.network,
      listingIndex = _ref2.listingIndex,
      offerIndex = _ref2.offerIndex;

  return [network, version, listingIndex, offerIndex].join(separator);
}

function parseNotificationId(notificationId) {
  if (typeof notificationId !== 'string') {
    throw new Error('Notification id ' + notificationId + ' must be a string');
  }
  var exploded = notificationId.split(separator);
  if (exploded.length < 3) {
    throw new Error('Invalid notification id: ' + notificationId);
  }

  var _exploded3 = _slicedToArray(exploded, 3),
      network = _exploded3[0],
      version = _exploded3[1],
      transactionHash = _exploded3[2];

  return { network: network, version: version, transactionHash: transactionHash };
}

function generateNotificationId(_ref3) {
  var version = _ref3.version,
      network = _ref3.network,
      transactionHash = _ref3.transactionHash;

  return [network, version, transactionHash].join(separator);
}

module.exports = {
  parseListingId: parseListingId,
  generateListingId: generateListingId,
  parseOfferId: parseOfferId,
  generateOfferId: generateOfferId,
  parseNotificationId: parseNotificationId,
  generateNotificationId: generateNotificationId
};

/***/ }),

/***/ 0:
/*!*******************************************!*\
  !*** multi babel-polyfill ./src/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! babel-polyfill */"babel-polyfill");
module.exports = __webpack_require__(/*! ./src/index.js */"./src/index.js");


/***/ }),

/***/ "ajv":
/*!**********************!*\
  !*** external "ajv" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("ajv");

/***/ }),

/***/ "ajv/lib/refs/json-schema-draft-06.json":
/*!*********************************************************!*\
  !*** external "ajv/lib/refs/json-schema-draft-06.json" ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("ajv/lib/refs/json-schema-draft-06.json");

/***/ }),

/***/ "babel-polyfill":
/*!*********************************!*\
  !*** external "babel-polyfill" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("babel-polyfill");

/***/ }),

/***/ "bignumber.js":
/*!*******************************!*\
  !*** external "bignumber.js" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("bignumber.js");

/***/ }),

/***/ "bs58":
/*!***********************!*\
  !*** external "bs58" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("bs58");

/***/ }),

/***/ "cross-fetch":
/*!******************************!*\
  !*** external "cross-fetch" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("cross-fetch");

/***/ }),

/***/ "crypto-js":
/*!****************************!*\
  !*** external "crypto-js" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("crypto-js");

/***/ }),

/***/ "crypto-random-string":
/*!***************************************!*\
  !*** external "crypto-random-string" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("crypto-random-string");

/***/ }),

/***/ "ethereumjs-util":
/*!**********************************!*\
  !*** external "ethereumjs-util" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("ethereumjs-util");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),

/***/ "form-data":
/*!****************************!*\
  !*** external "form-data" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("form-data");

/***/ }),

/***/ "map-cache":
/*!****************************!*\
  !*** external "map-cache" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("map-cache");

/***/ }),

/***/ "rlp":
/*!**********************!*\
  !*** external "rlp" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("rlp");

/***/ }),

/***/ "secp256k1":
/*!****************************!*\
  !*** external "secp256k1" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("secp256k1");

/***/ }),

/***/ "store":
/*!************************!*\
  !*** external "store" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("store");

/***/ }),

/***/ "url-parse":
/*!****************************!*\
  !*** external "url-parse" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("url-parse");

/***/ }),

/***/ "web3":
/*!***********************!*\
  !*** external "web3" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("web3");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,